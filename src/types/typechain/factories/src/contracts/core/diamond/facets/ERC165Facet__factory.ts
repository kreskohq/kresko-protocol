/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  ERC165Facet,
  ERC165FacetInterface,
} from '../../../../../../src/contracts/core/diamond/facets/ERC165Facet';

const _abi = [
  {
    inputs: [],
    name: 'STRING_HEX_LENGTH_INSUFFICIENT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes4[]',
        name: 'interfaceIds',
        type: 'bytes4[]',
      },
      {
        internalType: 'bytes4[]',
        name: 'interfaceIdsToRemove',
        type: 'bytes4[]',
      },
    ],
    name: 'setERC165',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506107bb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780632a8480911461009b575b600080fd5b61008761004936600461052f565b6001600160e01b03191660009081527f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0c602052604090205460ff1690565b604051901515815260200160405180910390f35b6100ae6100a93660046105a5565b6100b0565b005b7fb9dacdf02281f2e98ddbadaaf44db270b3d5a916342df47c59f77937a6bcd5d86100da816101ef565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0960005b8581101561017057600182600301600089898581811061012057610120610611565b9050602002016020810190610135919061052f565b6001600160e01b03191681526020810191909152604001600020805460ff1916911515919091179055806101688161063d565b9150506100fe565b5060005b838110156101e657600082600301600087878581811061019657610196610611565b90506020020160208101906101ab919061052f565b6001600160e01b03191681526020810191909152604001600020805460ff1916911515919091179055806101de8161063d565b915050610174565b50505050505050565b610200816101fb610203565b61026c565b50565b600030330361026657600080368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505036015173ffffffffffffffffffffffffffffffffffffffff1691506102699050565b50335b90565b6102768282610304565b6103005761029b8173ffffffffffffffffffffffffffffffffffffffff16601461035d565b6102a683602061035d565b6040516020016102b792919061067a565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102f7916004016106fb565b60405180910390fd5b5050565b60008281527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815c6020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff165b92915050565b6060600061036c83600261072e565b610377906002610745565b67ffffffffffffffff81111561038f5761038f610758565b6040519080825280601f01601f1916602001820160405280156103b9576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103f0576103f0610611565b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061043b5761043b610611565b60200101906001600160f81b031916908160001a905350600061045f84600261072e565b61046a906001610745565b90505b60018111156104ef577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106104ab576104ab610611565b1a60f81b8282815181106104c1576104c1610611565b60200101906001600160f81b031916908160001a90535060049490941c936104e88161076e565b905061046d565b508315610528576040517ff4c71c1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60006020828403121561054157600080fd5b81356001600160e01b03198116811461052857600080fd5b60008083601f84011261056b57600080fd5b50813567ffffffffffffffff81111561058357600080fd5b6020830191508360208260051b850101111561059e57600080fd5b9250929050565b600080600080604085870312156105bb57600080fd5b843567ffffffffffffffff808211156105d357600080fd5b6105df88838901610559565b909650945060208701359150808211156105f857600080fd5b5061060587828801610559565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161064f5761064f610627565b5060010190565b60005b83811015610671578181015183820152602001610659565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516106b2816017850160208801610656565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516106ef816028840160208801610656565b01602801949350505050565b602081526000825180602084015261071a816040850160208701610656565b601f01601f19169190910160400192915050565b808202811582820484141761035757610357610627565b8082018082111561035757610357610627565b634e487b7160e01b600052604160045260246000fd5b60008161077d5761077d610627565b50600019019056fea264697066735822122029adad3b78c9564d8caa25aa928e7c7379494862a0d57863f156fc4829b6b46d64736f6c63430008150033';

type ERC165FacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ERC165FacetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class ERC165Facet__factory extends ContractFactory {
  constructor(...args: ERC165FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ERC165Facet';
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ERC165Facet> {
    return super.deploy(overrides || {}) as Promise<ERC165Facet>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC165Facet {
    return super.attach(address) as ERC165Facet;
  }
  override connect(signer: Signer): ERC165Facet__factory {
    return super.connect(signer) as ERC165Facet__factory;
  }
  static readonly contractName: 'ERC165Facet';

  public readonly contractName: 'ERC165Facet';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC165FacetInterface {
    return new utils.Interface(_abi) as ERC165FacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC165Facet {
    return new Contract(address, _abi, signerOrProvider) as ERC165Facet;
  }
}
