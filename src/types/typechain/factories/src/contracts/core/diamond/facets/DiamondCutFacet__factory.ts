/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from '../../../../../../src/contracts/core/diamond/facets/DiamondCutFacet';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'ADDRESS_HAS_NO_CODE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    name: 'DIAMOND_FUNCTION_ALREADY_EXISTS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_INCORRECT_FACET_CUT_ACTION',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_INIT_ADDRESS_ZERO_BUT_CALLDATA_NOT_EMPTY',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DIAMOND_INIT_FAILED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_INIT_NOT_ZERO_BUT_CALLDATA_IS_EMPTY',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DIAMOND_NO_FACET_SELECTORS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DIAMOND_REMOVE_FUNCTIONS_NONZERO_FACET_ADDRESS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_REMOVE_FUNCTION_FACET_IS_ZERO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_REPLACE_FUNCTION_DUPLICATE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'STRING_HEX_LENGTH_INSUFFICIENT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZERO_ADDRESS',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'facetAddress',
            type: 'address',
          },
          {
            internalType: 'enum FacetCutAction',
            name: 'action',
            type: 'uint8',
          },
          {
            internalType: 'bytes4[]',
            name: 'functionSelectors',
            type: 'bytes4[]',
          },
        ],
        indexed: false,
        internalType: 'struct FacetCut[]',
        name: '_diamondCut',
        type: 'tuple[]',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_init',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: '_calldata',
        type: 'bytes',
      },
    ],
    name: 'DiamondCut',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'facetAddress',
            type: 'address',
          },
          {
            internalType: 'enum FacetCutAction',
            name: 'action',
            type: 'uint8',
          },
          {
            internalType: 'bytes4[]',
            name: 'functionSelectors',
            type: 'bytes4[]',
          },
        ],
        internalType: 'struct FacetCut[]',
        name: '_diamondCut',
        type: 'tuple[]',
      },
      {
        internalType: 'address',
        name: '_init',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_calldata',
        type: 'bytes',
      },
    ],
    name: 'diamondCut',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_init',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_calldata',
        type: 'bytes',
      },
    ],
    name: 'upgradeState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506116dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631f931c1c1461003b57806333400db014610050575b600080fd5b61004e6100493660046110db565b610063565b005b61004e61005e36600461118d565b6100eb565b7fb9dacdf02281f2e98ddbadaaf44db270b3d5a916342df47c59f77937a6bcd5d861008d8161015b565b6100e361009a8688611274565b8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db925061016f915050565b929190610193565b505050505050565b7fb9dacdf02281f2e98ddbadaaf44db270b3d5a916342df47c59f77937a6bcd5d86101158161015b565b6101558484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061039692505050565b50505050565b61016c81610167610508565b610564565b50565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0990565b60005b83518110156103545760008482815181106101b3576101b36113b8565b6020026020010151602001519050600060028111156101d4576101d46113ce565b8160028111156101e6576101e66113ce565b0361023f5761023a858381518110610200576102006113b8565b60200260200101516000015186848151811061021e5761021e6113b8565b602002602001015160400151886105c89092919063ffffffff16565b610341565b6001816002811115610253576102536113ce565b036102a75761023a85838151811061026d5761026d6113b8565b60200260200101516000015186848151811061028b5761028b6113b8565b602002602001015160400151886107ca9092919063ffffffff16565b60028160028111156102bb576102bb6113ce565b0361030f5761023a8583815181106102d5576102d56113b8565b6020026020010151600001518684815181106102f3576102f36113b8565b602002602001015160400151886109b29092919063ffffffff16565b6040517f13e8b12000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508061034c816113fa565b915050610196565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161038893929190611463565b60405180910390a161015582825b6001600160a01b0382161580156103ae575060008151115b156103e5576040517fc847ee9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382161561050457805160000361042f576040517f0f484e3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043882610a9d565b600080836001600160a01b0316836040516104539190611562565b600060405180830381855af49150503d806000811461048e576040519150601f19603f3d011682016040523d82523d6000602084013e610493565b606091505b509150915081610155578051156104c7578060405162461bcd60e51b81526004016104be919061157e565b60405180910390fd5b6040517f749d8a700000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016104be565b5050565b600030330361055e57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506105619050565b50335b90565b61056e8282610ae5565b61050457610586816001600160a01b03166014610b31565b610591836020610b31565b6040516020016105a2929190611591565b60408051601f198184030181529082905262461bcd60e51b82526104be9160040161157e565b80516000036105f557604051637384b7af60e01b81526001600160a01b03831660048201526024016104be565b6001600160a01b03821661061c5760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b0382166000908152600184016020526040812054906bffffffffffffffffffffffff82169003610657576106578484610d03565b60005b82518110156107c3576000838281518110610677576106776113b8565b6020908102919091018101516001600160e01b031981166000908152918890526040909120549091506001600160a01b03168015610704576040517feddd0bfd0000000000000000000000000000000000000000000000000000000081526001600160a01b038088166004830152821660248201526001600160e01b0319831660448201526064016104be565b6001600160e01b0319821660008181526020898152604080832080546001600160a01b03908116600160a01b6bffffffffffffffffffffffff8c16021782558b168085526001808e0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925289905281546001600160a01b031916179055836107ab81611612565b945050505080806107bb906113fa565b91505061065a565b5050505050565b80516000036107f757604051637384b7af60e01b81526001600160a01b03831660048201526024016104be565b6001600160a01b03821661081e5760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b0382166000908152600184016020526040812054906bffffffffffffffffffffffff82169003610859576108598484610d03565b60005b82518110156107c3576000838281518110610879576108796113b8565b6020908102919091018101516001600160e01b031981166000908152918890526040909120549091506001600160a01b0390811690861681036108e8576040517f3f43552200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f3878284610d54565b6001600160e01b0319821660008181526020898152604080832080546001600160a01b03908116600160a01b6bffffffffffffffffffffffff8c16021782558b168085526001808e0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925289905281546001600160a01b0319161790558361099a81611612565b945050505080806109aa906113fa565b91505061085c565b80516000036109df57604051637384b7af60e01b81526001600160a01b03831660048201526024016104be565b6001600160a01b03821615610a2b576040517f1f2024930000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016104be565b60005b8151811015610155576000828281518110610a4b57610a4b6113b8565b6020908102919091018101516001600160e01b031981166000908152918790526040909120549091506001600160a01b0316610a88868284610d54565b50508080610a95906113fa565b915050610a2e565b803b6000819003610504576040517f5989b03c0000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016104be565b60008281527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815c602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60606000610b4083600261163d565b610b4b906002611654565b67ffffffffffffffff811115610b6357610b636111e0565b6040519080825280601f01601f191660200182016040528015610b8d576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610bc457610bc46113b8565b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610c0f57610c0f6113b8565b60200101906001600160f81b031916908160001a9053506000610c3384600261163d565b610c3e906001611654565b90505b6001811115610cc3577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610c7f57610c7f6113b8565b1a60f81b828281518110610c9557610c956113b8565b60200101906001600160f81b031916908160001a90535060049490941c93610cbc81611667565b9050610c41565b508315610cfc576040517ff4c71c1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b610d0c81610a9d565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b038216610d94576040517f7590f70a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046bffffffffffffffffffffffff169291610de89161167e565b9050808214610edf576001600160a01b03841660009081526001860160205260408120805483908110610e1d57610e1d6113b8565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e6e57610e6e6113b8565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6bffffffffffffffffffffffff8516021790555b6001600160a01b03841660009081526001860160205260409020805480610f0857610f08611691565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036107c3576002850154600090610f6b9060019061167e565b6001600160a01b038616600090815260018089016020526040909120015490915080821461101a576000876002018381548110610faa57610faa6113b8565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610fdb57610fdb6113b8565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b8660020180548061102d5761102d611691565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b80356001600160a01b038116811461108d57600080fd5b919050565b60008083601f8401126110a457600080fd5b50813567ffffffffffffffff8111156110bc57600080fd5b6020830191508360208285010111156110d457600080fd5b9250929050565b6000806000806000606086880312156110f357600080fd5b853567ffffffffffffffff8082111561110b57600080fd5b818801915088601f83011261111f57600080fd5b81358181111561112e57600080fd5b8960208260051b850101111561114357600080fd5b6020830197508096505061115960208901611076565b9450604088013591508082111561116f57600080fd5b5061117c88828901611092565b969995985093965092949392505050565b6000806000604084860312156111a257600080fd5b6111ab84611076565b9250602084013567ffffffffffffffff8111156111c757600080fd5b6111d386828701611092565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611219576112196111e0565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611248576112486111e0565b604052919050565b600067ffffffffffffffff82111561126a5761126a6111e0565b5060051b60200190565b600061128761128284611250565b61121f565b83815260208082019190600586811b8601368111156112a557600080fd5b865b818110156113ab57803567ffffffffffffffff808211156112c85760008081fd5b818a019150606082360312156112de5760008081fd5b6112e66111f6565b6112ef83611076565b815286830135600381106113035760008081fd5b818801526040838101358381111561131b5760008081fd5b939093019236601f85011261133257600092508283fd5b8335925061134261128284611250565b83815292871b8401880192888101903685111561135f5760008081fd5b948901945b848610156113945785356001600160e01b0319811681146113855760008081fd5b82529489019490890190611364565b9183019190915250885250509483019483016112a7565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161140c5761140c6113e4565b5060010190565b60005b8381101561142e578181015183820152602001611416565b50506000910152565b6000815180845261144f816020860160208601611413565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561153257607f198a850301865281518885016001600160a01b03825116865284820151600381106114d157634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b8083101561151d5783516001600160e01b03191682529286019260019290920191908601906114f3565b5097850197955050509082019060010161148c565b50506001600160a01b038a169088015286810360408801526115548189611437565b9a9950505050505050505050565b60008251611574818460208701611413565b9190910192915050565b602081526000610cfc6020830184611437565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516115c9816017850160208801611413565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611606816028840160208801611413565b01602801949350505050565b60006bffffffffffffffffffffffff808316818103611633576116336113e4565b6001019392505050565b8082028115828204841417610b2b57610b2b6113e4565b80820180821115610b2b57610b2b6113e4565b600081611676576116766113e4565b506000190190565b81810381811115610b2b57610b2b6113e4565b634e487b7160e01b600052603160045260246000fdfea264697066735822122052617311dc9ff88cd7e42f733ef997747a50e081567ec89f44c82a7b4195a04164736f6c63430008150033';

type DiamondCutFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DiamondCutFacetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DiamondCutFacet';
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }
  static readonly contractName: 'DiamondCutFacet';

  public readonly contractName: 'DiamondCutFacet';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
