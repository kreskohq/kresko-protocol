/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  DiamondOwnershipFacet,
  DiamondOwnershipFacetInterface,
} from '../../../../../../src/contracts/core/diamond/facets/DiamondOwnershipFacet';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'NOT_OWNER',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'pendingOwner',
        type: 'address',
      },
    ],
    name: 'NOT_PENDING_OWNER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZERO_ADDRESS',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'PendingOwnershipTransfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialized',
    outputs: [
      {
        internalType: 'bool',
        name: 'initialized_',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: 'owner_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [
      {
        internalType: 'address',
        name: 'pendingOwner_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610463806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100c8578063e30c39781461010c578063f2fde38b1461013c57600080fd5b8063158ef93e1461006c57806379ba5097146100be575b600080fd5b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0d5474010000000000000000000000000000000000000000900460ff1660405190151581526020015b60405180910390f35b6100c661014f565b005b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0f546001600160a01b03165b6040516001600160a01b0390911681526020016100b5565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f10546001600160a01b03166100f4565b6100c661014a3660046103fd565b61017a565b6101787f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f096101a7565b565b6101a47f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0982610287565b50565b60006101b16103a1565b60078301549091506001600160a01b0380831691161461021b5760078201546040517f7bc0ba020000000000000000000000000000000000000000000000000000000081526001600160a01b03808416600483015290911660248201526044015b60405180910390fd5b60078201805460068401805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038085169182179093559216909255604051918316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60068201546001600160a01b031661029d6103a1565b6001600160a01b0316146102fd576102b36103a1565b60068301546040517f83f519120000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015291166024820152604401610212565b6001600160a01b03811661033d576040517f538ba4f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60078201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038381169182179092556006840154604051919216907f23e1f881d1e797ea57a7247e53536f0bfc37c42e6645b3bdc4b1c9a0e0d8a13390600090a35050565b60003033036103f757600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506103fa9050565b50335b90565b60006020828403121561040f57600080fd5b81356001600160a01b038116811461042657600080fd5b939250505056fea2646970667358221220110f39a250d4e8795dbccc052cbe8f6b1aeace1f5dcd3e611c18976c210f704764736f6c63430008150033';

type DiamondOwnershipFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DiamondOwnershipFacetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DiamondOwnershipFacet__factory extends ContractFactory {
  constructor(...args: DiamondOwnershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DiamondOwnershipFacet';
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<DiamondOwnershipFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondOwnershipFacet>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondOwnershipFacet {
    return super.attach(address) as DiamondOwnershipFacet;
  }
  override connect(signer: Signer): DiamondOwnershipFacet__factory {
    return super.connect(signer) as DiamondOwnershipFacet__factory;
  }
  static readonly contractName: 'DiamondOwnershipFacet';

  public readonly contractName: 'DiamondOwnershipFacet';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondOwnershipFacetInterface {
    return new utils.Interface(_abi) as DiamondOwnershipFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DiamondOwnershipFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondOwnershipFacet;
  }
}
