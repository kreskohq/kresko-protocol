/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IDiamondOwnershipFacet,
  IDiamondOwnershipFacetInterface,
} from '../../../../../../src/contracts/core/diamond/interfaces/IDiamondOwnershipFacet';

const _abi = [
  {
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialized',
    outputs: [
      {
        internalType: 'bool',
        name: 'initialized_',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: 'owner_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [
      {
        internalType: 'address',
        name: 'pendingOwner_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IDiamondOwnershipFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IDiamondOwnershipFacetInterface {
    return new utils.Interface(_abi) as IDiamondOwnershipFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IDiamondOwnershipFacet {
    return new Contract(address, _abi, signerOrProvider) as IDiamondOwnershipFacet;
  }
}
