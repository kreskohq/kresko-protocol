/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  ConfigurationFacet,
  ConfigurationFacetInterface,
} from '../../../../../../src/contracts/core/minter/facets/ConfigurationFacet';

const _abi = [
  {
    inputs: [],
    name: 'ALREADY_INITIALIZED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'COLLATERAL_DOES_NOT_EXIST',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_CFACTOR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_KFACTOR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_LIQ_INCENTIVE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_LT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_MCR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_MLR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'KRASSET_DOES_NOT_EXIST',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'NOT_OWNER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'STRING_HEX_LENGTH_INSUFFICIENT',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'cFactor',
        type: 'uint256',
      },
    ],
    name: 'CFactorUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'version',
        type: 'uint96',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'kreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'kFactor',
        type: 'uint256',
      },
    ],
    name: 'KFactorUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liqIncentiveMultiplier',
        type: 'uint256',
      },
    ],
    name: 'LiquidationIncentiveMultiplierUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidationThreshold',
        type: 'uint256',
      },
    ],
    name: 'LiquidationThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newMaxLiquidationRatio',
        type: 'uint256',
      },
    ],
    name: 'MaxLiquidationRatioUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minCollateralRatio',
        type: 'uint256',
      },
    ],
    name: 'MinimumCollateralizationRatioUpdated',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
        ],
        internalType: 'struct MinterInitArgs',
        name: 'args',
        type: 'tuple',
      },
    ],
    name: 'initializeMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newFactor',
        type: 'uint16',
      },
    ],
    name: 'updateCollateralFactor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newFactor',
        type: 'uint16',
      },
    ],
    name: 'updateKFactor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newLiqIncentive',
        type: 'uint16',
      },
    ],
    name: 'updateLiquidationIncentive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newThreshold',
        type: 'uint32',
      },
    ],
    name: 'updateLiquidationThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newMaxLiquidationRatio',
        type: 'uint32',
      },
    ],
    name: 'updateMaxLiquidationRatio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newMinCollateralRatio',
        type: 'uint32',
      },
    ],
    name: 'updateMinCollateralRatio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '';

type ConfigurationFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ConfigurationFacetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class ConfigurationFacet__factory extends ContractFactory {
  constructor(...args: ConfigurationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ConfigurationFacet';
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ConfigurationFacet> {
    return super.deploy(overrides || {}) as Promise<ConfigurationFacet>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConfigurationFacet {
    return super.attach(address) as ConfigurationFacet;
  }
  override connect(signer: Signer): ConfigurationFacet__factory {
    return super.connect(signer) as ConfigurationFacet__factory;
  }
  static readonly contractName: 'ConfigurationFacet';

  public readonly contractName: 'ConfigurationFacet';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigurationFacetInterface {
    return new utils.Interface(_abi) as ConfigurationFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ConfigurationFacet {
    return new Contract(address, _abi, signerOrProvider) as ConfigurationFacet;
  }
}
