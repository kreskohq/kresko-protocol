/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IConfigurationFacet,
  IConfigurationFacetInterface,
} from '../../../../../../src/contracts/core/minter/interfaces/IConfigurationFacet';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
        ],
        internalType: 'struct MinterInitArgs',
        name: 'args',
        type: 'tuple',
      },
    ],
    name: 'initializeMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newFactor',
        type: 'uint16',
      },
    ],
    name: 'updateCollateralFactor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_kFactor',
        type: 'uint16',
      },
    ],
    name: 'updateKFactor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newLiquidationIncentive',
        type: 'uint16',
      },
    ],
    name: 'updateLiquidationIncentive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newThreshold',
        type: 'uint32',
      },
    ],
    name: 'updateLiquidationThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newMaxLiquidationRatio',
        type: 'uint32',
      },
    ],
    name: 'updateMaxLiquidationRatio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newMinCollateralRatio',
        type: 'uint32',
      },
    ],
    name: 'updateMinCollateralRatio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IConfigurationFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IConfigurationFacetInterface {
    return new utils.Interface(_abi) as IConfigurationFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IConfigurationFacet {
    return new Contract(address, _abi, signerOrProvider) as IConfigurationFacet;
  }
}
