/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../common';
import type {
  SDICoverRecipient,
  SDICoverRecipientInterface,
} from '../../../../../src/contracts/core/scdp/SDICoverRecipient';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'acceptOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'changeOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516104ce3803806104ce83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61043b806100936000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a6f9dae111610050578063a6f9dae1146100b0578063d9caed12146100c3578063e30c3978146100d657600080fd5b806351710e451461006c5780638da5cb5b14610081575b600080fd5b61007f61007a366004610385565b6100e9565b005b600054610094906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007f6100be366004610385565b61017e565b61007f6100d13660046103a7565b6101f3565b600154610094906001600160a01b031681565b6001546001600160a01b031633146101485760405162461bcd60e51b815260206004820152601160248201527f6e6f742d70656e64696e672d6f776e657200000000000000000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0390921673ffffffffffffffffffffffffffffffffffffffff19928316179055600180549091169055565b6000546001600160a01b031633146101c45760405162461bcd60e51b81526020600482015260096024820152683737ba16b7bbb732b960b91b604482015260640161013f565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102395760405162461bcd60e51b81526020600482015260096024820152683737ba16b7bbb732b960b91b604482015260640161013f565b816001600160a01b03163b6000036102935760405162461bcd60e51b815260206004820152600d60248201527f726563697069656e742d656f6100000000000000000000000000000000000000604482015260640161013f565b6001600160a01b0383166102dd576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156102d7573d6000803e3d6000fd5b50505050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906103e3565b80356001600160a01b038116811461038057600080fd5b919050565b60006020828403121561039757600080fd5b6103a082610369565b9392505050565b6000806000606084860312156103bc57600080fd5b6103c584610369565b92506103d360208501610369565b9150604084013590509250925092565b6000602082840312156103f557600080fd5b815180151581146103a057600080fdfea264697066735822122044dbd77da2d942f2e6dd3455610fac4e848de589baac6ba4abbc888eb036d3d464736f6c63430008150033';

type SDICoverRecipientConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SDICoverRecipientConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SDICoverRecipient__factory extends ContractFactory {
  constructor(...args: SDICoverRecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SDICoverRecipient';
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<SDICoverRecipient> {
    return super.deploy(_owner, overrides || {}) as Promise<SDICoverRecipient>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): SDICoverRecipient {
    return super.attach(address) as SDICoverRecipient;
  }
  override connect(signer: Signer): SDICoverRecipient__factory {
    return super.connect(signer) as SDICoverRecipient__factory;
  }
  static readonly contractName: 'SDICoverRecipient';

  public readonly contractName: 'SDICoverRecipient';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SDICoverRecipientInterface {
    return new utils.Interface(_abi) as SDICoverRecipientInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SDICoverRecipient {
    return new Contract(address, _abi, signerOrProvider) as SDICoverRecipient;
  }
}
