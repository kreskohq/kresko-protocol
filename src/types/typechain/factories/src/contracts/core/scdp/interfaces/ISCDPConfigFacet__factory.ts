/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  ISCDPConfigFacet,
  ISCDPConfigFacetInterface,
} from '../../../../../../src/contracts/core/scdp/interfaces/ISCDPConfigFacet';

const _abi = [
  {
    inputs: [],
    name: 'getCurrentParametersSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'swapFeeRecipient',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint8',
            name: 'sdiPricePrecision',
            type: 'uint8',
          },
        ],
        internalType: 'struct SCDPInitArgs',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'swapFeeRecipient',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint8',
            name: 'sdiPricePrecision',
            type: 'uint8',
          },
        ],
        internalType: 'struct SCDPInitArgs',
        name: '_init',
        type: 'tuple',
      },
    ],
    name: 'initializeSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_enabled',
        type: 'bool',
      },
    ],
    name: 'setCollateralSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_enabled',
        type: 'bool',
      },
    ],
    name: 'setDepositAssetSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'setFeeAssetSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_enabled',
        type: 'bool',
      },
    ],
    name: 'setKrAssetSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_lt',
        type: 'uint32',
      },
    ],
    name: 'setLiquidationThresholdSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_mlr',
        type: 'uint32',
      },
    ],
    name: 'setMaxLiquidationRatioSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_mcr',
        type: 'uint32',
      },
    ],
    name: 'setMinCollateralRatioSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_krAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_openFee',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: '_closeFee',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: '_protocolFee',
        type: 'uint16',
      },
    ],
    name: 'setSwapFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'assetIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'assetOut',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'enabled',
            type: 'bool',
          },
        ],
        internalType: 'struct PairSetter[]',
        name: '_setters',
        type: 'tuple[]',
      },
    ],
    name: 'setSwapPairs',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'assetIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'assetOut',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'enabled',
            type: 'bool',
          },
        ],
        internalType: 'struct PairSetter',
        name: '_setter',
        type: 'tuple',
      },
    ],
    name: 'setSwapPairsSingle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        internalType: 'uint128',
        name: '_newDepositLimit',
        type: 'uint128',
      },
    ],
    name: 'updateDepositLimitSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_krAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newLiquidationIncentive',
        type: 'uint16',
      },
    ],
    name: 'updateLiquidationIncentiveSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class ISCDPConfigFacet__factory {
  static readonly abi = _abi;
  static createInterface(): ISCDPConfigFacetInterface {
    return new utils.Interface(_abi) as ISCDPConfigFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ISCDPConfigFacet {
    return new Contract(address, _abi, signerOrProvider) as ISCDPConfigFacet;
  }
}
