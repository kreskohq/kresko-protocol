/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type { SmockInit, SmockInitInterface } from '../../../../../../src/contracts/core/test/smocks/SmockInit';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'NOT_OWNER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SAFETY_COUNCIL_NOT_ALLOWED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'STRING_HEX_LENGTH_INSUFFICIENT',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
    ],
    name: 'Call',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'version',
        type: 'uint96',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    inputs: [],
    name: 'getBool',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNumber',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'upgradeState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610a7f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312a7b91414610051578063ab16687914610065578063c4d66de8146100b3578063f2c9ecd8146100c6575b600080fd5b604051600081526020015b60405180910390f35b6100b17f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0d80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b005b6100b16100c13660046108c5565b6100d5565b6040516001815260200161005c565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0f546001600160a01b0316610108610312565b6001600160a01b03161461018a5761011e610312565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0f546040517f83f519120000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b7fb9dacdf02281f2e98ddbadaaf44db270b3d5a916342df47c59f77937a6bcd5d86101b48161036e565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f09600601546001600160a01b031633146102305760405162461bcd60e51b815260206004820152601660248201527f5769746853746f726167653a204e6f74206f776e6572000000000000000000006044820152606401610181565b61023982610382565b6102637f78568ec36e22260a8c0f6c7ce4425ffdb86b4ee55173ba81d2c6222e4bde396a83610466565b7f16b90369000000000000000000000000000000000000000000000000000000006000527f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0c60209081527f41c8bd9a3f5bf7c2ccfd621158bb0f45123058345850bd275b31094112aafe1d805460ff19166001908117909155604080519182525133927f94675b964f30c4a84c4ee98bd8964a23de3d815be42d925168f12e18145a1e0e928290030190a25050565b600030330361036857600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b0316915061036b9050565b50335b90565b61037f8161037a610312565b6104ae565b50565b7f67301b4e5cd5524778597dc615896d3b917dbc55199870fdeb8c8cb13d6fa0de805460408051808201909152601381527f416c726561647920696e697469616c697a65640000000000000000000000000060208201529060ff16156103fb5760405162461bcd60e51b81526004016101819190610912565b5080546001600160a01b03831662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ff0090911617600117815560405133907f14132cc4b70ff72fc431320e27440c1369a17f8c25a51a3e172a05e097e6bfb790600090a25050565b60008281527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815c60205260409020600101546104a09061036e565b6104aa8282610512565b5050565b6104b88282610648565b6104aa576104d0816001600160a01b03166014610694565b6104db836020610694565b6040516020016104ec929190610945565b60408051601f198184030181529082905262461bcd60e51b825261018191600401610912565b817f63c78130e99c06ebba6a66c1d39fd4ba216b40745c5eef34cf1c9ad2864a7e40810161056c576040517f65fa585100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105768383610648565b6106435760008381527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815c602090815260408083206001600160a01b03861684528252808320805460ff191660011790558583527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815d90915290206105f99083610866565b50610602610312565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b505050565b60008281527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815c602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b606060006106a38360026109dc565b6106ae9060026109f3565b67ffffffffffffffff8111156106c6576106c6610a06565b6040519080825280601f01601f1916602001820160405280156106f0576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061072757610727610a1c565b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061077257610772610a1c565b60200101906001600160f81b031916908160001a90535060006107968460026109dc565b6107a19060016109f3565b90505b6001811115610826577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106107e2576107e2610a1c565b1a60f81b8282815181106107f8576107f8610a1c565b60200101906001600160f81b031916908160001a90535060049490941c9361081f81610a32565b90506107a4565b50831561085f576040517ff4c71c1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600061085f836001600160a01b03841660008181526001830160205260408120546108bd5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561068e565b50600061068e565b6000602082840312156108d757600080fd5b81356001600160a01b038116811461085f57600080fd5b60005b838110156109095781810151838201526020016108f1565b50506000910152565b60208152600082518060208401526109318160408501602087016108ee565b601f01601f19169190910160400192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161097d8160178501602088016108ee565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516109ba8160288401602088016108ee565b01602801949350505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761068e5761068e6109c6565b8082018082111561068e5761068e6109c6565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610a4157610a416109c6565b50600019019056fea26469706673582212206fe76d712717613a67a67737403dc5afbdbb2b4de86f83f8c2ec4d5c0bea3e0864736f6c63430008150033';

type SmockInitConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SmockInitConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SmockInit__factory extends ContractFactory {
  constructor(...args: SmockInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SmockInit';
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<SmockInit> {
    return super.deploy(overrides || {}) as Promise<SmockInit>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SmockInit {
    return super.attach(address) as SmockInit;
  }
  override connect(signer: Signer): SmockInit__factory {
    return super.connect(signer) as SmockInit__factory;
  }
  static readonly contractName: 'SmockInit';

  public readonly contractName: 'SmockInit';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmockInitInterface {
    return new utils.Interface(_abi) as SmockInitInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SmockInit {
    return new Contract(address, _abi, signerOrProvider) as SmockInit;
  }
}
