/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { ISmockFacet, ISmockFacetInterface } from '../../../../../../src/contracts/core/test/smocks/ISmockFacet';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'NewMessage',
    type: 'event',
  },
  {
    inputs: [],
    name: 'activate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'setMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class ISmockFacet__factory {
  static readonly abi = _abi;
  static createInterface(): ISmockFacetInterface {
    return new utils.Interface(_abi) as ISmockFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ISmockFacet {
    return new Contract(address, _abi, signerOrProvider) as ISmockFacet;
  }
}
