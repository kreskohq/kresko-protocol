/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  SmockCollateralReceiver,
  SmockCollateralReceiverInterface,
} from '../../../../../../src/contracts/core/test/smocks/SmockCollateralReceiver';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kresko',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CalldataMustHaveValidPayload',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CalldataOverOrUnderFlow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'EachSignerMustProvideTheSameValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'EmptyCalldataPointersArr',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IncorrectUnsignedMetadataSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'receivedSignersCount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'requiredSignersCount',
        type: 'uint256',
      },
    ],
    name: 'InsufficientNumberOfUniqueSigners',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCalldataPointer',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'result',
        type: 'bytes',
      },
    ],
    name: 'ProxyCalldataFailedWithCustomError',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'ProxyCalldataFailedWithStringMessage',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ProxyCalldataFailedWithoutErrMsg',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receivedSigner',
        type: 'address',
      },
    ],
    name: 'SignerNotAuthorised',
    type: 'error',
  },
  {
    inputs: [],
    name: 'account',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collateralAsset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'kresko',
    outputs: [
      {
        internalType: 'contract IDepositWithdrawFacet',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_withdrawalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_depositedCollateralAssetIndex',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_userData',
        type: 'bytes',
      },
    ],
    name: 'onUncheckedCollateralWithdraw',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'test',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralWithdraw',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_collateralDeposit',
        type: 'address',
      },
    ],
    name: 'testDepositAlternate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'testInsufficientRedeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'testRedeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'testWithdrawalAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'userData',
    outputs: [
      {
        internalType: 'uint256',
        name: 'val',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'val1',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawalAmountReceived',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawalAmountRequested',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161115d38038061115d83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6110ca806100936000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063ba14d60611610081578063da44cb781161005b578063da44cb78146101d3578063e9fde352146101e6578063f1ec06cd1461020657600080fd5b8063ba14d6061461016e578063bea6998f14610181578063d77e128c146101c057600080fd5b80635dab2420116100b25780635dab24201461011d578063aabaecd614610148578063aeff7a121461015b57600080fd5b80630a077d9a146100d9578063364e51da146100ee57806341b1aac51461010a575b600080fd5b6100ec6100e7366004610d38565b61020f565b005b6100f760035481565b6040519081526020015b60405180910390f35b6100ec610118366004610d38565b610220565b600154610130906001600160a01b031681565b6040516001600160a01b039091168152602001610101565b600254610130906001600160a01b031681565b6100ec610169366004610d64565b61022d565b6100ec61017c366004610d38565b610277565b60055460065460075461019c9291906001600160a01b031683565b6040805193845260208401929092526001600160a01b031690820152606001610101565b600054610130906001600160a01b031681565b6100ec6101e1366004610d38565b610284565b6101f96101f4366004610ded565b610291565b6040516101019190610f0b565b6100f760045481565b61021c82826102d96103d3565b5050565b61021c828261040d6103d3565b604080516020810184905260009181018290526001600160a01b038316606082015260800160405160208183030381529060405290506102718484836105006106a9565b50505050565b61021c82826107b76103d3565b61021c82826108516103d3565b60606102c086868685600060149054906101000a90048015610d16021767ffffffffffffffff1663ffffffff16565b5060408051602081019091526000815295945050505050565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03868116919091179091556040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015283918516906370a0823190602401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103819190610f1e565b146102715760405162461bcd60e51b815260206004820152601560248201527f77726f6e6720616d6f756e74207265636569766564000000000000000000000060448201526064015b60405180910390fd5b60408051602081018490526000918101829052606081018290526080016040516020818303038152906040529050610271848483856106a9565b600482815560005460405163095ea7b360e01b81526001600160a01b03918216928101929092526001602483015284169063095ea7b3906044016020604051808303816000875af1158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190610f37565b5060005460405163f970c3b760e01b81526001600160a01b0386811660048301528581166024830152600160448301529091169063f970c3b7906064015b600060405180830381600087803b1580156104e257600080fd5b505af11580156104f6573d6000803e3d6000fd5b5050505050505050565b808060200190518101906105149190610f59565b8051600581905560208201516006556040918201516007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03928316908117909155600486815593517f23b872dd0000000000000000000000000000000000000000000000000000000081529188169382019390935230602482015260448101919091526323b872dd906064016020604051808303816000875af11580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e39190610f37565b5060075460005460055460405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af115801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190610f37565b5060005460075460055460405163f970c3b760e01b81526001600160a01b0388811660048301529283166024820152604481019190915291169063f970c3b7906064016104c8565b600080547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000067ffffffffffffffff84160217815560038490556040517f74d5f7c400000000000000000000000000000000000000000000000000000000906107349033908890889086908990602401610fbb565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152600080549192506107af916001600160a01b0316908390610910565b505050505050565b600180546001600160a01b0380871673ffffffffffffffffffffffffffffffffffffffff199283161790925560028054928616929091169190911790556004829055805161080e9082016020908101908301610f59565b80516005556020810151600655604001516007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905550505050565b600482815560005460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820184905284169063095ea7b3906044016020604051808303816000875af11580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190610f37565b5060005460405163f970c3b760e01b81526001600160a01b0386811660048301528581166024830152604482018590529091169063f970c3b7906064016104c8565b6060600061091d846109a4565b9050600080866001600160a01b03168561093857600061093a565b345b846040516109489190610ff6565b60006040518083038185875af1925050503d8060008114610985576040519150601f19603f3d011682016040523d82523d6000602084013e61098a565b606091505b50915091506109998282610a33565b979650505050505050565b805160609060006109b3610afe565b905060006109c18284611028565b9050368211156109e457604051632bcb7bc560e11b815260040160405180910390fd5b6060604051905081815285602001848101826020015b81831015610a125782518152602092830192016109fa565b50505082833603856020018301379190920181016020016040529392505050565b606082610af5578151600003610a75576040517f567fe27a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602082015162461bcd60e51b148015610ac1576040517f0f7e827800000000000000000000000000000000000000000000000000000000815260448401906103ca908290600401610f0b565b826040517ffd36fde30000000000000000000000000000000000000000000000000000000081526004016103ca9190610f0b565b50805b92915050565b600080610b09610b69565b90506000610b1682610c49565b61ffff169050610b27600283611028565b915060005b81811015610b61576000610b3f84610c83565b9050610b4b8185611028565b9350508080610b599061103b565b915050610b2c565b509092915050565b60006602ed57011e0000601f1936013581161480610bb3576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610bd757604051632bcb7bc560e11b815260040160405180910390fd5b5060281936013560006009610bf2600362ffffff8516611028565b610bfc9190611028565b905036610c0a600283611028565b1115610c42576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080610c57602084611028565b905036811115610c7a57604051632bcb7bc560e11b815260040160405180910390fd5b36033592915050565b6000806000610c9184610cbf565b9092509050604e610ca3826020611028565b610cad9084611054565b610cb79190611028565b949350505050565b600080808080610cd0604187611028565b90506000610cdf602083611028565b610ce9903661106b565b803594509050610cfa60038261106b565b62ffffff9490941697933563ffffffff16965092945050505050565b610d1e61107e565b565b6001600160a01b0381168114610d3557600080fd5b50565b60008060408385031215610d4b57600080fd5b8235610d5681610d20565b946020939093013593505050565b600080600060608486031215610d7957600080fd5b8335610d8481610d20565b9250602084013591506040840135610d9b81610d20565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610de557610de5610da6565b604052919050565b600080600080600060a08688031215610e0557600080fd5b8535610e1081610d20565b9450602086810135610e2181610d20565b94506040870135935060608701359250608087013567ffffffffffffffff80821115610e4c57600080fd5b818901915089601f830112610e6057600080fd5b813581811115610e7257610e72610da6565b610e84601f8201601f19168501610dbc565b91508082528a84828501011115610e9a57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60005b83811015610ed6578181015183820152602001610ebe565b50506000910152565b60008151808452610ef7816020860160208601610ebb565b601f01601f19169290920160200192915050565b602081526000610c426020830184610edf565b600060208284031215610f3057600080fd5b5051919050565b600060208284031215610f4957600080fd5b81518015158114610c4257600080fd5b600060608284031215610f6b57600080fd5b6040516060810181811067ffffffffffffffff82111715610f8e57610f8e610da6565b806040525082518152602083015160208201526040830151610faf81610d20565b60408201529392505050565b60006001600160a01b03808816835280871660208401525084604083015260ff8416606083015260a0608083015261099960a0830184610edf565b60008251611008818460208701610ebb565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610af857610af8611012565b60006001820161104d5761104d611012565b5060010190565b8082028115828204841417610af857610af8611012565b81810381811115610af857610af8611012565b634e487b7160e01b600052605160045260246000fdfea26469706673582212204811c68d1a69f0aa6b18675a41620af369e3d5ae4f975ca1e6adfe8fa65f2d6364736f6c63430008150033';

type SmockCollateralReceiverConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmockCollateralReceiverConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmockCollateralReceiver__factory extends ContractFactory {
  constructor(...args: SmockCollateralReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SmockCollateralReceiver';
  }

  override deploy(
    _kresko: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<SmockCollateralReceiver> {
    return super.deploy(_kresko, overrides || {}) as Promise<SmockCollateralReceiver>;
  }
  override getDeployTransaction(
    _kresko: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_kresko, overrides || {});
  }
  override attach(address: string): SmockCollateralReceiver {
    return super.attach(address) as SmockCollateralReceiver;
  }
  override connect(signer: Signer): SmockCollateralReceiver__factory {
    return super.connect(signer) as SmockCollateralReceiver__factory;
  }
  static readonly contractName: 'SmockCollateralReceiver';

  public readonly contractName: 'SmockCollateralReceiver';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmockCollateralReceiverInterface {
    return new utils.Interface(_abi) as SmockCollateralReceiverInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SmockCollateralReceiver {
    return new Contract(address, _abi, signerOrProvider) as SmockCollateralReceiver;
  }
}
