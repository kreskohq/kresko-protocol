/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../common';
import type { WETH9, WETH9Interface } from '../../../../../src/contracts/core/vendor/WETH9';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'guy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Withdrawal',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'guy',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c060405260046080908152630ae8aa8960e31b60a0526000906100239082610107565b5060408051808201909152600d81526c2bb930b83832b21022ba3432b960991b60208201526001906100559082610107565b5034801561006257600080fd5b506101c6565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009257607f821691505b6020821081036100b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010257600081815260208120601f850160051c810160208610156100df5750805b601f850160051c820191505b818110156100fe578281556001016100eb565b5050505b505050565b81516001600160401b0381111561012057610120610068565b6101348161012e845461007e565b846100b8565b602080601f83116001811461016957600084156101515750858301515b600019600386901b1c1916600185901b1785556100fe565b600085815260208120601f198616915b8281101561019857888601518255948401946001909101908401610179565b50858210156101b65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610858806101d56000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101d9578063d0e30db0146101f9578063dd62ed3e1461020157600080fd5b8063313ce5671461017b57806370a082311461019757806395d89b41146101c457600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd146101395780632e1a7d4d1461015957600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610239565b6040516100e39190610675565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046106df565b6102c7565b60405190151581526020016100e3565b34801561012857600080fd5b50475b6040519081526020016100e3565b34801561014557600080fd5b5061010c610154366004610709565b610334565b34801561016557600080fd5b50610179610174366004610745565b610521565b005b34801561018757600080fd5b50604051601281526020016100e3565b3480156101a357600080fd5b5061012b6101b236600461075e565b60026020526000908152604090205481565b3480156101d057600080fd5b506100d66105f9565b3480156101e557600080fd5b5061010c6101f43660046106df565b610606565b61017961061a565b34801561020d57600080fd5b5061012b61021c366004610779565b600360209081526000928352604080842090915290825290205481565b60008054610246906107ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610272906107ac565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b505050505081565b3360008181526003602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103229086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600260205260408120548211156103905760405162461bcd60e51b815260206004820152600c60248201526b2ba2aa241c9d1022b93937b960a11b60448201526064015b60405180910390fd5b6001600160a01b03841633148015906103ce57506001600160a01b038416600090815260036020908152604080832033845290915290205460001914155b1561046e576001600160a01b03841660009081526003602090815260408083203384529091529020548211156104355760405162461bcd60e51b815260206004820152600c60248201526b2ba2aa241c9d1022b93937b960a11b6044820152606401610387565b6001600160a01b0384166000908152600360209081526040808320338452909152812080548492906104689084906107fc565b90915550505b6001600160a01b038416600090815260026020526040812080548492906104969084906107fc565b90915550506001600160a01b038316600090815260026020526040812080548492906104c390849061080f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161050f91815260200190565b60405180910390a35060019392505050565b3360009081526002602052604090205481111561056f5760405162461bcd60e51b815260206004820152600c60248201526b2ba2aa241c9d1022b93937b960a11b6044820152606401610387565b336000908152600260205260408120805483929061058e9084906107fc565b9091555050604051339082156108fc029083906000818181858888f193505050501580156105c0573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b60018054610246906107ac565b6000610613338484610334565b9392505050565b336000908152600260205260408120805434929061063990849061080f565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600060208083528351808285015260005b818110156106a257858101830151858201604001528201610686565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106da57600080fd5b919050565b600080604083850312156106f257600080fd5b6106fb836106c3565b946020939093013593505050565b60008060006060848603121561071e57600080fd5b610727846106c3565b9250610735602085016106c3565b9150604084013590509250925092565b60006020828403121561075757600080fd5b5035919050565b60006020828403121561077057600080fd5b610613826106c3565b6000806040838503121561078c57600080fd5b610795836106c3565b91506107a3602084016106c3565b90509250929050565b600181811c908216806107c057607f821691505b6020821081036107e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561032e5761032e6107e6565b8082018082111561032e5761032e6107e656fea2646970667358221220cb1d2e9fe0239a21e30fb19fdd7c2478fab43f7da90046d2ca25c21ed70e9bb164736f6c63430008150033';

type WETH9ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: WETH9ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH9__factory extends ContractFactory {
  constructor(...args: WETH9ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'WETH9';
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<WETH9> {
    return super.deploy(overrides || {}) as Promise<WETH9>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WETH9 {
    return super.attach(address) as WETH9;
  }
  override connect(signer: Signer): WETH9__factory {
    return super.connect(signer) as WETH9__factory;
  }
  static readonly contractName: 'WETH9';

  public readonly contractName: 'WETH9';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETH9Interface {
    return new utils.Interface(_abi) as WETH9Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH9 {
    return new Contract(address, _abi, signerOrProvider) as WETH9;
  }
}
