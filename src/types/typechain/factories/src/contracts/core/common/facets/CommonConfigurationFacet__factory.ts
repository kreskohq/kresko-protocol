/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  CommonConfigurationFacet,
  CommonConfigurationFacetInterface,
} from '../../../../../../src/contracts/core/common/facets/CommonConfigurationFacet';

const _abi = [
  {
    inputs: [],
    name: 'ALREADY_INITIALIZED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'invalid',
        type: 'address',
      },
    ],
    name: 'INVALID_FEE_RECIPIENT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_MIN_DEBT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_ORACLE_DEVIATION',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'NOT_OWNER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SAFETY_COUNCIL_ALREADY_EXISTS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'SAFETY_COUNCIL_INVALID_ADDRESS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SAFETY_COUNCIL_NOT_ALLOWED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'STRING_HEX_LENGTH_INSUFFICIENT',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'feeRecipient',
        type: 'address',
      },
    ],
    name: 'FeeRecipientUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'version',
        type: 'uint96',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minDebtValue',
        type: 'uint256',
      },
    ],
    name: 'MinimumDebtValueUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'admin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'council',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'treasury',
            type: 'address',
          },
          {
            internalType: 'uint64',
            name: 'minDebtValue',
            type: 'uint64',
          },
          {
            internalType: 'uint16',
            name: 'oracleDeviationPct',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'oracleDecimals',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'sequencerUptimeFeed',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'sequencerGracePeriodTime',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeout',
            type: 'uint32',
          },
          {
            internalType: 'address',
            name: 'kreskian',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'questForKresk',
            type: 'address',
          },
          {
            internalType: 'uint8',
            name: 'phase',
            type: 'uint8',
          },
        ],
        internalType: 'struct CommonInitArgs',
        name: 'args',
        type: 'tuple',
      },
    ],
    name: 'initializeCommon',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_decimals',
        type: 'uint8',
      },
    ],
    name: 'updateExtOracleDecimals',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newFeeRecipient',
        type: 'address',
      },
    ],
    name: 'updateFeeRecipient',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskian',
        type: 'address',
      },
    ],
    name: 'updateKreskian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_newMinDebtValue',
        type: 'uint96',
      },
    ],
    name: 'updateMinDebtValue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_oracleDeviationPct',
        type: 'uint16',
      },
    ],
    name: 'updateOracleDeviationPct',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_oracleTimeout',
        type: 'uint32',
      },
    ],
    name: 'updateOracleTimeout',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_phase',
        type: 'uint8',
      },
    ],
    name: 'updatePhase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_questForKresk',
        type: 'address',
      },
    ],
    name: 'updateQuestForKresk',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_sequencerGracePeriodTime',
        type: 'uint32',
      },
    ],
    name: 'updateSequencerGracePeriodTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sequencerUptimeFeed',
        type: 'address',
      },
    ],
    name: 'updateSequencerUptimeFeed',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50611649806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638c32908d11610081578063ec856b8a1161005b578063ec856b8a14610168578063f160d3691461017b578063fc6849621461018e57600080fd5b80638c32908d1461012f57806396f8fc1d14610142578063cf3d8e531461015557600080fd5b806324216586116100b257806324216586146100f657806356c890a2146101095780637347e4231461011c57600080fd5b80630a714666146100ce5780631f9a613a146100e3575b600080fd5b6100e16100dc36600461123b565b6101a1565b005b6100e16100f1366004611256565b61022c565b6100e161010436600461129b565b610333565b6100e161011736600461133f565b61039a565b6100e161012a36600461142b565b610701565b6100e161013d36600461129b565b6107dc565b6100e161015036600461129b565b610843565b6100e1610163366004611446565b6108aa565b6100e161017636600461123b565b61091d565b6100e161018936600461129b565b610993565b6100e161019c366004611446565b610a6d565b6000805160206115f48339815191526101b981610afb565b507fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815a805463ffffffff9092167801000000000000000000000000000000000000000000000000027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff909216919091179055565b6000805160206115f483398151915261024481610afb565b64174876e800826bffffffffffffffffffffffff1611156102b1576040517f830f47740000000000000000000000000000000000000000000000000000000081526bffffffffffffffffffffffff8316600482015264174876e80060248201526044015b60405180910390fd5b817fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815660030180546001600160a01b0316600160a01b6bffffffffffffffffffffffff9384160217905560405190831681527fbd32948ccd208f8bfa0001b72381d8ba95fbbe73788f0954df68689ef6d111ae9060200160405180910390a15050565b6000805160206115f483398151915261034b81610afb565b507f67398c2f160987626e2d95480732bf0d51ddae3d0416e666c81ef21aed433a72805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0f546001600160a01b03166103cd610b0f565b6001600160a01b03161461044a576103e3610b0f565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0f546040517f83f519120000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152911660248201526044016102a8565b7f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0960070154600160a01b90046bffffffffffffffffffffffff166001146104bd576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60017fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815b556104ec600033610b6b565b6105046000805160206115f483398151915233610b6b565b805161051290600090610b6b565b805161052d906000805160206115f483398151915290610b6b565b61053a8160200151610ca1565b6105478160400151610993565b61055e816060015167ffffffffffffffff1661022c565b61056b8160a00151610a6d565b6105788160c00151610843565b6105858160800151610701565b6105928160e0015161091d565b6105a08161010001516101a1565b6105ae8161016001516108aa565b6105bc8161012001516107dc565b6105ca816101400151610333565b7f2360c304000000000000000000000000000000000000000000000000000000006000527f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f0c6020527faac6e8eab9163aabc0c0aa49ce57168cf364e3c5cb5a7673c04f1430a209201d805460ff191660011790557f080f9836d135d84bdc1ee0b4214e5f2ae76516c41178c6f14a73685c9c3e5f10805433917f94675b964f30c4a84c4ee98bd8964a23de3d815be42d925168f12e18145a1e0e916bffffffffffffffffffffffff600160a01b909104169060146106a783611477565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506040516106f691906bffffffffffffffffffffffff91909116815260200190565b60405180910390a250565b6000805160206115f483398151915261071981610afb565b6127108261ffff161115610767576040517f3989942400000000000000000000000000000000000000000000000000000000815261ffff8316600482015261271060248201526044016102a8565b507fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815a805461ffff9092167c0100000000000000000000000000000000000000000000000000000000027fffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff909216919091179055565b6000805160206115f48339815191526107f481610afb565b507f67398c2f160987626e2d95480732bf0d51ddae3d0416e666c81ef21aed433a71805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000805160206115f483398151915261085b81610afb565b507fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815a805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000805160206115f48339815191526108c281610afb565b507f67398c2f160987626e2d95480732bf0d51ddae3d0416e666c81ef21aed433a72805460ff909216600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6000805160206115f483398151915261093581610afb565b507fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815a805463ffffffff909216600160a01b027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6000805160206115f48339815191526109ab81610afb565b6001600160a01b0382166109f6576040517ff0e608120000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016102a8565b7fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba978159805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091556040517f7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc290600090a25050565b6000805160206115f4833981519152610a8581610afb565b507fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815a805460ff9092167e01000000000000000000000000000000000000000000000000000000000000027fff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909216919091179055565b610b0c81610b07610b0f565b610ede565b50565b6000303303610b6557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610b689050565b50335b90565b817f63c78130e99c06ebba6a66c1d39fd4ba216b40745c5eef34cf1c9ad2864a7e408101610bc5576040517f65fa585100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bcf8383610f60565b610c9c5760008381527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815c602090815260408083206001600160a01b03861684528252808320805460ff191660011790558583527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815d9091529020610c529083610fac565b50610c5b610b0f565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b505050565b610cca7f9c387ecf1663f9144595993e2c602b45de94bf8ba3a110cb30e3652d79b581c0610fc8565b15610d01576040517f9bbd973d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f2f54bf6e0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b03821690632f54bf6e90602401602060405180830381865afa158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8291906114a2565b610dc3576040517fe7883ea90000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016102a8565b6001600160a01b03811660009081527f8b68aa1ef01b5f260728bf751f4bc4069cbb3a59b20fb425b77b640639b483e4602090815260408220805460ff191660011790557f9c387ecf1663f9144595993e2c602b45de94bf8ba3a110cb30e3652d79b581c09091527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815d9052610e787fc3b76b2e6ebea09dd974b89fd572e492e218c56dec00beb24fbfda190125366782610fac565b50610e81610b0f565b6040516001600160a01b03918216918316907f9c387ecf1663f9144595993e2c602b45de94bf8ba3a110cb30e3652d79b581c0907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d90600090a450565b610ee88282610f60565b610f5c57610f00816001600160a01b03166014610ffe565b610f0b836020610ffe565b604051602001610f1c9291906114e8565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102a891600401611569565b5050565b60008281527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815c602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b6000610fc1836001600160a01b0384166111c9565b9392505050565b60008181527fd6577bbd1315995ef7d02da632fcee9ea37575f42959077f04433a81ba97815d60205260408120610fa690611218565b6060600061100d83600261159c565b6110189060026115b3565b67ffffffffffffffff811115611030576110306112b6565b6040519080825280601f01601f19166020018201604052801561105a576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611091576110916115c6565b60200101906001600160f81b031916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106110dc576110dc6115c6565b60200101906001600160f81b031916908160001a905350600061110084600261159c565b61110b9060016115b3565b90505b6001811115611190577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061114c5761114c6115c6565b1a60f81b828281518110611162576111626115c6565b60200101906001600160f81b031916908160001a90535060049490941c93611189816115dc565b905061110e565b508315610fc1576040517ff4c71c1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260018301602052604081205461121057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610fa6565b506000610fa6565b6000610fa6825490565b803563ffffffff8116811461123657600080fd5b919050565b60006020828403121561124d57600080fd5b610fc182611222565b60006020828403121561126857600080fd5b81356bffffffffffffffffffffffff81168114610fc157600080fd5b80356001600160a01b038116811461123657600080fd5b6000602082840312156112ad57600080fd5b610fc182611284565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156112fe57634e487b7160e01b600052604160045260246000fd5b60405290565b803567ffffffffffffffff8116811461123657600080fd5b803561ffff8116811461123657600080fd5b803560ff8116811461123657600080fd5b6000610180828403121561135257600080fd5b61135a6112cc565b61136383611284565b815261137160208401611284565b602082015261138260408401611284565b604082015261139360608401611304565b60608201526113a46080840161131c565b60808201526113b560a0840161132e565b60a08201526113c660c08401611284565b60c08201526113d760e08401611222565b60e08201526101006113ea818501611222565b908201526101206113fc848201611284565b9082015261014061140e848201611284565b9082015261016061142084820161132e565b908201529392505050565b60006020828403121561143d57600080fd5b610fc18261131c565b60006020828403121561145857600080fd5b610fc18261132e565b634e487b7160e01b600052601160045260246000fd5b60006bffffffffffffffffffffffff80831681810361149857611498611461565b6001019392505050565b6000602082840312156114b457600080fd5b81518015158114610fc157600080fd5b60005b838110156114df5781810151838201526020016114c7565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516115208160178501602088016114c4565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161155d8160288401602088016114c4565b01602801949350505050565b60208152600082518060208401526115888160408501602087016114c4565b601f01601f19169190910160400192915050565b8082028115828204841417610fa657610fa6611461565b80820180821115610fa657610fa6611461565b634e487b7160e01b600052603260045260246000fd5b6000816115eb576115eb611461565b50600019019056feb9dacdf02281f2e98ddbadaaf44db270b3d5a916342df47c59f77937a6bcd5d8a2646970667358221220557773006a0f21a316810fca233296fae8409a177186999300c5dfa3814bc3c464736f6c63430008150033';

type CommonConfigurationFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommonConfigurationFacetConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommonConfigurationFacet__factory extends ContractFactory {
  constructor(...args: CommonConfigurationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommonConfigurationFacet';
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<CommonConfigurationFacet> {
    return super.deploy(overrides || {}) as Promise<CommonConfigurationFacet>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CommonConfigurationFacet {
    return super.attach(address) as CommonConfigurationFacet;
  }
  override connect(signer: Signer): CommonConfigurationFacet__factory {
    return super.connect(signer) as CommonConfigurationFacet__factory;
  }
  static readonly contractName: 'CommonConfigurationFacet';

  public readonly contractName: 'CommonConfigurationFacet';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommonConfigurationFacetInterface {
    return new utils.Interface(_abi) as CommonConfigurationFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommonConfigurationFacet {
    return new Contract(address, _abi, signerOrProvider) as CommonConfigurationFacet;
  }
}
