/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  ICommonConfigurationFacet,
  ICommonConfigurationFacetInterface,
} from '../../../../../../src/contracts/core/common/interfaces/ICommonConfigurationFacet';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_decimals',
        type: 'uint8',
      },
    ],
    name: 'updateExtOracleDecimals',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newFeeRecipient',
        type: 'address',
      },
    ],
    name: 'updateFeeRecipient',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskian',
        type: 'address',
      },
    ],
    name: 'updateKreskian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_newMinDebtValue',
        type: 'uint96',
      },
    ],
    name: 'updateMinDebtValue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_oracleDeviationPct',
        type: 'uint16',
      },
    ],
    name: 'updateOracleDeviationPct',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_oracleTimeout',
        type: 'uint32',
      },
    ],
    name: 'updateOracleTimeout',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_phase',
        type: 'uint8',
      },
    ],
    name: 'updatePhase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_questForKresk',
        type: 'address',
      },
    ],
    name: 'updateQuestForKresk',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_sequencerGracePeriodTime',
        type: 'uint32',
      },
    ],
    name: 'updateSequencerGracePeriodTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sequencerUptimeFeed',
        type: 'address',
      },
    ],
    name: 'updateSequencerUptimeFeed',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class ICommonConfigurationFacet__factory {
  static readonly abi = _abi;
  static createInterface(): ICommonConfigurationFacetInterface {
    return new utils.Interface(_abi) as ICommonConfigurationFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICommonConfigurationFacet {
    return new Contract(address, _abi, signerOrProvider) as ICommonConfigurationFacet;
  }
}
