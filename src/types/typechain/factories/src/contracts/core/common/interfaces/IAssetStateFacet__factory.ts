/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IAssetStateFacet,
  IAssetStateFacetInterface,
} from '../../../../../../src/contracts/core/common/interfaces/IAssetStateFacet';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_feedAddr',
        type: 'address',
      },
    ],
    name: 'getAPI3Price',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
    ],
    name: 'getAsset',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes12',
            name: 'underlyingId',
            type: 'bytes12',
          },
          {
            internalType: 'address',
            name: 'anchor',
            type: 'address',
          },
          {
            internalType: 'enum OracleType[2]',
            name: 'oracles',
            type: 'uint8[2]',
          },
          {
            internalType: 'uint16',
            name: 'factor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'kFactor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'openFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentive',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'supplyLimit',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'depositLimitSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'liquidityIndexSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint16',
            name: 'swapInFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'swapOutFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'protocolFeeShareSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentiveSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'isCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPDepositAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCoverAsset',
            type: 'bool',
          },
        ],
        internalType: 'struct Asset',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_feedAddr',
        type: 'address',
      },
    ],
    name: 'getChainlinkPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'enum OracleType',
        name: '_oracleType',
        type: 'uint8',
      },
    ],
    name: 'getFeedForAddress',
    outputs: [
      {
        internalType: 'address',
        name: 'feedAddr',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12',
        name: '_underlyingId',
        type: 'bytes12',
      },
      {
        internalType: 'enum OracleType',
        name: '_oracleType',
        type: 'uint8',
      },
    ],
    name: 'getFeedForId',
    outputs: [
      {
        internalType: 'address',
        name: 'feedAddr',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
    ],
    name: 'getPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
    ],
    name: 'getPriceOfAsset',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'getValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12',
        name: '_underlyingId',
        type: 'bytes12',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'redstonePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IAssetStateFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IAssetStateFacetInterface {
    return new utils.Interface(_abi) as IAssetStateFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IAssetStateFacet {
    return new Contract(address, _abi, signerOrProvider) as IAssetStateFacet;
  }
}
