/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { Kresko, KreskoInterface } from '../../../hardhat-diamond-abi/HardhatDiamondABI.sol/Kresko';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'asset',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'arr1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'arr2',
        type: 'uint256',
      },
    ],
    name: 'ARRAY_LENGTH_MISMATCH',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ASSET_ALREADY_EXISTS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ASSET_DOES_NOT_EXIST',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'deposits',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'DEPOSIT_LIMIT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'underlyingId',
        type: 'string',
      },
    ],
    name: 'INVALID_API3_PRICE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'INVALID_ASSET_ID',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxIndex',
        type: 'uint256',
      },
    ],
    name: 'INVALID_ASSET_INDEX',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_CFACTOR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'underlyingId',
        type: 'string',
      },
    ],
    name: 'INVALID_CL_PRICE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'decimals',
        type: 'uint256',
      },
    ],
    name: 'INVALID_DECIMALS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_KFACTOR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'INVALID_KRASSET_ANCHOR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'INVALID_KRASSET_CONTRACT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'invalidOperator',
        type: 'address',
      },
    ],
    name: 'INVALID_KRASSET_OPERATOR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_LIQ_INCENTIVE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_MINTER_FEE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_SCDP_FEE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'seizeAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'seizeReductionPct',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'repayAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'repayIncreasePct',
        type: 'uint256',
      },
    ],
    name: 'MINTER_ASSET_ECONOMY',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'price',
        type: 'int256',
      },
    ],
    name: 'NEGATIVE_PRICE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'underlyingId',
        type: 'string',
      },
    ],
    name: 'NO_PUSH_ORACLE_SET',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'underlyingId',
        type: 'string',
      },
    ],
    name: 'NO_PUSH_PRICE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'underlyingId',
        type: 'string',
      },
    ],
    name: 'ORACLE_ZERO_ADDRESS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'seizeAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'seizeReductionPct',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'repayAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'repayIncreasePct',
        type: 'uint256',
      },
    ],
    name: 'SCDP_ASSET_ECONOMY',
    type: 'error',
  },
  {
    inputs: [],
    name: 'STRING_HEX_LENGTH_INSUFFICIENT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'SUPPLY_LIMIT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZERO_ADDRESS',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'id',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'factor',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'anchor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liqIncentive',
        type: 'uint256',
      },
    ],
    name: 'CollateralAssetAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'id',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'factor',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'anchor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liqIncentive',
        type: 'uint256',
      },
    ],
    name: 'CollateralAssetUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'id',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'kreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'anchor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'kFactor',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'supplyLimit',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'closeFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'openFee',
        type: 'uint256',
      },
    ],
    name: 'KreskoAssetAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'id',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'kreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'anchor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'kFactor',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'supplyLimit',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'closeFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'openFee',
        type: 'uint256',
      },
    ],
    name: 'KreskoAssetUpdated',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'bytes12',
            name: 'underlyingId',
            type: 'bytes12',
          },
          {
            internalType: 'address',
            name: 'anchor',
            type: 'address',
          },
          {
            internalType: 'enum OracleType[2]',
            name: 'oracles',
            type: 'uint8[2]',
          },
          {
            internalType: 'uint16',
            name: 'factor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'kFactor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'openFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentive',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'supplyLimit',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'depositLimitSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'liquidityIndexSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint16',
            name: 'swapInFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'swapOutFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'protocolFeeShareSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentiveSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'isCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPDepositAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCoverAsset',
            type: 'bool',
          },
        ],
        internalType: 'struct Asset',
        name: '_config',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'enum OracleType[2]',
            name: 'oracleIds',
            type: 'uint8[2]',
          },
          {
            internalType: 'address[2]',
            name: 'feeds',
            type: 'address[2]',
          },
        ],
        internalType: 'struct FeedConfiguration',
        name: '_feedConfig',
        type: 'tuple',
      },
      {
        internalType: 'bool',
        name: '_setFeeds',
        type: 'bool',
      },
    ],
    name: 'addAsset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12',
        name: '_assetId',
        type: 'bytes12',
      },
      {
        internalType: 'address',
        name: '_feedAddr',
        type: 'address',
      },
    ],
    name: 'setApi3Feed',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12[]',
        name: '_assetIds',
        type: 'bytes12[]',
      },
      {
        internalType: 'address[]',
        name: '_feeds',
        type: 'address[]',
      },
    ],
    name: 'setApi3Feeds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12',
        name: '_assetId',
        type: 'bytes12',
      },
      {
        internalType: 'address',
        name: '_feedAddr',
        type: 'address',
      },
    ],
    name: 'setChainLinkFeed',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12[]',
        name: '_assetIds',
        type: 'bytes12[]',
      },
      {
        internalType: 'address[]',
        name: '_feeds',
        type: 'address[]',
      },
    ],
    name: 'setChainlinkFeeds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'bytes12',
            name: 'underlyingId',
            type: 'bytes12',
          },
          {
            internalType: 'address',
            name: 'anchor',
            type: 'address',
          },
          {
            internalType: 'enum OracleType[2]',
            name: 'oracles',
            type: 'uint8[2]',
          },
          {
            internalType: 'uint16',
            name: 'factor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'kFactor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'openFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentive',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'supplyLimit',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'depositLimitSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'liquidityIndexSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint16',
            name: 'swapInFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'swapOutFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'protocolFeeShareSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentiveSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'isCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPDepositAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCoverAsset',
            type: 'bool',
          },
        ],
        internalType: 'struct Asset',
        name: '_config',
        type: 'tuple',
      },
    ],
    name: 'updateAsset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12',
        name: '_assetId',
        type: 'bytes12',
      },
      {
        components: [
          {
            internalType: 'enum OracleType[2]',
            name: 'oracleIds',
            type: 'uint8[2]',
          },
          {
            internalType: 'address[2]',
            name: 'feeds',
            type: 'address[2]',
          },
        ],
        internalType: 'struct FeedConfiguration',
        name: '_feedConfig',
        type: 'tuple',
      },
    ],
    name: 'updateFeeds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'enum OracleType[2]',
        name: '_newOracleOrder',
        type: 'uint8[2]',
      },
    ],
    name: 'updateOracleOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'bytes12',
            name: 'underlyingId',
            type: 'bytes12',
          },
          {
            internalType: 'address',
            name: 'anchor',
            type: 'address',
          },
          {
            internalType: 'enum OracleType[2]',
            name: 'oracles',
            type: 'uint8[2]',
          },
          {
            internalType: 'uint16',
            name: 'factor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'kFactor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'openFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentive',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'supplyLimit',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'depositLimitSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'liquidityIndexSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint16',
            name: 'swapInFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'swapOutFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'protocolFeeShareSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentiveSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'isCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPDepositAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCoverAsset',
            type: 'bool',
          },
        ],
        internalType: 'struct Asset',
        name: '_config',
        type: 'tuple',
      },
    ],
    name: 'validateAssetConfig',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
    ],
    name: 'validateLiqConfig',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CalldataMustHaveValidPayload',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CalldataOverOrUnderFlow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CanNotPickMedianOfEmptyArray',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IncorrectUnsignedMetadataSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'receivedSignersCount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'requiredSignersCount',
        type: 'uint256',
      },
    ],
    name: 'InsufficientNumberOfUniqueSigners',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'primaryPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'referencePrice',
        type: 'uint256',
      },
    ],
    name: 'PRICE_UNSTABLE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SEQUENCER_DOWN_NO_REDSTONE_AVAILABLE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receivedSigner',
        type: 'address',
      },
    ],
    name: 'SignerNotAuthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'underlyingId',
        type: 'string',
      },
    ],
    name: 'ZERO_PRICE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_feed',
        type: 'address',
      },
    ],
    name: 'getAPI3Price',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getAsset',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes12',
            name: 'underlyingId',
            type: 'bytes12',
          },
          {
            internalType: 'address',
            name: 'anchor',
            type: 'address',
          },
          {
            internalType: 'enum OracleType[2]',
            name: 'oracles',
            type: 'uint8[2]',
          },
          {
            internalType: 'uint16',
            name: 'factor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'kFactor',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'openFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentive',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'supplyLimit',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'depositLimitSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'liquidityIndexSCDP',
            type: 'uint128',
          },
          {
            internalType: 'uint16',
            name: 'swapInFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'swapOutFeeSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'protocolFeeShareSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liqIncentiveSCDP',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'isCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPDepositAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPKrAsset',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCollateral',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isSCDPCoverAsset',
            type: 'bool',
          },
        ],
        internalType: 'struct Asset',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_feed',
        type: 'address',
      },
    ],
    name: 'getChainlinkPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        internalType: 'enum OracleType',
        name: '_oracleType',
        type: 'uint8',
      },
    ],
    name: 'getFeedForAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12',
        name: '_underlyingId',
        type: 'bytes12',
      },
      {
        internalType: 'enum OracleType',
        name: '_oracleType',
        type: 'uint8',
      },
    ],
    name: 'getFeedForId',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getPriceOfAsset',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'getValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes12',
        name: '_underlyingId',
        type: 'bytes12',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'redstonePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'self',
        type: 'address',
      },
    ],
    name: 'ACCESS_CONTROL_NOT_SELF',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SAFETY_COUNCIL_NOT_ALLOWED',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getRoleMember',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleMemberCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ALREADY_INITIALIZED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'invalid',
        type: 'address',
      },
    ],
    name: 'INVALID_FEE_RECIPIENT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_MIN_DEBT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_ORACLE_DEVIATION',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'NOT_OWNER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SAFETY_COUNCIL_ALREADY_EXISTS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'SAFETY_COUNCIL_INVALID_ADDRESS',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'feeRecipient',
        type: 'address',
      },
    ],
    name: 'FeeRecipientUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'version',
        type: 'uint96',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minDebtValue',
        type: 'uint256',
      },
    ],
    name: 'MinimumDebtValueUpdated',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'admin',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'council',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'treasury',
            type: 'address',
          },
          {
            internalType: 'uint64',
            name: 'minDebtValue',
            type: 'uint64',
          },
          {
            internalType: 'uint16',
            name: 'oracleDeviationPct',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'oracleDecimals',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'sequencerUptimeFeed',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'sequencerGracePeriodTime',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeout',
            type: 'uint32',
          },
          {
            internalType: 'address',
            name: 'kreskian',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'questForKresk',
            type: 'address',
          },
          {
            internalType: 'uint8',
            name: 'phase',
            type: 'uint8',
          },
        ],
        internalType: 'struct CommonInitArgs',
        name: 'args',
        type: 'tuple',
      },
    ],
    name: 'initializeCommon',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_decimals',
        type: 'uint8',
      },
    ],
    name: 'updateExtOracleDecimals',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newFeeRecipient',
        type: 'address',
      },
    ],
    name: 'updateFeeRecipient',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskian',
        type: 'address',
      },
    ],
    name: 'updateKreskian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_newMinDebtValue',
        type: 'uint96',
      },
    ],
    name: 'updateMinDebtValue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_oracleDeviationPct',
        type: 'uint16',
      },
    ],
    name: 'updateOracleDeviationPct',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_oracleTimeout',
        type: 'uint32',
      },
    ],
    name: 'updateOracleTimeout',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_phase',
        type: 'uint8',
      },
    ],
    name: 'updatePhase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_questForKresk',
        type: 'address',
      },
    ],
    name: 'updateQuestForKresk',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_sequencerGracePeriodTime',
        type: 'uint32',
      },
    ],
    name: 'updateSequencerGracePeriodTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sequencerUptimeFeed',
        type: 'address',
      },
    ],
    name: 'updateSequencerUptimeFeed',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainSeparator',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtOracleDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFeeRecipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinDebtValue',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getOracleDeviationPct',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getOracleTimeout',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSequencerUptimeFeed',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSequencerUptimeFeedGracePeriod',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getStorageVersion',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'INVALID_ASSET',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'enum Action',
        name: 'action',
        type: 'uint8',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'description',
        type: 'string',
      },
    ],
    name: 'SafetyStateChange',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'enum Action',
        name: '_action',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'assetActionPaused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        internalType: 'enum Action',
        name: '_action',
        type: 'uint8',
      },
    ],
    name: 'safetyStateFor',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'bool',
                name: 'enabled',
                type: 'bool',
              },
              {
                internalType: 'uint256',
                name: 'timestamp0',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'timestamp1',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pause',
            name: 'pause',
            type: 'tuple',
          },
        ],
        internalType: 'struct SafetyState',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'safetyStateSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'val',
        type: 'bool',
      },
    ],
    name: 'setSafetyStateSet',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_assets',
        type: 'address[]',
      },
      {
        internalType: 'enum Action',
        name: '_action',
        type: 'uint8',
      },
      {
        internalType: 'bool',
        name: '_withDuration',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: '_duration',
        type: 'uint256',
      },
    ],
    name: 'toggleAssetsPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'ADDRESS_HAS_NO_CODE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    name: 'DIAMOND_FUNCTION_ALREADY_EXISTS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_INCORRECT_FACET_CUT_ACTION',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_INIT_ADDRESS_ZERO_BUT_CALLDATA_NOT_EMPTY',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DIAMOND_INIT_FAILED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_INIT_NOT_ZERO_BUT_CALLDATA_IS_EMPTY',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DIAMOND_NO_FACET_SELECTORS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DIAMOND_REMOVE_FUNCTIONS_NONZERO_FACET_ADDRESS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_REMOVE_FUNCTION_FACET_IS_ZERO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DIAMOND_REPLACE_FUNCTION_DUPLICATE',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'facetAddress',
            type: 'address',
          },
          {
            internalType: 'enum FacetCutAction',
            name: 'action',
            type: 'uint8',
          },
          {
            internalType: 'bytes4[]',
            name: 'functionSelectors',
            type: 'bytes4[]',
          },
        ],
        indexed: false,
        internalType: 'struct FacetCut[]',
        name: '_diamondCut',
        type: 'tuple[]',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_init',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: '_calldata',
        type: 'bytes',
      },
    ],
    name: 'DiamondCut',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'facetAddress',
            type: 'address',
          },
          {
            internalType: 'enum FacetCutAction',
            name: 'action',
            type: 'uint8',
          },
          {
            internalType: 'bytes4[]',
            name: 'functionSelectors',
            type: 'bytes4[]',
          },
        ],
        internalType: 'struct FacetCut[]',
        name: '_diamondCut',
        type: 'tuple[]',
      },
      {
        internalType: 'address',
        name: '_init',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_calldata',
        type: 'bytes',
      },
    ],
    name: 'diamondCut',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_init',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_calldata',
        type: 'bytes',
      },
    ],
    name: 'upgradeState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_functionSelector',
        type: 'bytes4',
      },
    ],
    name: 'facetAddress',
    outputs: [
      {
        internalType: 'address',
        name: 'facetAddress_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'facetAddresses',
    outputs: [
      {
        internalType: 'address[]',
        name: 'facetAddresses_',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_facet',
        type: 'address',
      },
    ],
    name: 'facetFunctionSelectors',
    outputs: [
      {
        internalType: 'bytes4[]',
        name: 'facetFunctionSelectors_',
        type: 'bytes4[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'facets',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'facetAddress',
            type: 'address',
          },
          {
            internalType: 'bytes4[]',
            name: 'functionSelectors',
            type: 'bytes4[]',
          },
        ],
        internalType: 'struct Facet[]',
        name: 'facets_',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'pendingOwner',
        type: 'address',
      },
    ],
    name: 'NOT_PENDING_OWNER',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'PendingOwnershipTransfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialized',
    outputs: [
      {
        internalType: 'bool',
        name: 'initialized_',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: 'owner_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [
      {
        internalType: 'address',
        name: 'pendingOwner_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4[]',
        name: 'interfaceIds',
        type: 'bytes4[]',
      },
      {
        internalType: 'bytes4[]',
        name: 'interfaceIdsToRemove',
        type: 'bytes4[]',
      },
    ],
    name: 'setERC165',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'ammOracle',
        type: 'address',
      },
    ],
    name: 'AMMOracleUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'liquidator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'seizedCollateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'repayUSD',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'collateralSent',
        type: 'uint256',
      },
    ],
    name: 'BatchInterestLiquidationOccurred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'cFactor',
        type: 'uint256',
      },
    ],
    name: 'CFactorUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'CollateralDeposited',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'CollateralWithdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'kreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'DebtPositionClosed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'paymentCollateralAsset',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'feeType',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'paymentAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'paymentValue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeValue',
        type: 'uint256',
      },
    ],
    name: 'FeePaid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'liquidator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'repayKreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'repayUSD',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'seizedCollateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'collateralSent',
        type: 'uint256',
      },
    ],
    name: 'InterestLiquidationOccurred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'kreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'kFactor',
        type: 'uint256',
      },
    ],
    name: 'KFactorUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'kreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'KreskoAssetBurned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'kreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'KreskoAssetMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liqIncentiveMultiplier',
        type: 'uint256',
      },
    ],
    name: 'LiquidationIncentiveMultiplierUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'liquidator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'repayKreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'repayAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'seizedCollateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'collateralSent',
        type: 'uint256',
      },
    ],
    name: 'LiquidationOccurred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidationThreshold',
        type: 'uint256',
      },
    ],
    name: 'LiquidationThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newMaxLiquidationRatio',
        type: 'uint256',
      },
    ],
    name: 'MaxLiquidationRatioUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minCollateralRatio',
        type: 'uint256',
      },
    ],
    name: 'MinimumCollateralizationRatioUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'UncheckedCollateralWithdrawn',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'invalid',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: 'valid',
        type: 'uint8',
      },
    ],
    name: 'INVALID_FEE_TYPE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
    ],
    name: 'NO_COLLATERALS_DEPOSITED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
    ],
    name: 'NO_MINTED_ASSETS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getAccountCollateralAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountCollateralAssets',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountCollateralRatio',
    outputs: [
      {
        internalType: 'uint256',
        name: 'ratio',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_accounts',
        type: 'address[]',
      },
    ],
    name: 'getAccountCollateralRatios',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getAccountCollateralValues',
    outputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'adjustedValue',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getAccountDebtAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
    ],
    name: 'getAccountDepositIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: 'i',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountLiquidatable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_ratio',
        type: 'uint32',
      },
    ],
    name: 'getAccountMinCollateralAtRatio',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
    ],
    name: 'getAccountMintIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountMintedAssets',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountState',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'totalDebtValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalCollateralValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collateralRatio',
            type: 'uint256',
          },
        ],
        internalType: 'struct MinterAccountState',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountTotalCollateralValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountTotalCollateralValues',
    outputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valueAdjusted',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountTotalDebtValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountTotalDebtValues',
    outputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valueAdjusted',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_kreskoAssetAmount',
        type: 'uint256',
      },
      {
        internalType: 'enum MinterFee',
        name: '_feeType',
        type: 'uint8',
      },
    ],
    name: 'previewFee',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ACTION_PAUSED_FOR_ASSET',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'burnAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'debtAmount',
        type: 'uint256',
      },
    ],
    name: 'BURN_AMOUNT_OVERFLOW',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'KRASSET_DOES_NOT_EXIST',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RE_ENTRANCY',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'SAFE_ERC20_PERMIT_ERC20_OPERATION_FAILED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ZERO_BURN',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ZERO_DEBT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_burnAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_mintedKreskoAssetIndex',
        type: 'uint256',
      },
    ],
    name: 'burnKreskoAsset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'COLLATERAL_DOES_NOT_EXIST',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_LT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_MCR',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_MLR',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
        ],
        internalType: 'struct MinterInitArgs',
        name: 'args',
        type: 'tuple',
      },
    ],
    name: 'initializeMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newFactor',
        type: 'uint16',
      },
    ],
    name: 'updateCollateralFactor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newFactor',
        type: 'uint16',
      },
    ],
    name: 'updateKFactor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newLiqIncentive',
        type: 'uint16',
      },
    ],
    name: 'updateLiquidationIncentive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newThreshold',
        type: 'uint32',
      },
    ],
    name: 'updateLiquidationThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newMaxLiquidationRatio',
        type: 'uint32',
      },
    ],
    name: 'updateMaxLiquidationRatio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_newMinCollateralRatio',
        type: 'uint32',
      },
    ],
    name: 'updateMinCollateralRatio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredValue',
        type: 'uint256',
      },
    ],
    name: 'COLLATERAL_VALUE_LOW',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MISSING_PHASE_1_NFT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MISSING_PHASE_2_NFT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MISSING_PHASE_3_NFT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ZERO_AMOUNT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ZERO_DEPOSIT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_depositAmount',
        type: 'uint256',
      },
    ],
    name: 'depositCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_withdrawAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_collateralIndex',
        type: 'uint256',
      },
    ],
    name: 'withdrawCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_withdrawAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_collateralIndex',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_userData',
        type: 'bytes',
      },
    ],
    name: 'withdrawCollateralUnchecked',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralValue',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minCollateralValue',
        type: 'uint256',
      },
    ],
    name: 'CANNOT_LIQUIDATE',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'SEIZE_UNDERFLOW',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SELF_LIQUIDATION',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ZERO_REPAY',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_repayAssetAddr',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_seizeAssetAddr',
        type: 'address',
      },
    ],
    name: 'getMaxLiqValue',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'account',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'seizeAssetAddr',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'repayAssetAddr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'repayValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'repayAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'repayAssetPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'repayAssetIndex',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeAssetPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeAssetIndex',
            type: 'uint256',
          },
        ],
        internalType: 'struct MaxLiqInfo',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_repayAssetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_repayAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_seizeAssetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_repayAssetIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_seizeAssetIndex',
        type: 'uint256',
      },
    ],
    name: 'liquidate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    name: 'MARKET_CLOSED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'supply',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxSupply',
        type: 'uint256',
      },
    ],
    name: 'MAX_SUPPLY_EXCEEDED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredValue',
        type: 'uint256',
      },
    ],
    name: 'MINT_VALUE_LOW',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ZERO_MINT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_mintAmount',
        type: 'uint256',
      },
    ],
    name: 'mintKreskoAsset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
    ],
    name: 'getCollateralExists',
    outputs: [
      {
        internalType: 'bool',
        name: 'exists',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'getCollateralValueWithPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'adjustedValue',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'getDebtValueWithPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'adjustedValue',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
    ],
    name: 'getKrAssetExists',
    outputs: [
      {
        internalType: 'bool',
        name: 'exists',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLiquidationThreshold',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxLiquidationRatio',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinCollateralRatio',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinterParameters',
    outputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'maxLiquidationRatio',
            type: 'uint32',
          },
        ],
        internalType: 'struct MinterParams',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'openFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'closeFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'protocolFee',
        type: 'uint256',
      },
    ],
    name: 'FeeSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Income',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'assetIn',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'assetOut',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'PairSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidationThreshold',
        type: 'uint256',
      },
    ],
    name: 'SCDPCollateralUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'depositor',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'SCDPDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'openFee',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'closeFee',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'protocolFee',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'supplyLimit',
        type: 'uint256',
      },
    ],
    name: 'SCDPKrAssetUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'liquidator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'repayKreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'repayAmount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'seizeCollateral',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'seizeAmount',
        type: 'uint256',
      },
    ],
    name: 'SCDPLiquidationOccured',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'repayer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'repayKreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'repayAmount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiveKreskoAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'receiveAmount',
        type: 'uint256',
      },
    ],
    name: 'SCDPRepay',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'withdrawer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeAmount',
        type: 'uint256',
      },
    ],
    name: 'SCDPWithdraw',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'assetIn',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'assetOut',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'feeAsset',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'assetIn',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'protocolFeeAmount',
        type: 'uint256',
      },
    ],
    name: 'SwapFee',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ASSET_ALREADY_DISABLED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ASSET_ALREADY_ENABLED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'INVALID_DEPOSIT_ASSET',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'INVALID_PROTOCOL_FEE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'getCurrentParametersSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'swapFeeRecipient',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint8',
            name: 'sdiPricePrecision',
            type: 'uint8',
          },
        ],
        internalType: 'struct SCDPInitArgs',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'swapFeeRecipient',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'minCollateralRatio',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'liquidationThreshold',
            type: 'uint32',
          },
          {
            internalType: 'uint8',
            name: 'sdiPricePrecision',
            type: 'uint8',
          },
        ],
        internalType: 'struct SCDPInitArgs',
        name: '_init',
        type: 'tuple',
      },
    ],
    name: 'initializeSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_enabled',
        type: 'bool',
      },
    ],
    name: 'setCollateralSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_enabled',
        type: 'bool',
      },
    ],
    name: 'setDepositAssetSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'setFeeAssetSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_enabled',
        type: 'bool',
      },
    ],
    name: 'setKrAssetSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_lt',
        type: 'uint32',
      },
    ],
    name: 'setLiquidationThresholdSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_mlr',
        type: 'uint32',
      },
    ],
    name: 'setMaxLiquidationRatioSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_mcr',
        type: 'uint32',
      },
    ],
    name: 'setMinCollateralRatioSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_krAsset',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_openFee',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: '_closeFee',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: '_protocolFee',
        type: 'uint16',
      },
    ],
    name: 'setSwapFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'assetIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'assetOut',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'enabled',
            type: 'bool',
          },
        ],
        internalType: 'struct PairSetter[]',
        name: '_pairs',
        type: 'tuple[]',
      },
    ],
    name: 'setSwapPairs',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'assetIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'assetOut',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'enabled',
            type: 'bool',
          },
        ],
        internalType: 'struct PairSetter',
        name: '_pair',
        type: 'tuple',
      },
    ],
    name: 'setSwapPairsSingle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'uint128',
        name: '_newDepositLimitSCDP',
        type: 'uint128',
      },
    ],
    name: 'updateDepositLimitSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: '_newLiqIncentiveSCDP',
        type: 'uint16',
      },
    ],
    name: 'updateLiquidationIncentiveSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralValue',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minCollateralValue',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'ratio',
        type: 'uint32',
      },
    ],
    name: 'DEBT_EXCEEDS_COLLATERAL',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'LIQ_AMOUNT_OVERFLOW',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'REPAY_OVERFLOW',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'REPAY_TOO_MUCH',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'requested',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'principal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'scaled',
        type: 'uint256',
      },
    ],
    name: 'SCDP_WITHDRAWAL_VIOLATION',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'depositSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLiquidatableSCDP',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_repayAssetAddr',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_seizeAssetAddr',
        type: 'address',
      },
    ],
    name: 'getMaxLiqValueSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'account',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'seizeAssetAddr',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'repayAssetAddr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'repayValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'repayAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'repayAssetPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'repayAssetIndex',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeAssetPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'seizeAssetIndex',
            type: 'uint256',
          },
        ],
        internalType: 'struct MaxLiqInfo',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_repayAssetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_repayAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_seizeAssetAddr',
        type: 'address',
      },
    ],
    name: 'liquidateSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_repayAssetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_repayAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_seizeAssetAddr',
        type: 'address',
      },
    ],
    name: 'repaySCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_depositAsset',
        type: 'address',
      },
    ],
    name: 'getAccountDepositFeesGainedSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_depositAsset',
        type: 'address',
      },
    ],
    name: 'getAccountDepositSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_depositAsset',
        type: 'address',
      },
    ],
    name: 'getAccountDepositValueSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_assets',
        type: 'address[]',
      },
    ],
    name: 'getAccountInfoSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'account',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'totalDepositValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalScaledDepositValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalFeesValue',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'asset',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'assetPrice',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'depositAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'scaledDepositAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'depositValue',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'scaledDepositValue',
                type: 'uint256',
              },
            ],
            internalType: 'struct UserAssetData[]',
            name: 'deposits',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct UserData',
        name: 'result',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_accounts',
        type: 'address[]',
      },
      {
        internalType: 'address[]',
        name: '_assets',
        type: 'address[]',
      },
    ],
    name: 'getAccountInfosSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'account',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'totalDepositValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalScaledDepositValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalFeesValue',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'asset',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'assetPrice',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'depositAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'scaledDepositAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'depositValue',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'scaledDepositValue',
                type: 'uint256',
              },
            ],
            internalType: 'struct UserAssetData[]',
            name: 'deposits',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct UserData[]',
        name: 'result',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_depositAsset',
        type: 'address',
      },
    ],
    name: 'getAccountScaledDepositValueCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_depositAsset',
        type: 'address',
      },
    ],
    name: 'getAccountScaledDepositsSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountTotalDepositsValueSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'getAccountTotalScaledDepositsValueSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getAssetEnabledSCDP',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getAssetInfoSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'depositAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'depositValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'depositValueAdjusted',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtValueAdjusted',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'swapDeposits',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'bytes12',
                name: 'underlyingId',
                type: 'bytes12',
              },
              {
                internalType: 'address',
                name: 'anchor',
                type: 'address',
              },
              {
                internalType: 'enum OracleType[2]',
                name: 'oracles',
                type: 'uint8[2]',
              },
              {
                internalType: 'uint16',
                name: 'factor',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'kFactor',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'openFee',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'closeFee',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'liqIncentive',
                type: 'uint16',
              },
              {
                internalType: 'uint128',
                name: 'supplyLimit',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'depositLimitSCDP',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidityIndexSCDP',
                type: 'uint128',
              },
              {
                internalType: 'uint16',
                name: 'swapInFeeSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'swapOutFeeSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'protocolFeeShareSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'liqIncentiveSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint8',
                name: 'decimals',
                type: 'uint8',
              },
              {
                internalType: 'bool',
                name: 'isCollateral',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isKrAsset',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPDepositAsset',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPKrAsset',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPCollateral',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPCoverAsset',
                type: 'bool',
              },
            ],
            internalType: 'struct Asset',
            name: 'asset',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'assetPrice',
            type: 'uint256',
          },
          {
            internalType: 'string',
            name: 'symbol',
            type: 'string',
          },
        ],
        internalType: 'struct AssetData',
        name: 'results',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_assets',
        type: 'address[]',
      },
    ],
    name: 'getAssetInfosSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'depositAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'depositValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'depositValueAdjusted',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtValueAdjusted',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'swapDeposits',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'bytes12',
                name: 'underlyingId',
                type: 'bytes12',
              },
              {
                internalType: 'address',
                name: 'anchor',
                type: 'address',
              },
              {
                internalType: 'enum OracleType[2]',
                name: 'oracles',
                type: 'uint8[2]',
              },
              {
                internalType: 'uint16',
                name: 'factor',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'kFactor',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'openFee',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'closeFee',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'liqIncentive',
                type: 'uint16',
              },
              {
                internalType: 'uint128',
                name: 'supplyLimit',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'depositLimitSCDP',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidityIndexSCDP',
                type: 'uint128',
              },
              {
                internalType: 'uint16',
                name: 'swapInFeeSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'swapOutFeeSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'protocolFeeShareSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'liqIncentiveSCDP',
                type: 'uint16',
              },
              {
                internalType: 'uint8',
                name: 'decimals',
                type: 'uint8',
              },
              {
                internalType: 'bool',
                name: 'isCollateral',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isKrAsset',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPDepositAsset',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPKrAsset',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPCollateral',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isSCDPCoverAsset',
                type: 'bool',
              },
            ],
            internalType: 'struct Asset',
            name: 'asset',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'assetPrice',
            type: 'uint256',
          },
          {
            internalType: 'string',
            name: 'symbol',
            type: 'string',
          },
        ],
        internalType: 'struct AssetData[]',
        name: 'results',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCollateralRatioSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_depositAsset',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_ignoreFactors',
        type: 'bool',
      },
    ],
    name: 'getCollateralValueSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCollateralsSCDP',
    outputs: [
      {
        internalType: 'address[]',
        name: 'result',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
    ],
    name: 'getDebtSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_kreskoAsset',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_ignoreFactors',
        type: 'bool',
      },
    ],
    name: 'getDebtValueSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDepositAssetsSCDP',
    outputs: [
      {
        internalType: 'address[]',
        name: 'result',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
    ],
    name: 'getDepositEnabledSCDP',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_depositAsset',
        type: 'address',
      },
    ],
    name: 'getDepositsSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFeeRecipientSCDP',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getKreskoAssetsSCDP',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getStatisticsSCDP',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'collateralValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collateralValueAdjusted',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'debtValueAdjusted',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'effectiveDebtValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'cr',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'crDebtValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'crDebtValueAdjusted',
            type: 'uint256',
          },
        ],
        internalType: 'struct GlobalData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_collateralAsset',
        type: 'address',
      },
    ],
    name: 'getSwapDepositsSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_assetOut',
        type: 'address',
      },
    ],
    name: 'getSwapEnabledSCDP',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_ignoreFactors',
        type: 'bool',
      },
    ],
    name: 'getTotalCollateralValueSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_ignoreFactors',
        type: 'bool',
      },
    ],
    name: 'getTotalDebtValueSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CUMULATE_AMOUNT_ZERO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CUMULATE_NO_DEPOSITS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IDENTICAL_ASSETS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'incomeAsset',
        type: 'address',
      },
    ],
    name: 'NOT_INCOME_ASSET',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'assetIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'assetOut',
        type: 'address',
      },
    ],
    name: 'SWAP_NOT_ENABLED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'invalid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'valid',
        type: 'uint256',
      },
    ],
    name: 'SWAP_SLIPPAGE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SWAP_ZERO_AMOUNT',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_depositAssetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_incomeAmount',
        type: 'uint256',
      },
    ],
    name: 'cumulateIncomeSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_assetOut',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
    ],
    name: 'previewSwapSCDP',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeAmountProtocol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_assetIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_assetOut',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_amountOutMin',
        type: 'uint256',
      },
    ],
    name: 'swapSCDP',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'ASSET_NOT_ENABLED',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralValue',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minCollateralValue',
        type: 'uint256',
      },
    ],
    name: 'CANNOT_COVER',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'SDICover',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
    ],
    name: 'disableCoverAssetSDI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
    ],
    name: 'enableCoverAssetSDI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCoverAssetsSDI',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getEffectiveSDIDebt',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getEffectiveSDIDebtUSD',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSDICoverAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSDIPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalSDIDebt',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_coverRecipient',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_burnAmount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_ignoreFactors',
        type: 'bool',
      },
    ],
    name: 'previewSCDPBurn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_assetAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_mintAmount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_ignoreFactors',
        type: 'bool',
      },
    ],
    name: 'previewSCDPMint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newCoverRecipient',
        type: 'address',
      },
    ],
    name: 'setCoverRecipientSDI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSDI',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class Kresko__factory {
  static readonly abi = _abi;
  static createInterface(): KreskoInterface {
    return new utils.Interface(_abi) as KreskoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Kresko {
    return new Contract(address, _abi, signerOrProvider) as Kresko;
  }
}
