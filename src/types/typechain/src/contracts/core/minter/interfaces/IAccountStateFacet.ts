/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../../../../common';

export type MinterAccountStateStruct = {
  totalDebtValue: PromiseOrValue<BigNumberish>;
  totalCollateralValue: PromiseOrValue<BigNumberish>;
  collateralRatio: PromiseOrValue<BigNumberish>;
};

export type MinterAccountStateStructOutput = [BigNumber, BigNumber, BigNumber] & {
  totalDebtValue: BigNumber;
  totalCollateralValue: BigNumber;
  collateralRatio: BigNumber;
};

export interface IAccountStateFacetInterface extends utils.Interface {
  functions: {
    'getAccountCollateralAmount(address,address)': FunctionFragment;
    'getAccountCollateralAssets(address)': FunctionFragment;
    'getAccountCollateralRatio(address)': FunctionFragment;
    'getAccountCollateralRatios(address[])': FunctionFragment;
    'getAccountCollateralValues(address,address)': FunctionFragment;
    'getAccountDebtAmount(address,address)': FunctionFragment;
    'getAccountDepositIndex(address,address)': FunctionFragment;
    'getAccountLiquidatable(address)': FunctionFragment;
    'getAccountMinCollateralAtRatio(address,uint32)': FunctionFragment;
    'getAccountMintIndex(address,address)': FunctionFragment;
    'getAccountMintedAssets(address)': FunctionFragment;
    'getAccountState(address)': FunctionFragment;
    'getAccountTotalCollateralValue(address)': FunctionFragment;
    'getAccountTotalCollateralValues(address)': FunctionFragment;
    'getAccountTotalDebtValue(address)': FunctionFragment;
    'getAccountTotalDebtValues(address)': FunctionFragment;
    'previewFee(address,address,uint256,uint8)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'getAccountCollateralAmount'
      | 'getAccountCollateralAssets'
      | 'getAccountCollateralRatio'
      | 'getAccountCollateralRatios'
      | 'getAccountCollateralValues'
      | 'getAccountDebtAmount'
      | 'getAccountDepositIndex'
      | 'getAccountLiquidatable'
      | 'getAccountMinCollateralAtRatio'
      | 'getAccountMintIndex'
      | 'getAccountMintedAssets'
      | 'getAccountState'
      | 'getAccountTotalCollateralValue'
      | 'getAccountTotalCollateralValues'
      | 'getAccountTotalDebtValue'
      | 'getAccountTotalDebtValues'
      | 'previewFee',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'getAccountCollateralAmount',
    values: [PromiseOrValue<string>, PromiseOrValue<string>],
  ): string;
  encodeFunctionData(functionFragment: 'getAccountCollateralAssets', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'getAccountCollateralRatio', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'getAccountCollateralRatios', values: [PromiseOrValue<string>[]]): string;
  encodeFunctionData(
    functionFragment: 'getAccountCollateralValues',
    values: [PromiseOrValue<string>, PromiseOrValue<string>],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAccountDebtAmount',
    values: [PromiseOrValue<string>, PromiseOrValue<string>],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAccountDepositIndex',
    values: [PromiseOrValue<string>, PromiseOrValue<string>],
  ): string;
  encodeFunctionData(functionFragment: 'getAccountLiquidatable', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(
    functionFragment: 'getAccountMinCollateralAtRatio',
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAccountMintIndex',
    values: [PromiseOrValue<string>, PromiseOrValue<string>],
  ): string;
  encodeFunctionData(functionFragment: 'getAccountMintedAssets', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'getAccountState', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'getAccountTotalCollateralValue', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'getAccountTotalCollateralValues', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'getAccountTotalDebtValue', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'getAccountTotalDebtValues', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(
    functionFragment: 'previewFee',
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
    ],
  ): string;

  decodeFunctionResult(functionFragment: 'getAccountCollateralAmount', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountCollateralAssets', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountCollateralRatio', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountCollateralRatios', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountCollateralValues', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountDebtAmount', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountDepositIndex', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountLiquidatable', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountMinCollateralAtRatio', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountMintIndex', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountMintedAssets', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountState', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountTotalCollateralValue', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountTotalCollateralValues', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountTotalDebtValue', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAccountTotalDebtValues', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'previewFee', data: BytesLike): Result;

  events: {};
}

export interface IAccountStateFacet extends BaseContract {
  contractName: 'IAccountStateFacet';

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IAccountStateFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAccountCollateralAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    getAccountCollateralAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[string[]]>;

    getAccountCollateralRatio(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber] & { ratio: BigNumber }>;

    getAccountCollateralRatios(_accounts: PromiseOrValue<string>[], overrides?: CallOverrides): Promise<[BigNumber[]]>;

    getAccountCollateralValues(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        value: BigNumber;
        valueAdjusted: BigNumber;
        price: BigNumber;
      }
    >;

    getAccountDebtAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    getAccountDepositIndex(
      _account: PromiseOrValue<string>,
      _collateralAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber] & { i: BigNumber }>;

    getAccountLiquidatable(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[boolean]>;

    getAccountMinCollateralAtRatio(
      _account: PromiseOrValue<string>,
      _ratio: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    getAccountMintIndex(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    getAccountMintedAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[string[]]>;

    getAccountState(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[MinterAccountStateStructOutput]>;

    getAccountTotalCollateralValue(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber] & { valueAdjusted: BigNumber }>;

    getAccountTotalCollateralValues(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber, BigNumber] & { value: BigNumber; valueAdjusted: BigNumber }>;

    getAccountTotalDebtValue(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[BigNumber]>;

    getAccountTotalDebtValues(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber, BigNumber] & { value: BigNumber; valueAdjusted: BigNumber }>;

    previewFee(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      _kreskoAssetAmount: PromiseOrValue<BigNumberish>,
      _feeType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<[string[], BigNumber[]] & { assets: string[]; amounts: BigNumber[] }>;
  };

  getAccountCollateralAmount(
    _account: PromiseOrValue<string>,
    _asset: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getAccountCollateralAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string[]>;

  getAccountCollateralRatio(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

  getAccountCollateralRatios(_accounts: PromiseOrValue<string>[], overrides?: CallOverrides): Promise<BigNumber[]>;

  getAccountCollateralValues(
    _account: PromiseOrValue<string>,
    _asset: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      value: BigNumber;
      valueAdjusted: BigNumber;
      price: BigNumber;
    }
  >;

  getAccountDebtAmount(
    _account: PromiseOrValue<string>,
    _asset: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getAccountDepositIndex(
    _account: PromiseOrValue<string>,
    _collateralAsset: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getAccountLiquidatable(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>;

  getAccountMinCollateralAtRatio(
    _account: PromiseOrValue<string>,
    _ratio: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getAccountMintIndex(
    _account: PromiseOrValue<string>,
    _kreskoAsset: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getAccountMintedAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string[]>;

  getAccountState(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<MinterAccountStateStructOutput>;

  getAccountTotalCollateralValue(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

  getAccountTotalCollateralValues(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<[BigNumber, BigNumber] & { value: BigNumber; valueAdjusted: BigNumber }>;

  getAccountTotalDebtValue(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

  getAccountTotalDebtValues(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<[BigNumber, BigNumber] & { value: BigNumber; valueAdjusted: BigNumber }>;

  previewFee(
    _account: PromiseOrValue<string>,
    _kreskoAsset: PromiseOrValue<string>,
    _kreskoAssetAmount: PromiseOrValue<BigNumberish>,
    _feeType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides,
  ): Promise<[string[], BigNumber[]] & { assets: string[]; amounts: BigNumber[] }>;

  callStatic: {
    getAccountCollateralAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountCollateralAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string[]>;

    getAccountCollateralRatio(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountCollateralRatios(_accounts: PromiseOrValue<string>[], overrides?: CallOverrides): Promise<BigNumber[]>;

    getAccountCollateralValues(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        value: BigNumber;
        valueAdjusted: BigNumber;
        price: BigNumber;
      }
    >;

    getAccountDebtAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountDepositIndex(
      _account: PromiseOrValue<string>,
      _collateralAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountLiquidatable(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<boolean>;

    getAccountMinCollateralAtRatio(
      _account: PromiseOrValue<string>,
      _ratio: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountMintIndex(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountMintedAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string[]>;

    getAccountState(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<MinterAccountStateStructOutput>;

    getAccountTotalCollateralValue(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountTotalCollateralValues(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber, BigNumber] & { value: BigNumber; valueAdjusted: BigNumber }>;

    getAccountTotalDebtValue(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountTotalDebtValues(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber, BigNumber] & { value: BigNumber; valueAdjusted: BigNumber }>;

    previewFee(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      _kreskoAssetAmount: PromiseOrValue<BigNumberish>,
      _feeType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<[string[], BigNumber[]] & { assets: string[]; amounts: BigNumber[] }>;
  };

  filters: {};

  estimateGas: {
    getAccountCollateralAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountCollateralAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountCollateralRatio(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountCollateralRatios(_accounts: PromiseOrValue<string>[], overrides?: CallOverrides): Promise<BigNumber>;

    getAccountCollateralValues(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountDebtAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountDepositIndex(
      _account: PromiseOrValue<string>,
      _collateralAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountLiquidatable(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountMinCollateralAtRatio(
      _account: PromiseOrValue<string>,
      _ratio: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountMintIndex(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAccountMintedAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountState(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountTotalCollateralValue(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountTotalCollateralValues(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountTotalDebtValue(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getAccountTotalDebtValues(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    previewFee(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      _kreskoAssetAmount: PromiseOrValue<BigNumberish>,
      _feeType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAccountCollateralAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountCollateralAssets(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountCollateralRatio(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountCollateralRatios(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountCollateralValues(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountDebtAmount(
      _account: PromiseOrValue<string>,
      _asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountDepositIndex(
      _account: PromiseOrValue<string>,
      _collateralAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountLiquidatable(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAccountMinCollateralAtRatio(
      _account: PromiseOrValue<string>,
      _ratio: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountMintIndex(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountMintedAssets(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAccountState(_account: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAccountTotalCollateralValue(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountTotalCollateralValues(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountTotalDebtValue(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAccountTotalDebtValues(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    previewFee(
      _account: PromiseOrValue<string>,
      _kreskoAsset: PromiseOrValue<string>,
      _kreskoAssetAmount: PromiseOrValue<BigNumberish>,
      _feeType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
