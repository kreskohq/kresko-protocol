[profile.default]
src = 'src/contracts/core'
out = 'out/foundry/'
libs = ['node_modules/', 'lib/']
test = 'src/contracts/test/'
cache_path = 'cache/forge/'
remappings = [
    'ds-test/=lib/forge-std/lib/ds-test/src/',
    'forge-std/=lib/forge-std/src/',
    'solmate/=lib/solmate/src/',
    "libs/=src/contracts/core/libs/",
    'diamond/=src/contracts/core/diamond/',
    'minter/=src/contracts/core/minter/',
    'vendor/=src/contracts/core/vendor/',
    'oracle/=src/contracts/core/oracle/',
    'scdp/=src/contracts/core/scdp/',
    'vault/=src/contracts/core/vault/',
    'common/=src/contracts/core/common/',
    'kiss/=src/contracts/core/kiss/',
    'scripts/=src/contracts/scripts/',
    'test/=src/contracts/test/',
    'mocks-misc/=src/contracts/mocks/',
    "mocks/=src/contracts/core/test/mocks",
    "periphery/=src/contracts/periphery/",
    'kresko-asset/=src/contracts/core/kresko-asset/',
    'kresko-helpers/=lib/kresko-foundry-helpers/src/',
    '@openzeppelin/=lib/openzeppelin-contracts/',
    '@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/',
    '@oz/=lib/openzeppelin-contracts/contracts/',
]
evm_version = 'paris'
via_ir = false
optimizer = true
optimizer_runs = 200
# [profile.optimizer_details]
# "yul" = false
# "constantOptimizer" = false
# "deduplicate" = false
# "peephole" = false
# "inliner" = false
# "jumpdestRemover" = false
# "orderLiterals" = false
# "cse" = false
# [profile.optimizer_details.yul_details]
# "stackAllocation" = true
[rpc_endpoints]
arbitrum = "${RPC_ARBITRUM_ALCHEMY}"
arbitrumGoerli = "${RPC_ARBITRUM_GOERLI_ALCHEMY}"
arbitrumNova = "${RPC_ARBITRUM_NOVA}"
mainnet = "${RPC_MAINNET_ALCHEMY}"
goerli = "${RPC_GOERLI_ALCHEMY}"
sepolia = "${RPC_SEPOLIA_ALCHEMY}"
optimism = "${RPC_OPTIMISM_ALCHEMY}"
optimismGoerli = "${RPC_OPTIMISM_GOERLI_ALCHEMY}"
bsc = "${RPC_BSC}"
polygon = "${RPC_POLYGON_ALCHEMY}"
polygonMumbai = "${RPC_POLYGON_MUMBAI_ALCHEMY}"
polygonZkEvm = "${RPC_POLYGON_ZKEVM_ALCHEMY}"
polygonZkEvmTestnet = "${RPC_POLYGON_ZKEVM_TESTNET_ALCHEMY}"
moonbeam = "${RPC_MOONBEAM}"
moonriver = "${RPC_MOONRIVER}"
gnosis = "${RPC_GNOSIS}"
avax = "${RPC_AVAX}"
fantom = "${RPC_FANTOM}"
celo = "${RPC_CELO}"
harmony = "${RPC_HARMONY}"
metis = "${RPC_METIS}"
aurora = "${RPC_AURORA}"
zkSync = "${RPC_ZKSYNC}"
zkSyncTestnet = "${RPC_ZKSYNC_TESTNET}"

[etherscan]
arbitrum = { key = "${ETHERSCAN_API_KEY_ARBITRUM}", chain = 42161, url = "https://api.arbiscan.io/api" }
arbitrumNova = { key = "${ETHERSCAN_API_KEY_ARBITRUM_NOVA}", chain = 42170, url = "https://api-nova.arbiscan.io/api" }
arbitrumGoerli = { key = "${ETHERSCAN_API_KEY_ARBITRUM}", chain = 421613, url = "https://api-goerli.arbiscan.io/api" }
mainnet = { key = "${ETHERSCAN_API_KEY_MAINNET}" }
goerli = { key = "${ETHERSCAN_API_KEY_GOERLI}", url = "https://api-goerli.etherscan.io/api" }
sepolia = { key = "${ETHERSCAN_API_KEY_SEPOLIA}", chain = 11155111, url = "https://api-sepolia.etherscan.io/api" }
optimism = { key = "${ETHERSCAN_API_KEY_OPTIMISM}", chain = 10, url = "https://api-optimistic.etherscan.io/api" }
optimismGoerli = { key = "${ETHERSCAN_API_KEY_OPTIMISM_GOERLI}", chain = 420, url = "http://api-goerli-optimism.etherscan.io/api" }
polygon = { key = "${ETHERSCAN_API_KEY_POLYGON}", chain = 137, url = "https://api.polygonscan.com/api" }
polygonMumbai = { key = "${ETHERSCAN_API_KEY_POLYGON_MUMBAI}", chain = 80001, url = "https://api-testnet.polygonscan.com/api" }
polygonZkEvm = { key = "${ETHERSCAN_API_KEY_POLYGON_ZKEVM}", chain = 1101, url = "https://api-zkevm.polygonscan.com/api" }
polygonZkEvmTestnet = { key = "${ETHERSCAN_API_KEY_POLYGON_ZKEVM_TESTNET}", chain = 1442, url = "https://api-testnet-zkevm.polygonscan.com/api" }
bsc = { key = "${ETHERSCAN_API_KEY_BSC}", chain = 56, url = "https://api.bscscan.com/api" }
moonbeam = { key = "${ETHERSCAN_API_KEY_MOONBEAM}", chain = 1284, url = "https://api-moonbeam.moonscan.io/api" }
moonriver = { key = "${ETHERSCAN_API_KEY_MOONRIVER}", chain = 1285, url = "https://api-moonriver.moonscan.io/api" }
gnosis = { key = "${ETHERSCAN_API_KEY_GNOSIS}", chain = 100, url = "https://api.gnosisscan.io/api" }
avax = { key = "${ETHERSCAN_API_KEY_AVAX}", chain = 43114, url = "https://api.snowtrace.io/api" }
fantom = { key = "${ETHERSCAN_API_KEY_FANTOM}", chain = 250, url = "https://api.ftmscan.com/api" }
celo = { key = "${ETHERSCAN_API_KEY_CELO}", chain = 42220, url = "https://api.celoscan.io/api" }
metis = { key = "any", chain = 1088, url = "https://andromeda-explorer.metis.io/api" }
aurora = { key = "any", chain = 421613, url = "https://explorer.mainnet.aurora.dev/api" }
zkSync = { key = "any", chain = 324, url = "https://zksync2-mainnet-explorer.zksync.io/contract_verification" }
zkSyncTestnet = { key = "any", chain = 280, url = "https://zksync2-testnet-explorer.zksync.dev/contract_verification" }

[fmt]
multiline_func_header = 'attributes_first'
single_line_block_style = 'single'
line_length = 120
