/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  KrStakingHelper,
  KrStakingHelperInterface,
} from "../../../../src/contracts/staking/KrStakingHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IUniswapV2Factory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IKrStaking",
        name: "_staking",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ClaimRewardsMulti",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "LiquidityAndStakeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "LiquidityAndStakeRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityAndStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "claimRewardsMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV2Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract IKrStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "withdrawAndRemoveLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346100fd57601f6111ee388190039182017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683019167ffffffffffffffff831184841017610101578084926060946040528339810103126100fd57805173ffffffffffffffffffffffffffffffffffffffff919082811681036100fd5760208201519183831683036100fd576040015192831683036100fd5760805260a05260c0526040516110d89081610116823960805181818160750152818161048c0152610a5e015260a05181818160c9015281816103d00152610951015260c05181818161018c015281816104040152818161083e01526109b20152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60406080815260049081361015610014575f80fd5b5f91823560e01c9081632df56a3f1461087a5781634cf088d914610829578163b4c29b68146102f2578163b6842c601461010557508063c45a0155146100b55763f887ea4014610062575f80fd5b346100b157816003193601126100b157517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602090f35b5080fd5b50346100b157816003193601126100b157517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602090f35b919050346102ee576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126102ee5773ffffffffffffffffffffffffffffffffffffffff9182610156610c33565b1692610163841515610c79565b82517f081e3eda00000000000000000000000000000000000000000000000000000000815292907f0000000000000000000000000000000000000000000000000000000000000000166020848481845afa9384156102e45786946102ad575b50855b8481106101f55786867fac4bb348f20fccad9f5419b8d566bc60a544d193931dc39efe624899e5d068b78280a280f35b813b1561029f5786835163bf82b7b560e01b81523386820152826024820152876044820152818160648183885af180156102a35761028b575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461025f576001016101c5565b7f4e487b7100000000000000000000000000000000000000000000000000000000875260118452602487fd5b61029490610cdf565b61029f57865f61022e565b8680fd5b85513d84823e3d90fd5b9093506020813d82116102dc575b816102c860209383610d07565b810103126102d85751925f6101c2565b8580fd5b3d91506102bb565b82513d88823e3d90fd5b8280fd5b8383346100b157610100367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100b15761032c610c33565b610334610c56565b936044359273ffffffffffffffffffffffffffffffffffffffff9260c435848116936064359290918590036108255761036e851515610c79565b83517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316848301908152908b166020828101919091529a919791908b90899081906040010381857f0000000000000000000000000000000000000000000000000000000000000000165afa97881561081b578a986107ec575b50817f000000000000000000000000000000000000000000000000000000000000000016948287519963ba8fc5bf60e01b8b52169384868b0152878a6024818a5afa80156107e2578b8d93928f92859d869161079c575b509187808b99989796959361046e6104dd96610d7f565b169661047c8330338b610de5565b169661048a8530338b610de5565b7f000000000000000000000000000000000000000000000000000000000000000016948c5180809581948963095ea7b360e01b9d8e8552840160209093929193604081019460018060a01b031681520152565b0391885af1801561074c578f908f8a898e87968995610758575b505190815273ffffffffffffffffffffffffffffffffffffffff90931690830190815260208101949094529092839190829081906040015b0391895af1801561074c57908f8f9493926106ff575b5050916060949391610104938b519e8f96879562e8e33760e81b87528c870152602486015260448501526064840152608435608484015260a43560a48401523060c484015260e43560e48401525af19788156106f557908a918a996106b9575b50855190815273ffffffffffffffffffffffffffffffffffffffff8516848201908152602081018a90529092839182908c90829060400103925af180156106af57610677575b50813b1561029f5783606488928386519586948593630efe6a8b60e01b85528401528960248401528a60448401525af180156102e457859392918791610658575b50507f67153b1f92f8a4e823af8ca2fdb93c3d313b9dcb1404c5da9a9c44234a3302e990519580a48152f35b6106659192939450610cdf565b61067357908391858861062c565b8480fd5b8881813d83116106a8575b61068c8183610d07565b810103126106a45761069d90610d55565b50886105eb565b8780fd5b503d610682565b84513d8a823e3d90fd5b915097506060813d82116106ed575b816106d560609383610d07565b810103126106e957848a910151978b6105a5565b8880fd5b3d91506106c8565b85513d8b823e3d90fd5b908092939450813d8311610745575b6107188183610d07565b81010312610741576101049260609594928f9261073490610d55565b509193509193948f610545565b8d80fd5b503d61070e565b8e8b51903d90823e3d90fd5b9650505050505081813d8311610795575b6107738183610d07565b81010312610741578e838f8a8961052f8f61078e8998610d55565b50906104f7565b503d610769565b889e50889796959492939150978a988d803d106107db575b6107be8183610d07565b81016107c991610d62565b9f909f92949395969798509850610457565b503d6107b4565b88513d8e823e3d90fd5b61080d9198508b3d8d11610814575b6108058183610d07565b810190610d29565b968b610400565b503d6107fb565b86513d8c823e3d90fd5b5f80fd5b5050346100b157816003193601126100b157517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602090f35b9050346102ee5760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126102ee576108b3610c33565b916108bc610c56565b6044359260a43573ffffffffffffffffffffffffffffffffffffffff8181169493918590036106a4576108f0851515610c79565b83517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8089168583019081529084166020828101919091529198919081908a9081906040010381867f0000000000000000000000000000000000000000000000000000000000000000165afa98891561081b578a99610c14575b5085517fba8fc5bf000000000000000000000000000000000000000000000000000000008152988316858a018190527f00000000000000000000000000000000000000000000000000000000000000008416878b602481845afa80156107e2578c9b8d91610be1575b506109f490610d7f565b8b813b15610bde578b608489838e958e8e5197889687956343a4534b60e01b875233908701526024860152604485015260648401525af180156107e257610bc1575b5086517f095ea7b30000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff8116888301908152602081018c90528d94919382918491908290889082906040015b03925af18015610bb7579089969594939291610b78575b505083859660e49596519889978896635d5155ef60e11b88521690860152166024840152896044840152606435606484015260843560848401528860a484015260c43560c48401525af180156102e457610b4b575b50507f27b4eb450d703cc6355f1bc733710bf45d86de95f33ef1c672786817a5c9265d8480a480f35b813d8311610b71575b610b5e8183610d07565b81010312610b6d575f80610b22565b8380fd5b503d610b54565b908097959650813d8311610bb0575b610b918183610d07565b810103126100b1578460e494610ba78a98610d55565b50969594610acd565b503d610b87565b89513d86823e3d90fd5b828792938b9d610bd3610ab694610cdf565b9d5050929150610a36565b80fd5b6109f49c50610c069150893d8b11610c0d575b610bfe8183610d07565b810190610d62565b909b6109ea565b503d610bf4565b81610c2c929a503d8b11610814576108058183610d07565b975f610981565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361082557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361082557565b15610c8057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4b523a20216164647265737300000000000000000000000000000000000000006044820152606490fd5b67ffffffffffffffff8111610cf357604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117610cf357604052565b90816020910312610825575173ffffffffffffffffffffffffffffffffffffffff811681036108255790565b5190811515820361082557565b919082604091031261082557610d7c602083519301610d55565b90565b15610d8657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4b523a2021706f6f6c45786973747300000000000000000000000000000000006044820152606490fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff9485166024840152948416604483015260648083019690965294815292939260a081019267ffffffffffffffff9283851183861017610cf357169060e0810184811084821117610cf3576040528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c08201525f80958192519082855af1903d15610fab573d928311610f7e5790610ee193929160405192610ed488601f19601f8401160185610d07565b83523d868885013e610fb6565b90815180610ef0575b50505050565b82849181010312610bde575081610f079101610d55565b15610f1457808080610eea565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b7f4e487b710000000000000000000000000000000000000000000000000000000085526041600452602485fd5b90610ee19392506060915b919290156110325750815115610fca575090565b3b15610fd35790565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156110455750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401525f935b828510611089575050604492505f838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061106756fea2646970667358221220bed2fe0641513dfe2b9b68fab556c3b0bc727229111ebcc00dde8ceb7c6f3d7764736f6c63430008140033";

type KrStakingHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KrStakingHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KrStakingHelper__factory extends ContractFactory {
  constructor(...args: KrStakingHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "KrStakingHelper";
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _staking: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KrStakingHelper> {
    return super.deploy(
      _router,
      _factory,
      _staking,
      overrides || {}
    ) as Promise<KrStakingHelper>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _staking: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _factory,
      _staking,
      overrides || {}
    );
  }
  override attach(address: string): KrStakingHelper {
    return super.attach(address) as KrStakingHelper;
  }
  override connect(signer: Signer): KrStakingHelper__factory {
    return super.connect(signer) as KrStakingHelper__factory;
  }
  static readonly contractName: "KrStakingHelper";

  public readonly contractName: "KrStakingHelper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KrStakingHelperInterface {
    return new utils.Interface(_abi) as KrStakingHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KrStakingHelper {
    return new Contract(address, _abi, signerOrProvider) as KrStakingHelper;
  }
}
