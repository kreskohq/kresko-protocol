/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { KrStakingHelper, KrStakingHelperInterface } from "../../../../src/contracts/staking/KrStakingHelper";

const _abi = [
    {
        inputs: [
            {
                internalType: "contract IUniswapV2Router02",
                name: "_router",
                type: "address",
            },
            {
                internalType: "contract IUniswapV2Factory",
                name: "_factory",
                type: "address",
            },
            {
                internalType: "contract IKrStaking",
                name: "_staking",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "ClaimRewardsMulti",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
        ],
        name: "LiquidityAndStakeAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
        ],
        name: "LiquidityAndStakeRemoved",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amountADesired",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBDesired",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "addLiquidityAndStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "claimRewardsMulti",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "factory",
        outputs: [
            {
                internalType: "contract IUniswapV2Factory",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IUniswapV2Router02",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "staking",
        outputs: [
            {
                internalType: "contract IKrStaking",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "withdrawAndRemoveLiquidity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
] as const;

const _bytecode =
    "0x60e0346100fd57601f6111fa388190039182017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683019167ffffffffffffffff831184841017610102578084926060946040528339810103126100fd57805173ffffffffffffffffffffffffffffffffffffffff919082811681036100fd5760208201519183831683036100fd576040015192831683036100fd5760805260a05260c0526040516110e19081610119823960805181818160780152818161048f0152610a62015260a05181818160cc015281816103d30152610955015260c05181818161018f015281816104070152818161084201526109b60152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081632df56a3f1461087e5781634cf088d91461082d578163b4c29b68146102f5578163b6842c601461010857508063c45a0155146100b85763f887ea401461006557600080fd5b346100b457816003193601126100b457517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602090f35b5080fd5b50346100b457816003193601126100b457517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602090f35b919050346102f1576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126102f15773ffffffffffffffffffffffffffffffffffffffff9182610159610c37565b1692610166841515610c7d565b82517f081e3eda00000000000000000000000000000000000000000000000000000000815292907f0000000000000000000000000000000000000000000000000000000000000000166020848481845afa9384156102e75786946102b0575b50855b8481106101f85786867fac4bb348f20fccad9f5419b8d566bc60a544d193931dc39efe624899e5d068b78280a280f35b813b156102a25786835163bf82b7b560e01b81523386820152826024820152876044820152818160648183885af180156102a65761028e575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610262576001016101c8565b7f4e487b7100000000000000000000000000000000000000000000000000000000875260118452602487fd5b61029790610ce3565b6102a2578638610231565b8680fd5b85513d84823e3d90fd5b9093506020813d82116102df575b816102cb60209383610d0d565b810103126102db575192386101c5565b8580fd5b3d91506102be565b82513d88823e3d90fd5b8280fd5b8383346100b457610100367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100b45761032f610c37565b610337610c5a565b936044359273ffffffffffffffffffffffffffffffffffffffff9260c4358481169360643592909185900361082857610371851515610c7d565b83517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316848301908152908b166020828101919091529a919791908b90899081906040010381857f0000000000000000000000000000000000000000000000000000000000000000165afa97881561081e578a986107ef575b50817f000000000000000000000000000000000000000000000000000000000000000016948287519963ba8fc5bf60e01b8b52169384868b0152878a6024818a5afa80156107e5578b8d93928f92859d869161079f575b509187808b9998979695936104716104e096610d85565b169661047f8330338b610deb565b169661048d8530338b610deb565b7f000000000000000000000000000000000000000000000000000000000000000016948c5180809581948963095ea7b360e01b9d8e8552840160209093929193604081019460018060a01b031681520152565b0391885af1801561074f578f908f8a898e8796899561075b575b505190815273ffffffffffffffffffffffffffffffffffffffff90931690830190815260208101949094529092839190829081906040015b0391895af1801561074f57908f8f949392610702575b5050916060949391610104938b519e8f96879562e8e33760e81b87528c870152602486015260448501526064840152608435608484015260a43560a48401523060c484015260e43560e48401525af19788156106f857908a918a996106bc575b50855190815273ffffffffffffffffffffffffffffffffffffffff8516848201908152602081018a90529092839182908c90829060400103925af180156106b25761067a575b50813b156102a25783606488928386519586948593630efe6a8b60e01b85528401528960248401528a60448401525af180156102e75785939291879161065b575b50507f67153b1f92f8a4e823af8ca2fdb93c3d313b9dcb1404c5da9a9c44234a3302e990519580a48152f35b6106689192939450610ce3565b61067657908391858861062f565b8480fd5b8881813d83116106ab575b61068f8183610d0d565b810103126106a7576106a090610d5b565b50886105ee565b8780fd5b503d610685565b84513d8a823e3d90fd5b915097506060813d82116106f0575b816106d860609383610d0d565b810103126106ec57848a910151978b6105a8565b8880fd5b3d91506106cb565b85513d8b823e3d90fd5b908092939450813d8311610748575b61071b8183610d0d565b81010312610744576101049260609594928f9261073790610d5b565b509193509193948f610548565b8d80fd5b503d610711565b8e8b51903d90823e3d90fd5b9650505050505081813d8311610798575b6107768183610d0d565b81010312610744578e838f8a896105328f6107918998610d5b565b50906104fa565b503d61076c565b889e50889796959492939150978a988d803d106107de575b6107c18183610d0d565b81016107cc91610d68565b9f909f9294939596979850985061045a565b503d6107b7565b88513d8e823e3d90fd5b6108109198508b3d8d11610817575b6108088183610d0d565b810190610d2f565b968b610403565b503d6107fe565b86513d8c823e3d90fd5b600080fd5b5050346100b457816003193601126100b457517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602090f35b9050346102f15760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126102f1576108b7610c37565b916108c0610c5a565b6044359260a43573ffffffffffffffffffffffffffffffffffffffff8181169493918590036106a7576108f4851515610c7d565b83517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8089168583019081529084166020828101919091529198919081908a9081906040010381867f0000000000000000000000000000000000000000000000000000000000000000165afa98891561081e578a99610c18575b5085517fba8fc5bf000000000000000000000000000000000000000000000000000000008152988316858a018190527f00000000000000000000000000000000000000000000000000000000000000008416878b602481845afa80156107e5578c9b8d91610be5575b506109f890610d85565b8b813b15610be2578b608489838e958e8e5197889687956343a4534b60e01b875233908701526024860152604485015260648401525af180156107e557610bc5575b5086517f095ea7b30000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff8116888301908152602081018c90528d94919382918491908290889082906040015b03925af18015610bbb579089969594939291610b7c575b505083859660e49596519889978896635d5155ef60e11b88521690860152166024840152896044840152606435606484015260843560848401528860a484015260c43560c48401525af180156102e757610b4f575b50507f27b4eb450d703cc6355f1bc733710bf45d86de95f33ef1c672786817a5c9265d8480a480f35b813d8311610b75575b610b628183610d0d565b81010312610b71573880610b26565b8380fd5b503d610b58565b908097959650813d8311610bb4575b610b958183610d0d565b810103126100b4578460e494610bab8a98610d5b565b50969594610ad1565b503d610b8b565b89513d86823e3d90fd5b828792938b9d610bd7610aba94610ce3565b9d5050929150610a3a565b80fd5b6109f89c50610c0a9150893d8b11610c11575b610c028183610d0d565b810190610d68565b909b6109ee565b503d610bf8565b81610c30929a503d8b11610817576108088183610d0d565b9738610985565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361082857565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361082857565b15610c8457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4b523a20216164647265737300000000000000000000000000000000000000006044820152606490fd5b67ffffffffffffffff8111610cf757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610cf757604052565b90816020910312610828575173ffffffffffffffffffffffffffffffffffffffff811681036108285790565b5190811515820361082857565b919082604091031261082857610d82602083519301610d5b565b90565b15610d8c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4b523a2021706f6f6c45786973747300000000000000000000000000000000006044820152606490fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff9485166024840152948416604483015260648083019690965294815292939260a081019267ffffffffffffffff9283851183861017610cf757169060e0810184811084821117610cf7576040528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152600080958192519082855af1903d15610fb2573d928311610f855790610ee893929160405192610edb88601f19601f8401160185610d0d565b83523d868885013e610fbd565b90815180610ef7575b50505050565b82849181010312610be2575081610f0e9101610d5b565b15610f1b57808080610ef1565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b7f4e487b710000000000000000000000000000000000000000000000000000000085526041600452602485fd5b90610ee89392506060915b919290156110395750815115610fd1575090565b3b15610fda5790565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561104c5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611092575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061106f56fea264697066735822122085281789df75be3646392d4089f14b2aa4e80e3ec6f76b8887670659e3df330964736f6c63430008130033";

type KrStakingHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KrStakingHelperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class KrStakingHelper__factory extends ContractFactory {
    constructor(...args: KrStakingHelperConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "KrStakingHelper";
    }

    override deploy(
        _router: PromiseOrValue<string>,
        _factory: PromiseOrValue<string>,
        _staking: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<KrStakingHelper> {
        return super.deploy(_router, _factory, _staking, overrides || {}) as Promise<KrStakingHelper>;
    }
    override getDeployTransaction(
        _router: PromiseOrValue<string>,
        _factory: PromiseOrValue<string>,
        _staking: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): TransactionRequest {
        return super.getDeployTransaction(_router, _factory, _staking, overrides || {});
    }
    override attach(address: string): KrStakingHelper {
        return super.attach(address) as KrStakingHelper;
    }
    override connect(signer: Signer): KrStakingHelper__factory {
        return super.connect(signer) as KrStakingHelper__factory;
    }
    static readonly contractName: "KrStakingHelper";

    public readonly contractName: "KrStakingHelper";

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): KrStakingHelperInterface {
        return new utils.Interface(_abi) as KrStakingHelperInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): KrStakingHelper {
        return new Contract(address, _abi, signerOrProvider) as KrStakingHelper;
    }
}
