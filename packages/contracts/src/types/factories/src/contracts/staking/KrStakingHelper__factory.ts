/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { KrStakingHelper, KrStakingHelperInterface } from "../../../../src/contracts/staking/KrStakingHelper";

const _abi = [
    {
        inputs: [
            {
                internalType: "contract IUniswapV2Router02",
                name: "_router",
                type: "address",
            },
            {
                internalType: "contract IUniswapV2Factory",
                name: "_factory",
                type: "address",
            },
            {
                internalType: "contract IKrStaking",
                name: "_staking",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "ClaimRewardsMulti",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
        ],
        name: "LiquidityAndStakeAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
        ],
        name: "LiquidityAndStakeRemoved",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amountADesired",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBDesired",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "addLiquidityAndStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "claimRewardsMulti",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "factory",
        outputs: [
            {
                internalType: "contract IUniswapV2Factory",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IUniswapV2Router02",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "staking",
        outputs: [
            {
                internalType: "contract IKrStaking",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "liquidity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountAMin",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountBMin",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "withdrawAndRemoveLiquidity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
] as const;

const _bytecode =
    "0x60e0346100fe57601f6113ba388190039182017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683019167ffffffffffffffff831184841017610103578084926060946040528339810103126100fe57805173ffffffffffffffffffffffffffffffffffffffff919082811681036100fe5760208201519183831683036100fe576040015192831683036100fe5760805260a05260c0526040516112a0908161011a823960805181818160ae015281816104fd0152610b68015260a051818181610120015281816104280152610a42015260c0518181816101a40152818161045c015281816109450152610a760152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081632df56a3f146109695781634cf088d9146108fa578163b4c29b681461034a578163b6842c601461014457508063c45a0155146100d65763f887ea401461006557600080fd5b346100d257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100d2576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346100d257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100d2576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b919050346103465760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103465773ffffffffffffffffffffffffffffffffffffffff9182610195610d56565b16926101a2841515610d9c565b7f000000000000000000000000000000000000000000000000000000000000000016918051927f081e3eda0000000000000000000000000000000000000000000000000000000084526020848481845afa93841561033c578694610305575b50855b8481106102345786867fac4bb348f20fccad9f5419b8d566bc60a544d193931dc39efe624899e5d068b78280a280f35b813b156102f7578683517fbf82b7b50000000000000000000000000000000000000000000000000000000081523386820152826024820152876044820152818160648183885af180156102fb576102e3575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146102b757600101610204565b6024876011867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6102ec90610e01565b6102f7578638610286565b8680fd5b85513d84823e3d90fd5b9093506020813d8211610334575b8161032060209383610e44565b8101031261033057519238610201565b8580fd5b3d9150610313565b82513d88823e3d90fd5b8280fd5b8383346100d2576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100d257610384610d56565b61038c610d79565b936044359260643560c4359273ffffffffffffffffffffffffffffffffffffffff948585168095036108f5576103c3851515610d9c565b8351957fe6a439050000000000000000000000000000000000000000000000000000000087526020998a8880610423848789840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b0381857f0000000000000000000000000000000000000000000000000000000000000000165afa9788156108eb578a986108bc575b50817f00000000000000000000000000000000000000000000000000000000000000001694828751997fba8fc5bf000000000000000000000000000000000000000000000000000000008b52169384868b0152878a6024818a5afa80156108b2578b8d93928f92859d869161086c575b509187808b9998979695936104df61057596610edb565b16966104ed8330338b610f40565b16966104fb8530338b610f40565b7f000000000000000000000000000000000000000000000000000000000000000016948c518080958194897f095ea7b3000000000000000000000000000000000000000000000000000000009d8e855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0391885af1801561081c578f908f8a898e87968995610828575b506105c8905196879586948594855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0391895af1801561081c57908f8f9493926107cf575b5050916060949391610104938b519e8f9687957fe8e337000000000000000000000000000000000000000000000000000000000087528c870152602486015260448501526064840152608435608484015260a43560a48401523060c484015260e43560e48401525af19788156107c557908a918a99610789575b5085519283918252818b816106938d8a8a84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1801561077f57610747575b50813b156102f757836064889283865195869485937f0efe6a8b0000000000000000000000000000000000000000000000000000000085528401528960248401528a60448401525af1801561033c57859392918791610728575b50507f67153b1f92f8a4e823af8ca2fdb93c3d313b9dcb1404c5da9a9c44234a3302e990519580a48152f35b6107359192939450610e01565b6107435790839185886106fc565b8480fd5b8881813d8311610778575b61075c8183610e44565b810103126107745761076d90610eb1565b50886106a2565b8780fd5b503d610752565b84513d8a823e3d90fd5b915097506060813d82116107bd575b816107a560609383610e44565b810103126107b957848a910151978b610658565b8880fd5b3d9150610798565b85513d8b823e3d90fd5b908092939450813d8311610815575b6107e88183610e44565b81010312610811576101049260609594928f9261080490610eb1565b509193509193948f6105de565b8d80fd5b503d6107de565b8e8b51903d90823e3d90fd5b9650505050505081813d8311610865575b6108438183610e44565b81010312610811578e838f8a896105c88f61085e8998610eb1565b509061058f565b503d610839565b889e50889796959492939150978a988d803d106108ab575b61088e8183610e44565b810161089991610ebe565b9f909f929493959697985098506104c8565b503d610884565b88513d8e823e3d90fd5b6108dd9198508b3d8d116108e4575b6108d58183610e44565b810190610e85565b968b610458565b503d6108cb565b86513d8c823e3d90fd5b600080fd5b5050346100d257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100d2576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b9050346103465760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610346576109a2610d56565b916109ab610d79565b906044359260a4359273ffffffffffffffffffffffffffffffffffffffff808516809503610774576109de851515610d9c565b8351967fe6a439050000000000000000000000000000000000000000000000000000000088526020808980610a3d87868a840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b0381867f0000000000000000000000000000000000000000000000000000000000000000165afa9889156108eb578a99610d37575b50827f0000000000000000000000000000000000000000000000000000000000000000168387519a7fba8fc5bf000000000000000000000000000000000000000000000000000000008c52169081878c0152878b602481845afa80156108b2578c9b8d91610d04575b50610ae590610edb565b8b813b15610d01578b608489838e958e8e5197889687957f43a4534b00000000000000000000000000000000000000000000000000000000875233908701526024860152604485015260648401525af180156108b257610ce4575b5086517f095ea7b30000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff8116888301908152602081018c90528d94919382918491908290889082906040015b03925af18015610cda579089969594939291610c9b575b505083859660e495965198899788967fbaa2abde0000000000000000000000000000000000000000000000000000000088521690860152166024840152896044840152606435606484015260843560848401528860a484015260c43560c48401525af1801561033c57610c6e575b50507f27b4eb450d703cc6355f1bc733710bf45d86de95f33ef1c672786817a5c9265d8480a480f35b813d8311610c94575b610c818183610e44565b81010312610c90573880610c45565b8380fd5b503d610c77565b908097959650813d8311610cd3575b610cb48183610e44565b810103126100d2578460e494610cca8a98610eb1565b50969594610bd7565b503d610caa565b89513d86823e3d90fd5b828792938b9d610cf6610bc094610e01565b9d5050929150610b40565b80fd5b610ae59c50610d299150893d8b11610d30575b610d218183610e44565b810190610ebe565b909b610adb565b503d610d17565b81610d4f929a503d8b116108e4576108d58183610e44565b9738610a72565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036108f557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036108f557565b15610da357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4b523a20216164647265737300000000000000000000000000000000000000006044820152fd5b67ffffffffffffffff8111610e1557604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e1557604052565b908160209103126108f5575173ffffffffffffffffffffffffffffffffffffffff811681036108f55790565b519081151582036108f557565b91908260409103126108f557610ed8602083519301610eb1565b90565b15610ee257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4b523a2021706f6f6c45786973747300000000000000000000000000000000006044820152fd5b919091604051602094858201947f23b872dd00000000000000000000000000000000000000000000000000000000865273ffffffffffffffffffffffffffffffffffffffff9485809216602485015216604483015260648201526064815260a081019267ffffffffffffffff9282851084861117610e1557169060e0810184811084821117610e15576040528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152600080958192519082855af1903d1561113d573d92831161111057906110599392916040519261104c887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160185610e44565b83523d868885013e611148565b90815180611068575b50505050565b82849181010312610d0157508161107f9101610eb1565b1561108c57808080611062565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b906110599392506060915b919290156111c3575081511561115c575090565b3b156111655790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156111d65750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110611253575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b81810183015186820160440152859350820161121256fea264697066735822122037c1da835b977e6a4efb4ef790ac4368e9e8546d60a7f4cfc560b4266784918364736f6c63430008130033";

type KrStakingHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KrStakingHelperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class KrStakingHelper__factory extends ContractFactory {
    constructor(...args: KrStakingHelperConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "KrStakingHelper";
    }

    override deploy(
        _router: PromiseOrValue<string>,
        _factory: PromiseOrValue<string>,
        _staking: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<KrStakingHelper> {
        return super.deploy(_router, _factory, _staking, overrides || {}) as Promise<KrStakingHelper>;
    }
    override getDeployTransaction(
        _router: PromiseOrValue<string>,
        _factory: PromiseOrValue<string>,
        _staking: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): TransactionRequest {
        return super.getDeployTransaction(_router, _factory, _staking, overrides || {});
    }
    override attach(address: string): KrStakingHelper {
        return super.attach(address) as KrStakingHelper;
    }
    override connect(signer: Signer): KrStakingHelper__factory {
        return super.connect(signer) as KrStakingHelper__factory;
    }
    static readonly contractName: "KrStakingHelper";

    public readonly contractName: "KrStakingHelper";

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): KrStakingHelperInterface {
        return new utils.Interface(_abi) as KrStakingHelperInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): KrStakingHelper {
        return new Contract(address, _abi, signerOrProvider) as KrStakingHelper;
    }
}
