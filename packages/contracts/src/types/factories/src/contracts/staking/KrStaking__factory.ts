/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { KrStaking, KrStakingInterface } from "../../../../src/contracts/staking/KrStaking";

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "rewardToken",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "ClaimRewards",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Deposit",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "EmergencyWithdraw",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "previousAdminRole",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "newAdminRole",
                type: "bytes32",
            },
        ],
        name: "RoleAdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
        ],
        name: "RoleGranted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
        ],
        name: "RoleRevoked",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Withdraw",
        type: "event",
    },
    {
        inputs: [],
        name: "DEFAULT_ADMIN_ROLE",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "OPERATOR_ROLE",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_rewardTokens",
                type: "address[]",
            },
            {
                internalType: "contract IERC20",
                name: "_depositToken",
                type: "address",
            },
            {
                internalType: "uint128",
                name: "_allocPoint",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "_startBlock",
                type: "uint128",
            },
        ],
        name: "addPool",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "allPendingRewards",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "pid",
                        type: "uint256",
                    },
                    {
                        internalType: "address[]",
                        name: "tokens",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct IKrStaking.Reward[]",
                name: "allRewards",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_rewardRecipient",
                type: "address",
            },
        ],
        name: "claim",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_for",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_rewardRecipient",
                type: "address",
            },
        ],
        name: "claimFor",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
        ],
        name: "emergencyWithdraw",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_depositToken",
                type: "address",
            },
        ],
        name: "getPidFor",
        outputs: [
            {
                internalType: "uint256",
                name: "pid",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "found",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
        ],
        name: "getRoleAdmin",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "grantRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "hasRole",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_rewardTokens",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "_rewardPerBlocks",
                type: "uint256[]",
            },
            {
                internalType: "contract IERC20",
                name: "_depositToken",
                type: "address",
            },
            {
                internalType: "uint128",
                name: "_allocPoint",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "_startBlock",
                type: "uint128",
            },
            {
                internalType: "address",
                name: "_admin",
                type: "address",
            },
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "massUpdatePools",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        name: "pendingRewards",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "pid",
                        type: "uint256",
                    },
                    {
                        internalType: "address[]",
                        name: "tokens",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct IKrStaking.Reward",
                name: "rewards",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
        ],
        name: "poolInfo",
        outputs: [
            {
                components: [
                    {
                        internalType: "contract IERC20",
                        name: "depositToken",
                        type: "address",
                    },
                    {
                        internalType: "uint128",
                        name: "allocPoint",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "lastRewardBlock",
                        type: "uint128",
                    },
                    {
                        internalType: "uint256[]",
                        name: "accRewardPerShares",
                        type: "uint256[]",
                    },
                    {
                        internalType: "address[]",
                        name: "rewardTokens",
                        type: "address[]",
                    },
                ],
                internalType: "struct IKrStaking.PoolInfo",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "poolLength",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "renounceRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "rescueNative",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "_tokenToRescue",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "rescueNonPoolToken",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "revokeRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "rewardPerBlockFor",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "uint128",
                name: "_newAllocPoint",
                type: "uint128",
            },
        ],
        name: "setPool",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_rewardToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_rewardPerBlock",
                type: "uint256",
            },
        ],
        name: "setRewardPerBlockFor",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalAllocPoint",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
        ],
        name: "updatePool",
        outputs: [
            {
                components: [
                    {
                        internalType: "contract IERC20",
                        name: "depositToken",
                        type: "address",
                    },
                    {
                        internalType: "uint128",
                        name: "allocPoint",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "lastRewardBlock",
                        type: "uint128",
                    },
                    {
                        internalType: "uint256[]",
                        name: "accRewardPerShares",
                        type: "uint256[]",
                    },
                    {
                        internalType: "address[]",
                        name: "rewardTokens",
                        type: "address[]",
                    },
                ],
                internalType: "struct IKrStaking.PoolInfo",
                name: "pool",
                type: "tuple",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "userInfo",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256[]",
                        name: "rewardDebts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct IKrStaking.UserInfo",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_rewardRecipient",
                type: "address",
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_for",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_rewardRecipient",
                type: "address",
            },
        ],
        name: "withdrawFor",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
] as const;

const _bytecode =
    "0x608080604052346100165761359b908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714611d1c575080630802f76814611b6e578063081e3eda14611b325780630ad58d2f146119dc5780630dbd1a38146119775780630efe6a8b146117325780631526fe27146116e357806317caf6f114611695578063248a9ca3146116485780632f2ff15d1461157757806336568abe1461149257806343a4534b146113115780634d7ee6441461121b57806351eb05a6146111d75780635312ea8e146110e65780635ea3f4fa14610fcc578063630b5ba114610f7d57806368e2f7b714610f18578063759be5151461078f57806391d148541461072457806392bb9fbf1461069657806393f1a40b146105ec578063a217fddf146105b2578063ba8fc5bf14610507578063bf82b7b514610409578063d18df53c146103ac578063d547741f1461034d578063ddd5e1b214610226578063f5b541a6146101cd5763fc82f0841461016957600080fd5b6000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85761019b611f9c565b6000808080478181156101bf575b3390f1156101b357005b6040513d6000823e3d90fd5b506108fc6101a9565b600080fd5b346101c8576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85760206040517f8952ae23cc3fea91b9dba0cefa16d18a26ca2bf124b54f42b5d04bce3aacecd28152f35b6040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85760043561025b611df0565b61026361308b565b61028473ffffffffffffffffffffffffffffffffffffffff82161515613362565b61028d82612df6565b9160005260c960205260406000203360005260205260406000209081546102b6575b6001609755005b6102cb906102c5839493612adf565b836134a4565b6060810191600191828201906080016000845b6102eb575b5050506102af565b815151811015610348576103429061033d64e8d4a510006103198754610312858c51612b04565b5190612504565b046103248387613073565b90919082549060031b91821b91600019901b1916179055565b612674565b846102de565b6102e3565b346101c8576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576103aa60043561038a611df0565b908060005260656020526103a5600160406000200154612254565b61248e565b005b346101c8576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576104056103f16103e9611df0565b600435612b45565b604051918291602083526020830190611f68565b0390f35b6060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85761043b611e36565b60243590610447611e13565b9061045061308b565b610458611f9c565b73ffffffffffffffffffffffffffffffffffffffff61047a8382161515613362565b61048384612df6565b9360005260c96020526040600020911660005260205260406000209081546104ac576001609755005b6104bb906102c5839493612adf565b6060810191600191828201906080016000845b6104da575050506102af565b815151811015610348576105019061033d64e8d4a510006103198754610312858c51612b04565b846104ce565b346101c8576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85761053e611e36565b60cb5490600090819073ffffffffffffffffffffffffffffffffffffffff908116905b84841061057a575b604080518581528415156020820152f35b909192828261058883612766565b505416146105a15761059990612674565b929190610561565b925050506040915060018380610569565b346101c8576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c857602060405160008152f35b346101c8576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c857610623611df0565b60405190610630826123ce565b60008083526060602093840152600435815260c98352604080822073ffffffffffffffffffffffffffffffffffffffff90931682529183522061067290612adf565b61040560405192839281845280518285015201516040808401526060830190611e78565b6040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576106c8611e36565b6106d0611f9c565b60cb5473ffffffffffffffffffffffffffffffffffffffff8281169060005b838110610703576103aa60243533876133c8565b8061033d848461071561071f95612766565b505416141561343e565b6106ef565b346101c8576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85761075b611df0565b600435600052606560205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101c85760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85767ffffffffffffffff6004358181116101c8576107df903690600401611dbf565b916024359081116101c8576107f8903690600401611dbf565b929091610803611e13565b9161080c611e59565b93608435906fffffffffffffffffffffffffffffffff821682036101c85760a4359673ffffffffffffffffffffffffffffffffffffffff881688036101c85760c43573ffffffffffffffffffffffffffffffffffffffff811681036101c8576000549860ff8a60081c1615998a809b610f0b575b8015610ef4575b15610e6f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081166001176000558a610e40575b50858303610dbb5760ff60005460081c1615610d36573360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff1615610cb4575b73ffffffffffffffffffffffffffffffffffffffff811660009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff1615610c1b575b5073ffffffffffffffffffffffffffffffffffffffff811660009081527f36445a9eff22e9b54d9de8c6cce3c202b8c41b22158fd9c5163f843551e37e7260205260409020547f8952ae23cc3fea91b9dba0cefa16d18a26ca2bf124b54f42b5d04bce3aacecd2919060ff1615610b90575b5080600052606560205260406000203360005260205260ff6040600020541615610b3c575b5060005b848110610ae1575050509181610a6a94936fffffffffffffffffffffffffffffffff610a20610a60956126c9565b9160405196610a2e886123b2565b73ffffffffffffffffffffffffffffffffffffffff1687528882166020880152166040860152606085015236916126fb565b608082015261296b565b6fffffffffffffffffffffffffffffffff610a8a60cc549282841661299b565b16906fffffffffffffffffffffffffffffffff19161760cc55610aa957005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b610aec8183856126a1565b3590610af98187896126a1565b359173ffffffffffffffffffffffffffffffffffffffff831683036101c857610b379260018060a01b031660005260ca602052604060002055612674565b6109f2565b8060005260656020526040600020336000526020526040600020600160ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4886109ee565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff9490941680845293909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905533919083907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4896109c9565b73ffffffffffffffffffffffffffffffffffffffff1660008181527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a489610957565b3360008181527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905581907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4610909565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608490fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f52657761726420746f6b656e73206d757374206861766520612072657761726460448201527f506572426c6f636b2076616c75650000000000000000000000000000000000006064820152608490fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000558a6108bb565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b50303b1580156108875750600160ff821614610887565b50600160ff821610610880565b346101c8576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85773ffffffffffffffffffffffffffffffffffffffff610f64611e36565b1660005260ca6020526020604060002054604051908152f35b6000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85760005b60cb548110156103aa5780610fc1610fc792612df6565b50612674565b610faa565b346101c8576020806003193601126101c857610fe6611e36565b60cb54610ff2816126b1565b916110006040519384612422565b8183527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061102d836126b1565b018460005b8281106110d05750505060005b8281106110a8575050506040519082820192808352815180945260408301938160408260051b8601019301916000955b82871061107c5785850386f35b909192938280611098600193603f198a82030186528851611f68565b960192019601959291909261106f565b806110b6836110cb93612b45565b6110c08287612b04565b52610fc18186612b04565b61103f565b6110d86129bf565b828288010152018590611032565b6020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85760043561111b61308b565b61112481612df6565b908060005260c9602052604060002033600052602052604060002061115660018060a01b0384511682549033906133c8565b600080825560019384830191859160800190825b6111a0575b505050505490337fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595600080a4609755005b8151518110156111d257806111b86111cc9286613073565b8154906000199060031b1b19169055612674565b8261116a565b61116f565b6020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85761040561120f600435612df6565b60405191829182611ef6565b6040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576004356024356fffffffffffffffffffffffffffffffff91828216918281036101c8576112b490611274611f9c565b61129f61128084612766565b505473ffffffffffffffffffffffffffffffffffffffff16151561300d565b8460016112ab85612766565b5001541661299b565b908360cc54921684831603908482116112fb576001926112ef926fffffffffffffffffffffffffffffffff199687911691161760cc55612766565b50018054909216179055005b634e487b7160e01b600052601160045260246000fd5b6080367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c857611343611e36565b6064359073ffffffffffffffffffffffffffffffffffffffff90602435906044358385168086036101c85761137661308b565b61137e611f9c565b611395829161138e8415156132fc565b1515613362565b61139e84612df6565b918460005260c9602052856040600020941693846000526020526113d06040600020976113ca89612adf565b856134a4565b86548082111561147a575050506113f385548095600088555b83511633906133c8565b60019480860191869160608201916080016000845b61143d575b5050505050507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568600080a4609755005b8151518110156114755761146f9061033d64e8d4a510006114648654610312858a51612b04565b04610324838a613073565b84611408565b61140d565b9561148b8397926113f39493612b18565b88556113e9565b346101c8576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576114c9611df0565b3373ffffffffffffffffffffffffffffffffffffffff8216036114f2576103aa9060043561248e565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608490fd5b346101c8576040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576004356115b1611df0565b8160005260656020526115cb600160406000200154612254565b81600052606560205260406000209060018060a01b0316908160005260205260ff60406000205416156115fa57005b8160005260656020526040600020816000526020526040600020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4005b346101c8576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85760043560005260656020526020600160406000200154604051908152f35b346101c8576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85760206fffffffffffffffffffffffffffffffff60cc5416604051908152f35b346101c8576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85761171a612dc9565b5061040561120f61172c600435612766565b50612a2e565b6060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c857611764611e36565b60443560243561177261308b565b61177b81612766565b505473ffffffffffffffffffffffffffffffffffffffff93906117a1908516151561300d565b6117aa82612df6565b938260005260209460c98652816040600020931692836000528652604060002060019687820193845480156118f2575b509161181c84928a959486955116604051916323b872dd60e01b908301523360248301523060448301528a606483015260648252611817826123b2565b6130fb565b611827888254612517565b905560006060608083019201925b611869575b50505050507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15600080a4609755005b8151518110156118ed578061033d64e8d4a5100061189561188e6118e7958851612b04565b518c612504565b046118b26118a3848a613073565b91909283548360031b1c612517565b82547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60039390931b92831b1916911b179055565b83611835565b61183a565b6119006080860151516126c9565b9081519167ffffffffffffffff83116119615768010000000000000000831161196157611932838693818b558a6127a0565b0186600052836000208b60005b84811061194f57505050506117da565b86845194019381840155018c9061193f565b634e487b7160e01b600052604160045260246000fd5b6040367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576119a9611e36565b6119b1611f9c565b73ffffffffffffffffffffffffffffffffffffffff16600090815260ca602052604090206024359055005b6060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c857600435602435611a14611e13565b91611a1d61308b565b81611a298115156132fc565b73ffffffffffffffffffffffffffffffffffffffff92611a4c8585161515613362565b611a5583612df6565b918360005260c9602052604060002033600052602052611a7d6040600020966113ca88612adf565b855480821115611b1a57505050611aa084548094600087555b33908451166133c8565b60019380850191859160608201916080016000845b611ae8575b848888337ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568600080a4609755005b815151811015611b1557611b0f9061033d64e8d4a510006114648654610312858a51612b04565b84611ab5565b611aba565b94611b2b839692611aa09493612b18565b8755611a96565b346101c8576000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c857602060cb54604051908152f35b6080367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c85760043567ffffffffffffffff81116101c857611bb8903690600401611dbf565b90611bc1611df0565b90604435906fffffffffffffffffffffffffffffffff938483168084036101c857611bea611e59565b95611bf3611f9c565b60cb5473ffffffffffffffffffffffffffffffffffffffff9687169660005b828110611d05575050508215611ca6576103aa96610a609582611c3a60cc549282841661299b565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000090921691161760cc5580821615611c9d575b611c76846126c9565b9260405197611c84896123b2565b88526020880152166040860152606085015236916126fb565b50804316611c6d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4b523a2021726577617264546f6b656e730000000000000000000000000000006044820152606490fd5b8061033d8a84610715611d1795612766565b611c12565b346101c8576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101c8576004359063ffffffff60e01b82168092036101c8576020917f7965db0b000000000000000000000000000000000000000000000000000000008114908115611d95575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014905083611d8e565b9181601f840112156101c85782359167ffffffffffffffff83116101c8576020808501948460051b0101116101c857565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036101c857565b6044359073ffffffffffffffffffffffffffffffffffffffff821682036101c857565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101c857565b606435906fffffffffffffffffffffffffffffffff821682036101c857565b90815180825260208080930193019160005b828110611e98575050505090565b835185529381019392810192600101611e8a565b90815180825260208080930193019160005b828110611ecc575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101611ebe565b90611f65916020815260018060a01b0382511660208201526fffffffffffffffffffffffffffffffff80602084015116604083015260408301511660608201526080611f50606084015160a08385015260c0840190611e78565b9201519060a0601f1982850301910152611eac565b90565b611f6591815181526040611f8b6020840151606060208501526060840190611eac565b920151906040818403910152611e78565b3360009081527f36445a9eff22e9b54d9de8c6cce3c202b8c41b22158fd9c5163f843551e37e7260209081526040808320549092907f8952ae23cc3fea91b9dba0cefa16d18a26ca2bf124b54f42b5d04bce3aacecd29060ff16156120015750505050565b61200a3361254b565b84519161201683612406565b6042835284830193606036863783511561222757603085538351906001918210156122275790607860218601536041915b81831161215c5750505061211a576120a29385936120e6936120d7604894612116995198857f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008b97880152825192839160378901910161238f565b8401917f206973206d697373696e6720726f6c652000000000000000000000000000000060378401525180938684019061238f565b01036028810185520183612422565b517f08c379a000000000000000000000000000000000000000000000000000000000815291829160048301612444565b0390fd5b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156121fa577f3031323334353637383961626364656600000000000000000000000000000000901a6121998588612524565b5360041c9280156121cd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190612047565b7f4e487b710000000000000000000000000000000000000000000000000000000082526011600452602482fd5b7f4e487b710000000000000000000000000000000000000000000000000000000083526032600452602483fd5b7f4e487b710000000000000000000000000000000000000000000000000000000081526032600452602490fd5b600081815260209060658252604092838220338352835260ff84832054161561227d5750505050565b6122863361254b565b84519161229283612406565b6042835284830193606036863783511561222757603085538351906001918210156122275790607860218601536041915b81831161231e5750505061211a576120a29385936120e6936120d7604894612116995198857f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008b97880152825192839160378901910161238f565b909192600f811660108110156121fa577f3031323334353637383961626364656600000000000000000000000000000000901a61235b8588612524565b5360041c9280156121cd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191906122c3565b60005b8381106123a25750506000910152565b8181015183820152602001612392565b60a0810190811067ffffffffffffffff82111761196157604052565b6040810190811067ffffffffffffffff82111761196157604052565b6060810190811067ffffffffffffffff82111761196157604052565b6080810190811067ffffffffffffffff82111761196157604052565b90601f8019910116810190811067ffffffffffffffff82111761196157604052565b60409160208252612464815180928160208601526020868601910161238f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190565b906000918083526065602052604083209160018060a01b03169182845260205260ff6040842054166124bf57505050565b8083526065602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b818102929181159184041417156112fb57565b919082018092116112fb57565b908151811015612535570160200190565b634e487b7160e01b600052603260045260246000fd5b60405190612558826123ea565b602a82526020820160403682378251156125355760309053815160019081101561253557607860218401536029905b8082116125db5750506125975790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f8116601081101561265f577f3031323334353637383961626364656600000000000000000000000000000000901a6126178486612524565b5360041c91801561264a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190612587565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112fb5760010190565b91908110156125355760051b0190565b67ffffffffffffffff81116119615760051b60200190565b906126d3826126b1565b6126e06040519182612422565b82815280926126f1601f19916126b1565b0190602036910137565b9291612706826126b1565b916127146040519384612422565b829481845260208094019160051b81019283116101c857905b82821061273a5750505050565b813573ffffffffffffffffffffffffffffffffffffffff811681036101c857815290830190830161272d565b60cb548110156125355760cb60005260021b7fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb0190600090565b90918281106127ae57505050565b60009182526020822092830192015b8281106127c957505050565b8181556001016127bd565b906129555760018060a01b0391828151166bffffffffffffffffffffffff60a01b8354161782556020926fffffffffffffffffffffffffffffffff8483015116936040830151946001956fffffffffffffffffffffffffffffffff199060801b1617858501556002840191606084015180519567ffffffffffffffff9687811161196157680100000000000000009283821161196157859061287b838954818b558a6127a0565b0160009687528587208a885b8481106129435750505050506003608091019501519081519687116129165786116128e95782906128bd878754818955886127a0565b01938352818320925b8581106128d65750505050505050565b84518216848201559382019386016128c6565b7f4e487b710000000000000000000000000000000000000000000000000000000084526041600452602484fd5b7f4e487b710000000000000000000000000000000000000000000000000000000085526041600452602485fd5b88845194019381840155018b90612887565b634e487b7160e01b600052600060045260246000fd5b60cb54906801000000000000000082101561196157612993826001612999940160cb55612766565b906127d4565b565b9190916fffffffffffffffffffffffffffffffff808094169116019182116112fb57565b604051906129cc826123ea565b6060604083600081528260208201520152565b9060405191828154918282526020928383019160005283600020936000905b828210612a145750505061299992500383612422565b8554845260019586019588955093810193909101906129fe565b9060405191612a3c836123b2565b8260018060a01b03808354168252600192600384820154916020926fffffffffffffffffffffffffffffffff81168487015260801c6040860152612a82600282016129df565b606086015201906040519485869483855492838152019460005283600020936000915b838310612ac55750505050505060809291612ac1910384612422565b0152565b855481168752899750958101959484019491840191612aa5565b90604051612aec816123ce565b6020612aff6001839580548552016129df565b910152565b80518210156125355760209160051b010190565b919082039182116112fb57565b8115612b2f570490565b634e487b7160e01b600052601260045260246000fd5b9190602490612b526129bf565b50612b5f61172c85612766565b908460005260c960205260406000209060018060a01b0316600052602052612b8a6040600020612adf565b81516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291959193602091859190829073ffffffffffffffffffffffffffffffffffffffff165afa9283156101b357600093612d95575b50608082015194855195612bfe876126c9565b9060405193612c0c856123ea565b845260208401526040830152819584151580612d8b575b612c2f575b5050505050565b926000906fffffffffffffffffffffffffffffffff60cc5416915b858110612c58575050612c28565b612c66816060840151612b04565b519060018060a01b03612c7d826080860151612b04565b511660005260ca602052612cdf84612cda612cbd604060002054612cb76fffffffffffffffffffffffffffffffff60408a01511643612b18565b90612504565b6fffffffffffffffffffffffffffffffff60208801511690612504565b612b25565b918264e8d4a5100081020464e8d4a5100014831517156112fb5764e8d4a51000612d25612d1e612d3b93612d188d85612d869902612b25565b90612517565b8851612504565b04612d34836020890151612b04565b5190612b18565b612d49826040890151612b04565b52608083015173ffffffffffffffffffffffffffffffffffffffff90612d70908390612b04565b5116612d80826020890151612b04565b52612674565b612c4a565b5081511515612c23565b9092506020813d602011612dc1575b81612db160209383612422565b810103126101c857519138612beb565b3d9150612da4565b60405190612dd6826123b2565b606060808360008152600060208201526000604082015282808201520152565b90612dff612dc9565b50612e0c61172c83612766565b916fffffffffffffffffffffffffffffffff6040840151164311612e2d5750565b82516040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529060249060209083908390829073ffffffffffffffffffffffffffffffffffffffff165afa9182156101b357600092612fd6575b5081612ebd575b505082612993612999926fffffffffffffffffffffffffffffffff43166040840152612766565b9093916000906fffffffffffffffffffffffffffffffff60cc5416915b60808501518051821015612fc35773ffffffffffffffffffffffffffffffffffffffff90612f09908390612b04565b511660005260ca602052612f6083612cda612f43604060002054612cb76fffffffffffffffffffffffffffffffff60408c01511643612b18565b6fffffffffffffffffffffffffffffffff60208a01511690612504565b64e8d4a51000908082810204821481151715612fae5788612fa99392612f869202612b25565b612d8082612fa360608a015193612f9d8386612b04565b51612517565b92612b04565b612eda565b85634e487b7160e01b60005260116004526000fd5b5093955092508491506129939050612e96565b90916020823d602011613005575b81612ff160209383612422565b810103126130025750519038612e8f565b80fd5b3d9150612fe4565b1561301457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4b523a2021706f6f6c45786973747300000000000000000000000000000000006044820152606490fd5b80548210156125355760005260206000200190600090565b60026097541461309c576002609755565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60018060a01b031690604051613110816123ce565b6020928382527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564848301526000808486829651910182855af13d1561322d573d9167ffffffffffffffff8311612916579061318b9392916040519261317e88601f19601f8401160185612422565b83523d868885013e613237565b805180613199575b50505050565b81849181010312613229578201519081159182150361300257506131bf57808080613193565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b5080fd5b9061318b92916060915b919290156132b3575081511561324b575090565b3b156132545790565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156132c65750805190602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081529081906121169060048301612444565b1561330357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4b523a20302d77697468647261770000000000000000000000000000000000006044820152606490fd5b1561336957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4b523a2021726577617264526563697069656e740000000000000000000000006044820152606490fd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff9092166024830152604480830193909352918152608081019167ffffffffffffffff83118284101761196157612999926040526130fb565b1561344557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4b523a20706f6f6c4578697374730000000000000000000000000000000000006044820152606490fd5b919290926000805b6080850180515182101561355c57906134fb91816134ec64e8d4a510006134dd8a6103128560608f51930151612b04565b04612d348360208d0151612b04565b9182613500575b505050612674565b6134ac565b61352b60018060a01b039282613525868b8761351e86829951612b04565b51166133c8565b51612b04565b51169086167f9aa05b3d70a9e3e2f004f039648839560576334fb45c81f91b6db03ad9e2efc98680a43881816134f3565b5050505091505056fea2646970667358221220f6d23883b6d42ef79f619b36d1c3f0529730bcaed3b4fd4c3d1c97d2efde3b7664736f6c63430008130033";

type KrStakingConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KrStakingConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class KrStaking__factory extends ContractFactory {
    constructor(...args: KrStakingConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "KrStaking";
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<KrStaking> {
        return super.deploy(overrides || {}) as Promise<KrStaking>;
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    override attach(address: string): KrStaking {
        return super.attach(address) as KrStaking;
    }
    override connect(signer: Signer): KrStaking__factory {
        return super.connect(signer) as KrStaking__factory;
    }
    static readonly contractName: "KrStaking";

    public readonly contractName: "KrStaking";

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): KrStakingInterface {
        return new utils.Interface(_abi) as KrStakingInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): KrStaking {
        return new Contract(address, _abi, signerOrProvider) as KrStaking;
    }
}
