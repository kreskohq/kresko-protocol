/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
    UniswapV2LiquidityMathLibrary,
    UniswapV2LiquidityMathLibraryInterface,
} from "../../../../../src/contracts/test/markets/UniswapV2LiquidityMathLibrary";

const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "truePriceTokenA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "truePriceTokenB",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveB",
                type: "uint256",
            },
        ],
        name: "computeProfitMaximizingTrade",
        outputs: [
            {
                internalType: "bool",
                name: "aToB",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
] as const;

const _bytecode =
    "0x6080806040523461001a5761043c9081610020823930815050f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63fa6531541461002857600080fd5b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ce57602435606435600435604435816100728461006d87856103c9565b6101d1565b109361009661009161008486856103c9565b87156101c75785906103c9565b6103aa565b9285156101c057505b6103e592838202918083048514811517156101935784830403610135576100ce916100c9916101d1565b610246565b92841561012657506100df906103aa565b0481039081116100f9576040809350519182526020820152f35b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b61013091506103aa565b6100df565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f64732d6d6174682d6d756c2d6f766572666c6f770000000000000000000000006044820152fd5b6024887f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b905061009f565b83906103c9565b80fd5b81156101db570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9190820180921161021757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80156103a45760018170010000000000000000000000000000000081101561038d575b61031e6103116103046102f76102ea6102dd610335976008886801000000000000000061032b9a1015610380575b640100000000811015610373575b62010000811015610367575b61010081101561035b575b601081101561034e575b1015610346575b6102d7818b6101d1565b9061020a565b60011c6102d7818a6101d1565b60011c6102d781896101d1565b60011c6102d781886101d1565b60011c6102d781876101d1565b60011c6102d781866101d1565b60011c6102d781856101d1565b60011c80926101d1565b80821015610341575090565b905090565b60011b6102cd565b60041c9160021b916102c6565b811c9160041b916102bc565b60101c91811b916102b1565b60201c9160101b916102a5565b60401c9160201b91610297565b50680100000000000000009050608082901c610269565b50600090565b906103e891828102928184048114821517156102175783040361013557565b6000929180159182156103e0575b50501561013557565b80820294509150811582850482141715610217576103fe90846101d1565b1438806103d756fea2646970667358221220f61566842159cb7b88c01ff3fe15111610ca49ced3bb3ecd0af90833e95b00c664736f6c63430008130033";

type UniswapV2LiquidityMathLibraryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: UniswapV2LiquidityMathLibraryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2LiquidityMathLibrary__factory extends ContractFactory {
    constructor(...args: UniswapV2LiquidityMathLibraryConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "UniswapV2LiquidityMathLibrary";
    }

    override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<UniswapV2LiquidityMathLibrary> {
        return super.deploy(overrides || {}) as Promise<UniswapV2LiquidityMathLibrary>;
    }
    override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    override attach(address: string): UniswapV2LiquidityMathLibrary {
        return super.attach(address) as UniswapV2LiquidityMathLibrary;
    }
    override connect(signer: Signer): UniswapV2LiquidityMathLibrary__factory {
        return super.connect(signer) as UniswapV2LiquidityMathLibrary__factory;
    }
    static readonly contractName: "UniswapV2LiquidityMathLibrary";

    public readonly contractName: "UniswapV2LiquidityMathLibrary";

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): UniswapV2LiquidityMathLibraryInterface {
        return new utils.Interface(_abi) as UniswapV2LiquidityMathLibraryInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): UniswapV2LiquidityMathLibrary {
        return new Contract(address, _abi, signerOrProvider) as UniswapV2LiquidityMathLibrary;
    }
}
