/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { WBTC, WBTCInterface } from "../../../../src/contracts/test/WBTC";

const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "_name",
                type: "string",
            },
            {
                internalType: "string",
                name: "_symbol",
                type: "string",
            },
            {
                internalType: "uint8",
                name: "_decimals",
                type: "uint8",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "src",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "guy",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "dst",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "Deposit",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "src",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "dst",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "src",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "Withdrawal",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "guy",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "deposit",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "minters",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "minter",
                type: "address",
            },
        ],
        name: "toggleMinter",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "dst",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "src",
                type: "address",
            },
            {
                internalType: "address",
                name: "dst",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "wad",
                type: "uint256",
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
] as const;

const _bytecode =
    "0x608060405234620003fd5762001194803803806200001d8162000402565b928339810190606081830312620003fd57805167ffffffffffffffff9290838111620003fd5781620000519184016200045d565b9060209081840151858111620003fd57604091620000719186016200045d565b9301519360ff8516809503620003fd5760ff1993601285600254161760025560009333855260058452604085209360019485888254161790558251848111620003d0578554938685811c95168015620003c5575b8386101462000398578190601f9586811162000345575b508390868311600114620002c3578992620002b7575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690861b1785555b81519384116200028a5785548581811c911680156200027f575b8282101462000252578381116200020a575b5080928411600114620001a25750928293918392869462000196575b50501b916000199060031b1c19161790555b6002541617600255604051610ca59081620004ef8239f35b0151925038806200016c565b919083601f1981168780528488209488905b88838310620001ef5750505010620001d5575b505050811b0190556200017e565b015160001960f88460031b161c19169055388080620001c7565b858701518855909601959485019487935090810190620001b4565b8680528187208480870160051c82019284881062000248575b0160051c019086905b8281106200023c57505062000150565b8881550186906200022c565b9250819262000223565b7f4e487b710000000000000000000000000000000000000000000000000000000087526022600452602487fd5b90607f16906200013e565b7f4e487b710000000000000000000000000000000000000000000000000000000086526041600452602486fd5b015190503880620000f2565b888a52848a2089945091907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084168b5b878282106200032e575050841162000314575b505050811b01855562000124565b015160001960f88460031b161c1916905538808062000306565b8385015186558c97909501949384019301620002f3565b9091508789528389208680850160051c8201928686106200038e575b918a91869594930160051c01915b8281106200037f575050620000dc565b8b81558594508a91016200036f565b9250819262000361565b7f4e487b710000000000000000000000000000000000000000000000000000000088526022600452602488fd5b94607f1694620000c5565b7f4e487b710000000000000000000000000000000000000000000000000000000087526041600452602487fd5b600080fd5b6040519190601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820167ffffffffffffffff8111838210176200044757604052565b634e487b7160e01b600052604160045260246000fd5b919080601f84011215620003fd57825167ffffffffffffffff81116200044757602090620004b2601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016830162000402565b92818452828287010111620003fd5760005b818110620004da57508260009394955001015290565b8581018301518482018401528201620004c456fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461084c57508163095ea7b3146107b157816318160ddd1461077857816323b872dd146107285781632e1a7d4d1461066c578163313ce5671461062c57816362f6c9d51461058b57816370a082311461052957816395d89b4114610332578163a9059cbb146102e1578163b6b55f2514610252578163d0e30db0146101a0578163dd62ed3e14610128575063f46eccc4146100bf57600080fd5b346101245760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101245760ff8160209373ffffffffffffffffffffffffffffffffffffffff6101116109ee565b1681526005855220541690519015158152f35b5080fd5b90503461019c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019c5760209282916101656109ee565b61016d610a16565b9173ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b8280fd5b905082807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024f5750602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602360248201527f557365206465706f7369742875696e7432353620616d6f756e742920696e737460448201527f65616400000000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b90503461019c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019c573590338352600560205261029c60ff8285205416610a39565b33835260036020528083206102b2838254610a9e565b9055519081527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a280f35b50503461012457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101245760209061032961031f6109ee565b6024359033610b4c565b90519015158152f35b83833461012457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101245780519082600180549081811c9080831692831561051f575b60209384841081146104f3578388528795949392918115610498575060011461041c575b50505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103f057508291826103ec925282610988565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8088529193925086917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061048257505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f9282010191819361039e565b8054888501870152879450928501928101610447565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061039e565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f169161037a565b5050346101245760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610124578060209273ffffffffffffffffffffffffffffffffffffffff61057b6109ee565b1681526003845220549051908152f35b5050346101245760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101245773ffffffffffffffffffffffffffffffffffffffff6105d96109ee565b33845260056020526105f060ff8486205416610a39565b1682526005602052812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060ff8083161516911617905580f35b50503461012457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101245760209060ff600254169051908152f35b90503461019c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019c57359033835260036020526106b682828520541015610ada565b33835260036020528083206106cc838254610b3f565b9055828083801561071e575b8280929181923390f11561071357519081527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6560203392a280f35b51913d9150823e3d90fd5b6108fc91506106d8565b5050346101245760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610124576020906103296107676109ee565b61076f610a16565b60443591610b4c565b50503461012457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101245751478152602090f35b90503461019c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019c576020926107ec6109ee565b9183602435928392338252875273ffffffffffffffffffffffffffffffffffffffff8282209516948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8490843461019c57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019c57828354600181811c9080831692831561097e575b60209384841081146104f357838852879594939291811561049857506001146109025750505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103f057508291826103ec925282610988565b8780529193925086917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061096857505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f9282010191819361039e565b805488850187015287945092850192810161092d565b91607f1691610891565b60208082528251818301819052939260005b8581106109da575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b81810183015184820160400152820161099a565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610a1157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610a1157565b15610a4057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f742061206d696e74657200000000000000000000000000000000000000006044820152fd5b91908201809211610aab57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b15610ae157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f57455448393a204572726f7200000000000000000000000000000000000000006044820152fd5b91908203918211610aab57565b91907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9073ffffffffffffffffffffffffffffffffffffffff80941692600094848652602092600384526040918291610baa85848b20541015610ada565b3388141580610c33575b610bf1575b87895260038652828920610bce868254610b3f565b905516968781526003855220610be5838254610a9e565b905551908152a3600190565b87895260048652828920338a528652610c0f85848b20541015610ada565b87895260048652828920338a528652828920610c2c868254610b3f565b9055610bb9565b5087895260048652828920338a5286527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff838a20541415610bb456fea26469706673582212202c30eeabdaf4e0e43d115735b8beef616b66ad0876ebde0e17eabe74e57c690964736f6c63430008130033";

type WBTCConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: WBTCConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WBTC__factory extends ContractFactory {
    constructor(...args: WBTCConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "WBTC";
    }

    override deploy(
        _name: PromiseOrValue<string>,
        _symbol: PromiseOrValue<string>,
        _decimals: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<WBTC> {
        return super.deploy(_name, _symbol, _decimals, overrides || {}) as Promise<WBTC>;
    }
    override getDeployTransaction(
        _name: PromiseOrValue<string>,
        _symbol: PromiseOrValue<string>,
        _decimals: PromiseOrValue<BigNumberish>,
        overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): TransactionRequest {
        return super.getDeployTransaction(_name, _symbol, _decimals, overrides || {});
    }
    override attach(address: string): WBTC {
        return super.attach(address) as WBTC;
    }
    override connect(signer: Signer): WBTC__factory {
        return super.connect(signer) as WBTC__factory;
    }
    static readonly contractName: "WBTC";

    public readonly contractName: "WBTC";

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): WBTCInterface {
        return new utils.Interface(_abi) as WBTCInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): WBTC {
        return new Contract(address, _abi, signerOrProvider) as WBTC;
    }
}
