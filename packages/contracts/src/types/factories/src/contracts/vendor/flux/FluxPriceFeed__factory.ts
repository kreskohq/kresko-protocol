/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  FluxPriceFeed,
  FluxPriceFeedInterface,
} from "../../../../../src/contracts/vendor/flux/FluxPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "marketOpen",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "aggregatorRoundId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "int192",
        name: "answer",
        type: "int192",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "marketOpen",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "transmitter",
        type: "address",
      },
    ],
    name: "NewTransmission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VALIDATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256",
      },
    ],
    name: "getMarketOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "marketOpen",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAggregatorRoundId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestMarketOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "marketOpen",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTransmissionDetails",
    outputs: [
      {
        internalType: "int192",
        name: "_latestAnswer",
        type: "int192",
      },
      {
        internalType: "uint64",
        name: "_latestTimestamp",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_marketOpen",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int192",
        name: "_answer",
        type: "int192",
      },
      {
        internalType: "bool",
        name: "_marketOpen",
        type: "bool",
      },
    ],
    name: "transmit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "typeAndVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x604060a0815234620003fb57620016c3803803806200001e81620003ff565b928339810190606081830312620003fb57805173ffffffffffffffffffffffffffffffffffffffff81169190829003620003fb576020808201519260ff84168403620003fb578286015167ffffffffffffffff93848211620003fb570193601f91868387011215620003fb578551858111620002f4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe096620000c782860189168701620003ff565b98828a52868383010111620003fb5785905f5b838110620003e65750505f91890101525f80525f8452875f20335f52845260ff885f205416156200039d575b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775805f525f8552885f20335f52855260ff895f2054161562000352575b507f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c9892690815f525f8552885f20815f52855260ff895f2054161562000308575b50506080528451928311620002f4576003948554926001938481811c91168015620002e9575b82821014620002d5578381116200028d575b50809285116001146200020a5750839450908392915f94620001fe575b50501b915f1990841b1c19161790555b5161127e9081620004458239608051816109fd0152f35b015192505f80620001d7565b929484908116875f52845f20945f905b888383106200027257505050106200023b575b505050811b019055620001e7565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83861b60f8161c191690555f80806200022d565b8587015188559096019594850194879350908101906200021a565b875f52815f208480880160051c820192848910620002cb575b0160051c019085905b828110620002bf575050620001ba565b5f8155018590620002af565b92508192620002a6565b634e487b7160e01b5f52602260045260245ffd5b90607f1690620001a8565b634e487b7160e01b5f52604160045260245ffd5b815f525f8552885f20815f528552885f20600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a45f8062000182565b805f525f8552885f20335f528552885f20600160ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a45f62000143565b5f80525f8452875f20335f528452875f20600160ff1982541617905533335f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a462000106565b8181018301518b8201840152879201620000da565b5f80fd5b6040519190601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820167ffffffffffffffff811183821017620002f45760405256fe608060409080825260049081361015610016575f80fd5b5f91823560e01c91826301ffc9a714610b6a57508163181f5a7714610b15578163248a9ca314610acc5781632f2ff15d14610a21578163313ce567146109e357816336568abe1461094157816350d25bcd14610910578163541780fd1461074e57816354fd4d50146107325781635ed63b401461070d578163668a0f021461070d5781637284e416146105d757816375b238fc1461059c5781638205bf6a1461056b57816384b0f349146104c957816391d14854146104825781639a6fc8f5146103b5578163a217fddf1461039a578163b5ab58dc1461035c578163b633620c14610317578163c49baebe146102dc578163c6b050c1146102a7578163d547741f14610273578163e5fe4577146101d9575063feaf968c14610136575f80fd5b346101d657806003193601126101d6576101d28263ffffffff600154169283815260026020522091600184519361016c856110fc565b8581549560ff8760170b9788835260c01c948594856020850152015416151597889101525195869584879490929360a0949796929760c087019869ffffffffffffffffffff80961688526020880152151560408701526060860152608085015216910152565b0390f35b80fd5b90503461026f578160031936011261026f5732330361022c57606083808463ffffffff6001541681526002602052209060ff60018354930154168151928060170b845260c01c6020840152151590820152f35b606490602084519162461bcd60e51b8352820152601460248201527f4f6e6c792063616c6c61626c6520627920454f410000000000000000000000006044820152fd5b5080fd5b82843461026f5760016102a49161029f61028c36610c78565b9390928387528660205286200154610caf565b61116a565b80f35b82843461026f578160031936011261026f5760ff60018260209463ffffffff8354168152600286522001541690519015158152f35b82843461026f578160031936011261026f57602090517f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989268152f35b8383346101d6576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101d6575061035560209235611228565b9051908152f35b8383346101d6576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101d6575061035560209235611202565b82843461026f578160031936011261026f5751908152602090f35b919050346101d6576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126101d65781359169ffffffffffffffffffff83169081840361047e5784519061040b8261112c565b600f82527f4e6f20646174612070726573656e740000000000000000000000000000000000602083015263ffffffff8093116104625750506101d29184918416815260026020522091600184519361016c856110fc565b61047a865192839262461bcd60e51b84528301610c2e565b0390fd5b8280fd5b82843461026f5760ff8160209361049836610c78565b90825281865282822073ffffffffffffffffffffffffffffffffffffffff9091168252855220549151911615158152f35b90503461026f576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261026f57803563ffffffff918282116105285760208560ff600182888888168152600286522001541690519015158152f35b606490602086519162461bcd60e51b8352820152601760248201527f466c75785072696365466565643a20726f756e642049440000000000000000006044820152fd5b82843461026f578160031936011261026f578060209263ffffffff60015416815260028452205460c01c9051908152f35b82843461026f578160031936011261026f57602090517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b9050823461047e578260031936011261047e57805191836003549060019082821c928281168015610703575b60209586861082146106d75750848852908115610697575060011461063e575b6101d28686610634828b0383611148565b5191829182610c2e565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061068457505050826101d294610634928201019486610623565b8054868501880152928601928101610667565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610634826101d286610623565b7f4e487b7100000000000000000000000000000000000000000000000000000000845260229052602483fd5b93607f1693610603565b82843461026f578160031936011261026f5760209063ffffffff600154169051908152f35b82843461026f578160031936011261026f576020905160018152f35b9050823461047e578060031936011261047e578135908160170b80920361090c57602435801515809103610908577f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989268552602093858552828620338752855260ff8387205416156108ab5760015463ffffffff918282169083821461087f5750917f14763f9653228cd12887f43c05db1caec15aa7c42f8d1edabe741dcecf48c004959391816001606097950116809163ffffffff19161760015560018451610816816110fc565b86815289810167ffffffffffffffff42168152868201938685528c5260028b52868c209151838060c01b03169067ffffffffffffffff60c01b905160c01b16178155019051151560ff80198354169116179055600154169582519384528301523390820152a280f35b7f4e487b7100000000000000000000000000000000000000000000000000000000895260119052602488fd5b82517f08c379a0000000000000000000000000000000000000000000000000000000008152908101859052601960248201527f43616c6c6572206973206e6f7420612076616c696461746f72000000000000006044820152606490fd5b8480fd5b8380fd5b82843461026f578160031936011261026f578060209263ffffffff60015416815260028452205460170b9051908152f35b90503461026f5761095136610c78565b913373ffffffffffffffffffffffffffffffffffffffff84160361097a5750906102a49161116a565b608490602086519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b82843461026f578160031936011261026f576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b82843461026f57610a3136610c78565b909182845283602052610a4960018286200154610caf565b828452602084815281852073ffffffffffffffffffffffffffffffffffffffff9093168086529290528084205460ff1615610a82578380f35b828452836020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a48180808380f35b8391503461047e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261047e57816020936001923581528085522001549051908152f35b82843461026f578160031936011261026f5780516101d291610b368261112c565b601382527f466c757850726963654665656420312e302e300000000000000000000000000060208301525191829182610c2e565b91503461047e576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc011261047e573563ffffffff60e01b811680910361047e57602092507f7965db0b000000000000000000000000000000000000000000000000000000008114908115610be3575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014905083610bdc565b5f5b838110610c1e5750505f910152565b8181015183820152602001610c0f565b60409160208252610c4e8151809281602086015260208686019101610c0d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190565b6040906003190112610cab576004359060243573ffffffffffffffffffffffffffffffffffffffff81168103610cab5790565b5f80fd5b5f818152602090808252604092838220338352835260ff848320541615610cd65750505050565b33908451610ce3816110fc565b602a815284810191863684378151156110cf57603083538151936001948510156110a2576078602184015360295b858111610fdb5750610f99578651936080850185811067ffffffffffffffff821117610f6c57885260428552868501956060368837855115610f3f57603087538551821015610f3f5790607860218701536041915b818311610e7457505050610e3257938593610e0293610df3604894610dbe7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000009961047a9b519a8b978801525180926037880190610c0d565b8401917f206973206d697373696e6720726f6c6520000000000000000000000000000000603784015251809386840190610c0d565b01036028810185520183611148565b517f08c379a000000000000000000000000000000000000000000000000000000000815291829160048301610c2e565b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015610f12577f3031323334353637383961626364656600000000000000000000000000000000901a610eb185896111dd565b5360041c928015610ee5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190610d66565b7f4e487b710000000000000000000000000000000000000000000000000000000082526011600452602482fd5b7f4e487b710000000000000000000000000000000000000000000000000000000083526032600452602483fd5b7f4e487b710000000000000000000000000000000000000000000000000000000081526032600452602490fd5b7f4e487b710000000000000000000000000000000000000000000000000000000087526041600452602487fd5b60648688519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015611075577f3031323334353637383961626364656600000000000000000000000000000000901a61101683866111dd565b5360041c908015611048577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610d11565b7f4e487b710000000000000000000000000000000000000000000000000000000087526011600452602487fd5b7f4e487b710000000000000000000000000000000000000000000000000000000088526032600452602488fd5b7f4e487b710000000000000000000000000000000000000000000000000000000086526032600452602486fd5b7f4e487b710000000000000000000000000000000000000000000000000000000085526032600452602485fd5b6060810190811067ffffffffffffffff82111761111857604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff82111761111857604052565b90601f8019910116810190811067ffffffffffffffff82111761111857604052565b905f9180835282602052604083209160018060a01b03169182845260205260ff60408420541661119957505050565b80835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b9081518110156111ee570160200190565b634e487b7160e01b5f52603260045260245ffd5b63ffffffff9081811161122257165f52600260205260405f205460170b90565b50505f90565b63ffffffff9081811161122257165f52600260205260405f205460c01c9056fea26469706673582212208f2ca871401a41c825677135e8a389d58f3f7f7dd41426b0903b1569c1e2320f64736f6c63430008140033";

type FluxPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FluxPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FluxPriceFeed__factory extends ContractFactory {
  constructor(...args: FluxPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FluxPriceFeed";
  }

  override deploy(
    _validator: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _description: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FluxPriceFeed> {
    return super.deploy(
      _validator,
      _decimals,
      _description,
      overrides || {}
    ) as Promise<FluxPriceFeed>;
  }
  override getDeployTransaction(
    _validator: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    _description: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _validator,
      _decimals,
      _description,
      overrides || {}
    );
  }
  override attach(address: string): FluxPriceFeed {
    return super.attach(address) as FluxPriceFeed;
  }
  override connect(signer: Signer): FluxPriceFeed__factory {
    return super.connect(signer) as FluxPriceFeed__factory;
  }
  static readonly contractName: "FluxPriceFeed";

  public readonly contractName: "FluxPriceFeed";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FluxPriceFeedInterface {
    return new utils.Interface(_abi) as FluxPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FluxPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as FluxPriceFeed;
  }
}
