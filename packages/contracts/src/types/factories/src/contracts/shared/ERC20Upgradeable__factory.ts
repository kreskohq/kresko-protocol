/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, PayableOverrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { ERC20Upgradeable, ERC20UpgradeableInterface } from "../../../../src/contracts/shared/ERC20Upgradeable";

const _abi = [
    {
        inputs: [],
        stateMutability: "payable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "_spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "nonces",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "v",
                type: "uint8",
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
            },
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
] as const;

const _bytecode =
    "0x60c060409080825260009081549060ff8260081c1615908180926200035b575b801562000342575b15620002c05750600160ff1992828285831617865562000291575b50466080528451918482549081841c84831692831562000286575b602097888310851462000259578890838952818901959283600014620002425750505060011462000208575b5067ffffffffffffffff9490819003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101919085831181841017620001db5782895251902090858101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8352888201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815260c081019481861090861117620001ae5784885251902060a05262000176575b8451610dac90816200036a823960805181610b9d015260a05181610bc40152f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989361ff001981541690558152a13880808062000155565b7f4e487b710000000000000000000000000000000000000000000000000000000087526041600452602487fd5b7f4e487b710000000000000000000000000000000000000000000000000000000088526041600452602488fd5b869150848852818820908589925b8284106200022b575050508501013862000089565b8054848a0186015289949093019287910162000216565b9194509150168352151560051b8501013862000089565b7f4e487b71000000000000000000000000000000000000000000000000000000008a52602260045260248afd5b90607f16906200005d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011784553862000042565b7f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b50303b158015620000275750600160ff84161462000027565b50600160ff8416106200001f56fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461092457508163095ea7b31461088757816318160ddd1461084b57816323b872dd14610730578163313ce567146106f05781633644e515146106ae57816370a082311461064c5781637ecebe00146105ea57816395d89b41146104cd578163a9059cbb14610420578163d505accf1461011f575063dd62ed3e146100a957600080fd5b3461011b57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b57806020926100e3610b11565b6100eb610b39565b73ffffffffffffffffffffffffffffffffffffffff91821683526006865283832091168252845220549051908152f35b5080fd5b90503461041c5760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261041c57610158610b11565b610160610b39565b9260443590606435936084359360ff8516809503610418574286106103bb57610187610b98565b9673ffffffffffffffffffffffffffffffffffffffff80921696878a5260209660078852858b20998a549a60018c019055865192858a8501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528c8a870152169b8c606086015289608086015260a085015260c084015260c0835260e0830167ffffffffffffffff948482108683111761038f57818952845190206101008501927f19010000000000000000000000000000000000000000000000000000000000008452610102860152610122850152604281526101608401948186109086111761036357848852519020835261018082015260a4356101a082015260c4356101c0909101528880528590899060809060015afa15610359578751169081151580610350575b156102f457508652600683528086208587528352808620829055519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a380f35b606490858451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152fd5b508582146102af565b82513d89823e3d90fd5b60248d6041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60248e60418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b8780fd5b8280fd5b50503461011b57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b5760209161045b610b11565b8273ffffffffffffffffffffffffffffffffffffffff602435923385526005875282852061048a858254610b5c565b90551692838152600586522081815401905582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b50503461011b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b578051908260025461050d816109e8565b808552916001918083169081156105a45750600114610547575b50505061053982610543940383610a3b565b5191829182610aab565b0390f35b9450600285527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b82861061058c575050506105398260206105439582010194610527565b8054602087870181019190915290950194810161056f565b6105439750869350602092506105399491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b82010194610527565b50503461011b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b578060209273ffffffffffffffffffffffffffffffffffffffff61063c610b11565b1681526007845220549051908152f35b50503461011b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b578060209273ffffffffffffffffffffffffffffffffffffffff61069e610b11565b1681526005845220549051908152f35b50503461011b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b576020906106e9610b98565b9051908152f35b50503461011b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b5760209060ff600354169051908152f35b50503461011b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b57610769610b11565b91610772610b39565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6044359173ffffffffffffffffffffffffffffffffffffffff8096169283855285602097889360068552828820338952855282882054847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610828575b505086885260058552828820610809858254610b5c565b9055169586815260058452208181540190558551908152a35160018152f35b61083191610b5c565b87895260068652838920338a5286528389205538846107f2565b90503461041c57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261041c5760209250549051908152f35b50503461011b57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b57602091816108c3610b11565b916024359182913381526006875273ffffffffffffffffffffffffffffffffffffffff8282209516948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8490843461041c57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261041c57826001805491610964836109e8565b808652928281169081156105a4575060011461098c5750505061053982610543940383610a3b565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8286106109d0575050506105398260206105439582010194610527565b805460208787018101919091529095019481016109b3565b90600182811c92168015610a31575b6020831014610a0257565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916109f7565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a7c57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60208082528251818301819052939260005b858110610afd575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610abd565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610b3457565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610b3457565b91908203918211610b6957565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000467f000000000000000000000000000000000000000000000000000000000000000003610be657507f000000000000000000000000000000000000000000000000000000000000000090565b6040518160019182549181610bfa846109e8565b9182825260209586830195878282169182600014610d3a575050600114610ce1575b50610c2992500382610a3b565b51902091604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f845260408301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a083015260a0825260c082019082821067ffffffffffffffff831117610cb4575060405251902090565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b80885286915087907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b858310610d22575050610c29935082010138610c1c565b80548388018501528694508893909201918101610d0b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168852610c2995151560051b8501019250389150610c1c905056fea26469706673582212201d53077e8b06b4af6897c0933445acd43846059329ba10105bbdc35e63c26b2e64736f6c63430008130033";

type ERC20UpgradeableConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ERC20UpgradeableConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1;

export class ERC20Upgradeable__factory extends ContractFactory {
    constructor(...args: ERC20UpgradeableConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "ERC20Upgradeable";
    }

    override deploy(overrides?: PayableOverrides & { from?: PromiseOrValue<string> }): Promise<ERC20Upgradeable> {
        return super.deploy(overrides || {}) as Promise<ERC20Upgradeable>;
    }
    override getDeployTransaction(
        overrides?: PayableOverrides & { from?: PromiseOrValue<string> },
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    override attach(address: string): ERC20Upgradeable {
        return super.attach(address) as ERC20Upgradeable;
    }
    override connect(signer: Signer): ERC20Upgradeable__factory {
        return super.connect(signer) as ERC20Upgradeable__factory;
    }
    static readonly contractName: "ERC20Upgradeable";

    public readonly contractName: "ERC20Upgradeable";

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): ERC20UpgradeableInterface {
        return new utils.Interface(_abi) as ERC20UpgradeableInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ERC20Upgradeable {
        return new Contract(address, _abi, signerOrProvider) as ERC20Upgradeable;
    }
}
