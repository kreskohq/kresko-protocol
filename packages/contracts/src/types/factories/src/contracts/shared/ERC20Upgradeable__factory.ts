/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20Upgradeable,
  ERC20UpgradeableInterface,
} from "../../../../src/contracts/shared/ERC20Upgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040908082525f9081549060ff8260081c161590818092610345575b801561032e575b156102ac5750600160ff1992828285831617865561027e575b50466080528451918482549081841c848316928315610274575b60209788831085146102475788908389528189019592835f14610231575050506001146101fa575b5067ffffffffffffffff9490819003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019190858311818410176101cd5782895251902090858101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8352888201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815260c0810194818610908611176101a05784885251902060a052610169575b8451610b90908162000353823960805181610982015260a051816109a90152f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989361ff001981541690558152a15f808080610148565b7f4e487b710000000000000000000000000000000000000000000000000000000087526041600452602487fd5b7f4e487b710000000000000000000000000000000000000000000000000000000088526041600452602488fd5b869150848852818820908589925b82841061021b575050508501015f61007f565b8054848a01860152899490930192879101610208565b9194509150168352151560051b8501015f61007f565b7f4e487b71000000000000000000000000000000000000000000000000000000008a52602260045260248afd5b90607f1690610057565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011784555f61003d565b7f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b50303b1580156100245750600160ff841614610024565b50600160ff84161061001d56fe6080604081815260049182361015610015575f80fd5b5f92833560e01c91826306fdde03146107b857508163095ea7b31461074757816318160ddd1461072957816323b872dd1461063b578163313ce567146106195781633644e515146105f557816370a08231146105925781637ecebe001461052f57816395d89b411461044e578163a9059cbb146103bd578163d505accf146100fe575063dd62ed3e146100a6575f80fd5b346100fa57806003193601126100fa57806020926100c2610913565b6100ca61093a565b73ffffffffffffffffffffffffffffffffffffffff91821683526006865283832091168252845220549051908152f35b5080fd5b9050346103b95760e0367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126103b957610137610913565b61013f61093a565b9260443590606435936084359360ff85168095036103b5574286106103725761016661097e565b9660018060a01b0380921696878a5260209660078852858b20998a549a60018c019055865192858a8501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528c8a870152169b8c606086015289608086015260a085015260c084015260c0835260e0830167ffffffffffffffff9484821086831117610346578189528451902061010085019261190160f01b8452610102860152610122850152604281526101608401948186109086111761031a57848852519020835261018082015260a4356101a082015260c4356101c0909101528880528590899060809060015afa15610310578751169081151580610307575b156102aa57508652600683528086208587528352808620829055519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a380f35b82517f08c379a0000000000000000000000000000000000000000000000000000000008152908101859052600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606490fd5b50858214610265565b82513d89823e3d90fd5b7f4e487b71000000000000000000000000000000000000000000000000000000008d526041875260248dfd5b7f4e487b71000000000000000000000000000000000000000000000000000000008e526041885260248efd5b506020606492519162461bcd60e51b8352820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b8780fd5b8280fd5b5050346100fa57806003193601126100fa576020916103da610913565b8260243591338452600586528184206103f484825461095d565b905573ffffffffffffffffffffffffffffffffffffffff16808452600586529220805482019055825190815233907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908590a35160018152f35b5050346100fa57816003193601126100fa57805190826002546104708161085e565b8085529160019180831690811561050757506001146104aa575b50505061049c826104a6940383610896565b51918291826108cc565b0390f35b9450600285527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8286106104ef5750505061049c8260206104a6958201019461048a565b805460208787018101919091529095019481016104d2565b6104a697508693506020925061049c94915060ff191682840152151560051b8201019461048a565b5050346100fa576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100fa57602091819073ffffffffffffffffffffffffffffffffffffffff610582610913565b1681526007845220549051908152f35b5050346100fa576020367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100fa57602091819073ffffffffffffffffffffffffffffffffffffffff6105e5610913565b1681526005845220549051908152f35b5050346100fa57816003193601126100fa5760209061061261097e565b9051908152f35b5050346100fa57816003193601126100fa5760209060ff600354169051908152f35b5050346100fa576060367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01126100fa57610674610913565b9161067d61093a565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6044359160018060a01b038096169283855285602097889360068552828820338952855282882054845f198203610706575b5050868852600585528288206106e785825461095d565b9055169586815260058452208181540190558551908152a35160018152f35b61070f9161095d565b87895260068652838920338a528652838920555f846106d0565b9050346103b957826003193601126103b95760209250549051908152f35b5050346100fa57806003193601126100fa5760209181610765610913565b91602435918291338152600687528181209460018060a01b0316948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b849084346103b957826003193601126103b9578260018054916107da8361085e565b8086529282811690811561050757506001146108025750505061049c826104a6940383610896565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8286106108465750505061049c8260206104a6958201019461048a565b80546020878701810191909152909501948101610829565b90600182811c9216801561088c575b602083101461087857565b634e487b7160e01b5f52602260045260245ffd5b91607f169161086d565b90601f8019910116810190811067ffffffffffffffff8211176108b857604052565b634e487b7160e01b5f52604160045260245ffd5b602080825282518183018190529093925f5b8281106108ff57505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016108de565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361093657565b5f80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361093657565b9190820391821161096a57565b634e487b7160e01b5f52601160045260245ffd5b5f467f0000000000000000000000000000000000000000000000000000000000000000036109cb57507f000000000000000000000000000000000000000000000000000000000000000090565b60405181600191825491816109df8461085e565b91828252602095868301958782821691825f14610b1e575050600114610ac5575b50610a0d92500382610896565b51902091604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f845260408301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a083015260a0825260c082019082821067ffffffffffffffff831117610a98575060405251902090565b7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452602490fd5b80885286915087907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b858310610b06575050610a0d93508201015f610a00565b80548388018501528694508893909201918101610aef565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168852610a0d95151560051b85010192505f9150610a00905056fea2646970667358221220712e8d8c2d58e8fb0b892b6d1cb87e2ba1dc8d6f59d2bd4bb7297706f23c24f864736f6c63430008140033";

type ERC20UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC20UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20Upgradeable";
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC20Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Upgradeable {
    return super.attach(address) as ERC20Upgradeable;
  }
  override connect(signer: Signer): ERC20Upgradeable__factory {
    return super.connect(signer) as ERC20Upgradeable__factory;
  }
  static readonly contractName: "ERC20Upgradeable";

  public readonly contractName: "ERC20Upgradeable";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20UpgradeableInterface {
    return new utils.Interface(_abi) as ERC20UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Upgradeable;
  }
}
