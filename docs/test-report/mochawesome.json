{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-30T17:13:01.323Z",
    "end": "2023-11-30T17:13:01.783Z",
    "duration": 460,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9ee5f540-a6e3-4d6e-bf99-d903b6554199",
      "title": "",
      "fullFile": "/Users/panukettunen/projects/kresko-protocol/src/test/diamond/00-init.ts",
      "file": "/src/test/diamond/00-init.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc6595fe-357c-403c-a5f7-db1356d6cb0b",
          "title": "Diamond",
          "fullFile": "/Users/panukettunen/projects/kresko-protocol/src/test/diamond/00-init.ts",
          "file": "/src/test/diamond/00-init.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Diamond\"",
              "fullTitle": "Diamond \"before each\" hook in \"Diamond\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "f = await (0, _fixtures.diamondFixture)();",
              "err": {},
              "uuid": "f50a890f-3d57-4038-8bd6-643786ffbf21",
              "parentUUID": "dc6595fe-357c-403c-a5f7-db1356d6cb0b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "011db9ad-8d6f-4352-ac0b-4400c228bc95",
              "title": "#initialization",
              "fullFile": "/Users/panukettunen/projects/kresko-protocol/src/test/diamond/00-init.ts",
              "file": "/src/test/diamond/00-init.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets correct state",
                  "fullTitle": "Diamond #initialization sets correct state",
                  "timedOut": false,
                  "duration": 113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(await _hardhat.default.Diamond.owner()).to.equal(_hardhat.default.users.deployer.address);\n(0, _chai.expect)(await _hardhat.default.Diamond.initialized()).to.equal(true);",
                  "err": {},
                  "uuid": "b2d9848d-d9fc-4257-8a23-43696f9e25c1",
                  "parentUUID": "011db9ad-8d6f-4352-ac0b-4400c228bc95",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "sets standard facet addresses",
                  "fullTitle": "Diamond #initialization sets standard facet addresses",
                  "timedOut": false,
                  "duration": 132,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const facetAddressesOnChain = (await _hardhat.default.Diamond.facets()).map((f)=>f.facetAddress);\nconst facetAddressesArtifact = f.facets.map((f)=>f.facetAddress);\n(0, _chai.expect)(facetAddressesOnChain.length).to.equal(facetAddressesArtifact.length);\n(0, _chai.expect)(facetAddressesOnChain).to.have.members(facetAddressesArtifact);",
                  "err": {},
                  "uuid": "2d717113-3fa2-4185-a257-a4c74bf21856",
                  "parentUUID": "011db9ad-8d6f-4352-ac0b-4400c228bc95",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "sets selectors of standard facets",
                  "fullTitle": "Diamond #initialization sets selectors of standard facets",
                  "timedOut": false,
                  "duration": 131,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const facetsSelectorsOnChain = (await _hardhat.default.Diamond.facets()).flatMap((f)=>f.functionSelectors);\nconst facetSelectorsOnArtifact = f.facets.flatMap((f)=>f.functionSelectors);\n(0, _chai.expect)(facetsSelectorsOnChain.length).to.equal(facetSelectorsOnArtifact.length);\n(0, _chai.expect)(facetsSelectorsOnChain).to.have.members(facetSelectorsOnArtifact);",
                  "err": {},
                  "uuid": "51018f3e-be2e-4f35-93df-b13ee8713cf4",
                  "parentUUID": "011db9ad-8d6f-4352-ac0b-4400c228bc95",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2d9848d-d9fc-4257-8a23-43696f9e25c1",
                "2d717113-3fa2-4185-a257-a4c74bf21856",
                "51018f3e-be2e-4f35-93df-b13ee8713cf4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 376,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "docs/test-report",
        "assetsDir": "docs/test-report/assets",
        "reportTitle": "Kresko Protocol Hardhat Test Report",
        "reportPageTitle": "Kresko Protocol Hardhat Test Report"
      },
      "version": "6.2.0"
    }
  }
}