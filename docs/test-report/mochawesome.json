{
  "stats": {
    "suites": 8,
    "tests": 16,
    "passes": 14,
    "pending": 1,
    "failures": 1,
    "start": "2023-10-13T01:47:15.590Z",
    "end": "2023-10-13T01:47:17.817Z",
    "duration": 2227,
    "testsRegistered": 16,
    "passPercent": 93.33333333333333,
    "pendingPercent": 6.25,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ac066d96-0cc6-483d-a2a4-8e90b1fbac4e",
      "title": "",
      "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
      "file": "/src/test/safety/00-council.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fa02b47a-54be-42f5-9619-c19b64e1074e",
          "title": "Safety Council",
          "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
          "file": "/src/test/safety/00-council.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Safety Council\"",
              "fullTitle": "Safety Council \"before each\" hook in \"Safety Council\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "f = await (0, _fixtures.defaultFixture)();\n// These are the 5 signers on the SafetyCouncil multisig\nconst { deployer, devOne, userOne, extOne, extTwo } = await hre.ethers.getNamedSigners();\nthis.deployer = deployer;\nthis.devOne = devOne;\nthis.userOne = userOne;\nthis.extOne = extOne;\nthis.extTwo = extTwo;",
              "err": {},
              "uuid": "3764f03c-9223-4655-b5f5-54262b88d0b2",
              "parentUUID": "fa02b47a-54be-42f5-9619-c19b64e1074e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "114d1376-ccba-4a78-837f-3c0021372fd8",
              "title": "#setSafetyStateSet",
              "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
              "file": "/src/test/safety/00-council.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "correctly sets the safety state",
                  "fullTitle": "Safety Council #setSafetyStateSet correctly sets the safety state",
                  "timedOut": false,
                  "duration": 102,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const beforeSafetyState = await hre.Diamond.safetyStateSet();\n(0, _chai.expect)(beforeSafetyState).to.equal(false);\nawait (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'setSafetyStateSet', [\n    true\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne\n]);\nconst safetyState = await hre.Diamond.safetyStateSet();\n(0, _chai.expect)(safetyState).to.equal(true);",
                  "err": {},
                  "uuid": "ecd0b9ed-b79b-4171-aba7-749a662f8f45",
                  "parentUUID": "114d1376-ccba-4a78-837f-3c0021372fd8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ecd0b9ed-b79b-4171-aba7-749a662f8f45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 102,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "46114c3b-69c0-4aac-86d2-5b6294ad1f06",
              "title": "#toggleAssetsPaused",
              "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
              "file": "/src/test/safety/00-council.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "c3c9a0d3-8232-4574-a87b-d73ecb169b72",
                  "title": "multisig signature threshold",
                  "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
                  "file": "/src/test/safety/00-council.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "multisig transacts successfully with majority of signers (3/5)",
                      "fullTitle": "Safety Council #toggleAssetsPaused multisig signature threshold multisig transacts successfully with majority of signers (3/5)",
                      "timedOut": false,
                      "duration": 60,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne\n]);\nconst isPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);",
                      "err": {},
                      "uuid": "3124e44e-1c18-410f-bbe2-83af98dd875b",
                      "parentUUID": "c3c9a0d3-8232-4574-a87b-d73ecb169b72",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "multisig transacts successfully with super-majority of signers (4/5)",
                      "fullTitle": "Safety Council #toggleAssetsPaused multisig signature threshold multisig transacts successfully with super-majority of signers (4/5)",
                      "timedOut": false,
                      "duration": 64,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne,\n    this.extOne\n]);\nconst isPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);",
                      "err": {},
                      "uuid": "f204937c-363c-466a-abff-71056e132f80",
                      "parentUUID": "c3c9a0d3-8232-4574-a87b-d73ecb169b72",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "multisig transacts successfully with all signers (5/5)",
                      "fullTitle": "Safety Council #toggleAssetsPaused multisig signature threshold multisig transacts successfully with all signers (5/5)",
                      "timedOut": false,
                      "duration": 64,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne,\n    this.extOne,\n    this.extTwo\n]);\nconst isPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);",
                      "err": {},
                      "uuid": "8d865e86-0d22-48b5-aea1-d45d4f58522d",
                      "parentUUID": "c3c9a0d3-8232-4574-a87b-d73ecb169b72",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "multisig should reject transactions signed by a minority of signers (2/5)",
                      "fullTitle": "Safety Council #toggleAssetsPaused multisig signature threshold multisig should reject transactions signed by a minority of signers (2/5)",
                      "timedOut": false,
                      "duration": 56,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _chai.expect)((0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer\n])).to.be.reverted;\nconst isPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(false);",
                      "err": {},
                      "uuid": "373d14e4-61b1-4298-96db-c40bca30f356",
                      "parentUUID": "c3c9a0d3-8232-4574-a87b-d73ecb169b72",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3124e44e-1c18-410f-bbe2-83af98dd875b",
                    "f204937c-363c-466a-abff-71056e132f80",
                    "8d865e86-0d22-48b5-aea1-d45d4f58522d",
                    "373d14e4-61b1-4298-96db-c40bca30f356"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 244,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "804e4837-a7d6-496e-bd0e-5edc488ad378",
                  "title": "toggle actions only for listed assets",
                  "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
                  "file": "/src/test/safety/00-council.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "can toggle actions for listed collateral assets",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle actions only for listed assets can toggle actions for listed collateral assets",
                      "timedOut": false,
                      "duration": 64,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne\n]);\nconst isPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);",
                      "err": {},
                      "uuid": "97a388b0-ede1-420d-9421-a28777c1a4dd",
                      "parentUUID": "804e4837-a7d6-496e-bd0e-5edc488ad378",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "can toggle actions for listed krAssets",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle actions only for listed assets can toggle actions for listed krAssets",
                      "timedOut": false,
                      "duration": 63,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.KrAsset.address\n    ],\n    _actions.default.REPAY,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne\n]);\nconst isPaused = await hre.Diamond.assetActionPaused(_actions.default.REPAY.toString(), f.KrAsset.address);\n(0, _chai.expect)(isPaused).to.equal(true);",
                      "err": {},
                      "uuid": "2d60ff36-90a9-4f3f-a712-6a9a4e71d2e5",
                      "parentUUID": "804e4837-a7d6-496e-bd0e-5edc488ad378",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "cannot toggle actions for addresses that are not listed collateral assets or krAssets",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle actions only for listed assets cannot toggle actions for addresses that are not listed collateral assets or krAssets",
                      "timedOut": false,
                      "duration": 61,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const randomAddr = hre.ethers.utils.computeAddress('0xb976778317b23a1285ec2d483eda6904d9319135b89f1d8eee9f6d2593e2665d');\nawait (0, _chai.expect)((0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        randomAddr\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne\n])).to.be.reverted;\nconst isPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), randomAddr);\n(0, _chai.expect)(isPaused).to.equal(false);",
                      "err": {},
                      "uuid": "7cc3c59f-716e-43ae-9476-12e0b4389eca",
                      "parentUUID": "804e4837-a7d6-496e-bd0e-5edc488ad378",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "97a388b0-ede1-420d-9421-a28777c1a4dd",
                    "2d60ff36-90a9-4f3f-a712-6a9a4e71d2e5",
                    "7cc3c59f-716e-43ae-9476-12e0b4389eca"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 188,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "3b91c9ca-ed13-446f-9524-1943c43749b6",
                  "title": "duration based pausing",
                  "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
                  "file": "/src/test/safety/00-council.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "can optionally set a timeout on a given pause command",
                      "fullTitle": "Safety Council #toggleAssetsPaused duration based pausing can optionally set a timeout on a given pause command",
                      "timedOut": false,
                      "duration": 64,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const duration = 100000000;\nawait (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    true,\n    duration\n], [\n    this.deployer,\n    this.devOne,\n    this.userOne\n]);\nconst depositSafetyState = await hre.Diamond.safetyStateFor(f.Collateral.address, _actions.default.DEPOSIT);\n(0, _chai.expect)(depositSafetyState.length).to.equal(1);\n// Blocktime timestamp + duration should be equal to final timestamp\n(0, _chai.expect)(depositSafetyState[0].timestamp0.add(duration)).eq(depositSafetyState[0].timestamp1);",
                      "err": {},
                      "uuid": "7d624c7c-b0fa-4b75-9cff-a3be2c0dbac1",
                      "parentUUID": "3b91c9ca-ed13-446f-9524-1943c43749b6",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "duration based pause functionality should expire after the duration has passed",
                      "fullTitle": "Safety Council #toggleAssetsPaused duration based pausing duration based pause functionality should expire after the duration has passed",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "13c23786-d694-4f93-9674-d3a33c78f3c2",
                      "parentUUID": "3b91c9ca-ed13-446f-9524-1943c43749b6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7d624c7c-b0fa-4b75-9cff-a3be2c0dbac1"
                  ],
                  "failures": [],
                  "pending": [
                    "13c23786-d694-4f93-9674-d3a33c78f3c2"
                  ],
                  "skipped": [],
                  "duration": 64,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "3c86af49-10d1-4698-8b81-fdb60525d1b5",
                  "title": "toggle all possible actions: DEPOSIT, WITHDRAW, REPAY, BORROW, LIQUIDATION",
                  "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
                  "file": "/src/test/safety/00-council.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "can toggle action DEPOSIT pause status on and off",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle all possible actions: DEPOSIT, WITHDRAW, REPAY, BORROW, LIQUIDATION can toggle action DEPOSIT pause status on and off",
                      "timedOut": false,
                      "duration": 122,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nlet isPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);\nawait (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nisPaused = await hre.Diamond.assetActionPaused(_actions.default.DEPOSIT.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(false);",
                      "err": {},
                      "uuid": "6841bcd8-3e8b-4270-a2fa-3babe585800d",
                      "parentUUID": "3c86af49-10d1-4698-8b81-fdb60525d1b5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "can toggle action WITHDRAW pause status on and off",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle all possible actions: DEPOSIT, WITHDRAW, REPAY, BORROW, LIQUIDATION can toggle action WITHDRAW pause status on and off",
                      "timedOut": false,
                      "duration": 126,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.WITHDRAW,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nlet isPaused = await hre.Diamond.assetActionPaused(_actions.default.WITHDRAW.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);\nawait (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.WITHDRAW,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nisPaused = await hre.Diamond.assetActionPaused(_actions.default.WITHDRAW.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(false);",
                      "err": {},
                      "uuid": "0648a039-fbcf-4319-85f6-a852e5bcb0d9",
                      "parentUUID": "3c86af49-10d1-4698-8b81-fdb60525d1b5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "can toggle action REPAY pause status on and off",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle all possible actions: DEPOSIT, WITHDRAW, REPAY, BORROW, LIQUIDATION can toggle action REPAY pause status on and off",
                      "timedOut": false,
                      "duration": 126,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.REPAY,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nlet isPaused = await hre.Diamond.assetActionPaused(_actions.default.REPAY.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);\nawait (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.REPAY,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nisPaused = await hre.Diamond.assetActionPaused(_actions.default.REPAY.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(false);",
                      "err": {},
                      "uuid": "5ee9809f-3810-4dac-95ee-4fbe2b59f610",
                      "parentUUID": "3c86af49-10d1-4698-8b81-fdb60525d1b5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "can toggle action BORROW pause status on and off",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle all possible actions: DEPOSIT, WITHDRAW, REPAY, BORROW, LIQUIDATION can toggle action BORROW pause status on and off",
                      "timedOut": false,
                      "duration": 130,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.BORROW,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nlet isPaused = await hre.Diamond.assetActionPaused(_actions.default.BORROW.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);\nawait (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.BORROW,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nisPaused = await hre.Diamond.assetActionPaused(_actions.default.BORROW.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(false);",
                      "err": {},
                      "uuid": "11969e8d-fa48-45b3-ac9b-ebdb8902244d",
                      "parentUUID": "3c86af49-10d1-4698-8b81-fdb60525d1b5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "can toggle action LIQUIDATION pause status on and off",
                      "fullTitle": "Safety Council #toggleAssetsPaused toggle all possible actions: DEPOSIT, WITHDRAW, REPAY, BORROW, LIQUIDATION can toggle action LIQUIDATION pause status on and off",
                      "timedOut": false,
                      "duration": 127,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.LIQUIDATION,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nlet isPaused = await hre.Diamond.assetActionPaused(_actions.default.LIQUIDATION.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(true);\nawait (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.LIQUIDATION,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nisPaused = await hre.Diamond.assetActionPaused(_actions.default.LIQUIDATION.toString(), f.Collateral.address);\n(0, _chai.expect)(isPaused).to.equal(false);",
                      "err": {},
                      "uuid": "9c1e6846-acc2-4c34-9c80-418fa92b2af9",
                      "parentUUID": "3c86af49-10d1-4698-8b81-fdb60525d1b5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6841bcd8-3e8b-4270-a2fa-3babe585800d",
                    "0648a039-fbcf-4319-85f6-a852e5bcb0d9",
                    "5ee9809f-3810-4dac-95ee-4fbe2b59f610",
                    "11969e8d-fa48-45b3-ac9b-ebdb8902244d",
                    "9c1e6846-acc2-4c34-9c80-418fa92b2af9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 631,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                },
                {
                  "uuid": "a2e4329f-4c06-4a52-8856-ac7662e70642",
                  "title": "event emission",
                  "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/safety/00-council.ts",
                  "file": "/src/test/safety/00-council.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should emit event MinterEvent.SafetyStateChange on action changed containing action, asset, and description",
                      "fullTitle": "Safety Council #toggleAssetsPaused event emission should emit event MinterEvent.SafetyStateChange on action changed containing action, asset, and description",
                      "timedOut": false,
                      "duration": 29,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const tx = await (0, _execution.executeContractCallWithSigners)(hre.Multisig, hre.Diamond, 'toggleAssetsPaused', [\n    [\n        f.Collateral.address\n    ],\n    _actions.default.DEPOSIT,\n    false,\n    0\n], [\n    this.deployer,\n    this.devOne,\n    this.extOne\n]);\nconst event = await (0, _events.getInternalEvent)(tx, hre.Diamond, 'SafetyStateChange');\n(0, _chai.expect)(event.action).to.equal(_actions.default.DEPOSIT);\n(0, _chai.expect)(event.asset).to.equal(f.Collateral.address);\n// @ts-ignore\n(0, _chai.expect)(event.description.hash).to.equal(hre.ethers.utils.keccak256(hre.ethers.utils.toUtf8Bytes('paused')));",
                      "err": {
                        "message": "AssertionError: expected undefined to equal '0xee35723ac350a69d2a92d3703f17439cbaa…'",
                        "estack": "AssertionError: expected undefined to equal '0xee35723ac350a69d2a92d3703f17439cbaa…'\n    at Context.<anonymous> (src/test/safety/00-council.ts:344:44)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runNextTicks (node:internal/process/task_queues:64:3)\n    at listOnTimeout (node:internal/timers:538:9)\n    at processTimers (node:internal/timers:512:7)",
                        "diff": null
                      },
                      "uuid": "7ab7ec6b-375d-4352-89c8-d2fe8e124e04",
                      "parentUUID": "a2e4329f-4c06-4a52-8856-ac7662e70642",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [
                    "7ab7ec6b-375d-4352-89c8-d2fe8e124e04"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 29,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 30000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "docs/test-report",
        "assetsDir": "docs/test-report/assets",
        "reportTitle": "Kresko Protocol Hardhat Test Report",
        "reportPageTitle": "Kresko Protocol Hardhat Test Report"
      },
      "version": "6.2.0"
    }
  }
}