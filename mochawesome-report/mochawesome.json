{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-23T23:49:26.646Z",
    "end": "2023-05-23T23:49:35.739Z",
    "duration": 9093,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "10320c08-0623-4dcc-84ac-475842cb7c6f",
      "title": "",
      "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/collateral-pool/00-collateral-pool.ts",
      "file": "/src/test/collateral-pool/00-collateral-pool.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e65f3aec-fea2-4c99-bc81-16efad6e8b76",
          "title": "Collateral Pool",
          "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/collateral-pool/00-collateral-pool.ts",
          "file": "/src/test/collateral-pool/00-collateral-pool.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Collateral Pool\"",
              "fullTitle": "Collateral Pool \"before each\" hook in \"Collateral Pool\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fixture = await _hardhat.default.deployments.createFixture(async (hre)=>{\n    const result = await hre.deployments.fixture(fixtureName);\n    if (result.Diamond) {\n        hre.Diamond = await hre.getContractOrFork(\"Kresko\");\n    }\n    return {\n        facets: result.Diamond ? result.Diamond.facets : [],\n        collaterals: hre.collaterals,\n        krAssets: hre.krAssets\n    };\n})();\nthis.facets = fixture.facets || [];\nthis.collaterals = fixture.collaterals;\nthis.krAssets = fixture.krAssets;",
              "err": {},
              "uuid": "c55b5a1f-565e-4f49-bf53-d62ccef382f9",
              "parentUUID": "e65f3aec-fea2-4c99-bc81-16efad6e8b76",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Collateral Pool\"",
              "fullTitle": "Collateral Pool \"before each\" hook in \"Collateral Pool\"",
              "timedOut": false,
              "duration": 8489,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "users = [\n    _hardhat.default.users.testUserFive,\n    _hardhat.default.users.testUserSix,\n    _hardhat.default.users.testUserSeven\n];\n[KreskoAsset, CollateralAsset, CollateralAsset8Dec] = await Promise.all([\n    (0, _krassets.addMockKreskoAsset)({\n        name: \"KreskoAssetPrice10USD\",\n        price: collateralPrice,\n        symbol: \"KreskoAssetPrice10USD\",\n        closeFee: 0.1,\n        openFee: 0.1,\n        marketOpen: true,\n        factor: 1.25,\n        supplyLimit: 100000\n    }, true),\n    (0, _collaterals.addMockCollateralAsset)({\n        name: \"Collateral18Dec\",\n        price: collateralPrice,\n        factor: 1,\n        decimals: 18\n    }),\n    (0, _collaterals.addMockCollateralAsset)({\n        name: \"Collateral8Dec\",\n        price: collateralPrice,\n        factor: 0.8,\n        decimals: 8\n    })\n]);\nfor (const user of users){\n    await Promise.all([\n        await CollateralAsset.setBalance(user, depositAmount18Dec),\n        await CollateralAsset8Dec.setBalance(user, depositAmount8Dec),\n        await CollateralAsset.contract.connect(user).approve(_hardhat.default.Diamond.address, _hardhat.default.ethers.constants.MaxUint256),\n        await CollateralAsset8Dec.contract.connect(user).approve(_hardhat.default.Diamond.address, _hardhat.default.ethers.constants.MaxUint256)\n    ]);\n}",
              "err": {},
              "uuid": "aefc59f5-486f-452a-ac68-9465117d67fe",
              "parentUUID": "e65f3aec-fea2-4c99-bc81-16efad6e8b76",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8425b7eb-7b77-4d1b-936e-b43e948c279b",
              "title": "#Withdraw",
              "fullFile": "/Users/panukettunen/Projects/kresko-protocol/src/test/collateral-pool/00-collateral-pool.ts",
              "file": "/src/test/collateral-pool/00-collateral-pool.ts",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"#Withdraw\"",
                  "fullTitle": "Collateral Pool #Withdraw \"before each\" hook in \"#Withdraw\"",
                  "timedOut": false,
                  "duration": 40,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await Promise.all([\n    await _hardhat.default.Diamond.enablePoolCollaterals([\n        CollateralAsset.address,\n        CollateralAsset8Dec.address\n    ], [\n        {\n            decimals: 18,\n            liquidationIncentive: (0, _lib.toBig)(1.1),\n            liquidityIndex: _lib.RAY\n        },\n        {\n            decimals: 18,\n            liquidationIncentive: (0, _lib.toBig)(1.05),\n            liquidityIndex: _lib.RAY\n        }\n    ]),\n    await _hardhat.default.Diamond.enablePoolKrAssets([\n        KreskoAsset.address\n    ], [\n        {\n            openFee: (0, _lib.toBig)(0.01),\n            closeFee: (0, _lib.toBig)(0.01),\n            protocolFee: (0, _lib.toBig)(0.25),\n            supplyLimit: (0, _lib.toBig)(1000000)\n        }\n    ])\n]);",
                  "err": {},
                  "uuid": "4f9f5a4d-7e53-493a-ae1e-c06cf3a441fb",
                  "parentUUID": "8425b7eb-7b77-4d1b-936e-b43e948c279b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be able to withdraw partial collateral of multiple assets",
                  "fullTitle": "Collateral Pool #Withdraw should be able to withdraw partial collateral of multiple assets",
                  "timedOut": false,
                  "duration": 527,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const partialWithdraw = depositAmount18Dec.div(users.length);\nconst partialWithdraw8Dec = depositAmount8Dec.div(users.length);\nconst expectedValueUnadjusted = (0, _lib.toBig)(collateralPrice * depositAmount, 8).mul(200).div(300);\nconst expectedValueAdjusted = (0, _lib.toBig)(collateralPrice * 1 * depositAmount, 8).mul(200).div(300); // cfactor = 1\nconst expectedValueUnadjusted8Dec = (0, _lib.toBig)(collateralPrice * depositAmount, 8).mul(200).div(300);\nconst expectedValueAdjusted8Dec = (0, _lib.toBig)(collateralPrice * 0.8 * depositAmount, 8).mul(200).div(300); // cfactor = 0.8\nfor (const user of users){\n    const Kresko = _hardhat.default.Diamond.connect(user);\n    await Kresko.poolDeposit(user.address, CollateralAsset.address, depositAmount18Dec);\n    await Kresko.poolDeposit(user.address, CollateralAsset8Dec.address, depositAmount8Dec);\n    (0, _chai.expect)(await Kresko.getPoolAccountDepositsWithFees(user.address, CollateralAsset.address)).to.equal(depositAmount18Dec);\n    await Kresko.poolWithdraw(user.address, CollateralAsset.address, partialWithdraw);\n    await Kresko.poolWithdraw(user.address, CollateralAsset8Dec.address, partialWithdraw8Dec);\n    (0, _chai.expect)(await CollateralAsset.contract.balanceOf(user.address)).to.equal(partialWithdraw);\n    (0, _chai.expect)(await CollateralAsset8Dec.contract.balanceOf(user.address)).to.equal(partialWithdraw8Dec);\n    (0, _chai.expect)(await Kresko.getPoolAccountDepositsWithFees(user.address, CollateralAsset.address)).to.equal(depositAmount18Dec.sub(partialWithdraw));\n    (0, _chai.expect)(await Kresko.getPoolAccountPrincipalDeposits(user.address, CollateralAsset.address)).to.equal(depositAmount18Dec.sub(partialWithdraw));\n    (0, _chai.expect)(await Kresko.getPoolAccountDepositsWithFees(user.address, CollateralAsset8Dec.address)).to.equal(depositAmount8Dec.sub(partialWithdraw8Dec));\n    (0, _chai.expect)(await Kresko.getPoolAccountPrincipalDeposits(user.address, CollateralAsset8Dec.address)).to.equal(depositAmount8Dec.sub(partialWithdraw8Dec));\n    (0, _chai.expect)(await _hardhat.default.Diamond.getPoolAccountTotalDepositsValue(user.address, false)).to.closeTo(expectedValueAdjusted.add(expectedValueAdjusted8Dec), (0, _lib.toBig)(0.00001, 8));\n    (0, _chai.expect)(await _hardhat.default.Diamond.getPoolAccountTotalDepositsValue(user.address, true)).to.closeTo(expectedValueUnadjusted.add(expectedValueUnadjusted8Dec), (0, _lib.toBig)(0.00001, 8));\n}\n(0, _chai.expect)(await CollateralAsset.contract.balanceOf(_hardhat.default.Diamond.address)).to.closeTo((0, _lib.toBig)(2000), 1);\n(0, _chai.expect)(await CollateralAsset8Dec.contract.balanceOf(_hardhat.default.Diamond.address)).to.closeTo((0, _lib.toBig)(2000, 8), 1);\n(0, _chai.expect)(await _hardhat.default.Diamond.getPoolDeposits(CollateralAsset.address)).to.closeTo((0, _lib.toBig)(2000), 1);\n(0, _chai.expect)(await _hardhat.default.Diamond.getPoolDeposits(CollateralAsset8Dec.address)).to.closeTo((0, _lib.toBig)(2000, 8), 1);\n(0, _chai.expect)(await _hardhat.default.Diamond.getPoolDepositsValue(CollateralAsset.address, true)).to.closeTo(expectedValueUnadjusted.mul(users.length), 20);\n(0, _chai.expect)(await _hardhat.default.Diamond.getPoolDepositsValue(CollateralAsset.address, false)).to.closeTo(expectedValueAdjusted.mul(users.length), 20);\n(0, _chai.expect)(await _hardhat.default.Diamond.getPoolDepositsValue(CollateralAsset8Dec.address, true)).to.closeTo(expectedValueUnadjusted8Dec.mul(users.length), 20);\n(0, _chai.expect)(await _hardhat.default.Diamond.getPoolDepositsValue(CollateralAsset8Dec.address, false)).to.closeTo(expectedValueAdjusted8Dec.mul(users.length), 20);\nconst totalValueRemaining = expectedValueUnadjusted8Dec.mul(users.length).add(expectedValueUnadjusted.mul(users.length));\nconst globals = await _hardhat.default.Diamond.getPoolStats(true);\n(0, _chai.expect)(globals.collateralValue).to.closeTo(totalValueRemaining, 20);\n(0, _chai.expect)(globals.debtValue).to.equal(0);\n(0, _chai.expect)(globals.cr).to.equal(0);",
                  "err": {},
                  "uuid": "efa35ae7-6f13-4cb3-94b5-6243351911cf",
                  "parentUUID": "8425b7eb-7b77-4d1b-936e-b43e948c279b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efa35ae7-6f13-4cb3-94b5-6243351911cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 527,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}