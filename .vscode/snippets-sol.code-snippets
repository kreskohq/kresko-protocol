{
  "kresko: default spdx and pragma": {
    "prefix": "kresko_spdx_pragma",
    "description": "Add default SPDX license identifier and pragma solidity version.",
    "scope": "solidity",
    "body": ["// SPDX-License-Identifier: ${2:BUSL-1.1}", "pragma solidity ${1:^0.8.0};", ""]
  },
  "kresko: stub natspec for function": {
    "prefix": "kresko_natspec_function",
    "description": "Function natspec template",
    "scope": "solidity",
    "body": ["/**", "* @notice $1", "* @dev $2", "* @param $3", "*/"]
  },
  "kresko: stub natspec for contract": {
    "prefix": "kresko_natspec_contract",
    "description": "Contract natspec template.",
    "scope": "solidity",
    "body": ["/** ", "* @title $1", "* @author Kresko", "* @notice $2", "* @dev $3", "*/"]
  },
  "kresko: disable solhint rules in forge test/script": {
    "prefix": "kresko_solhint_disable",
    "description": "Disable solhint rules in forge files",
    "scope": "solidity",
    "body": [
      "// solhint-disable state-visibility, max-states-count, var-name-mixedcase, no-global-import, const-name-snakecase, no-empty-blocks, no-console"
    ]
  },
  "kresko: forge test template with workspace tools": {
    "isFileTemplate": true,
    "prefix": "kresko_forge_test_template",
    "scope": "solidity",
    "body": [
      "// solhint-disable state-visibility, max-states-count, no-empty-blocks, no-console",
      "// SPDX-License-Identifier: MIT",
      "pragma solidity ^0.8.0;",
      "",
      "import {Deployed} from \"scripts/deploy/libs/Deployed.s.sol\";",
      "import {Log, Utils} from \"kresko-lib/utils/s/LibVm.s.sol\";",
      "import {ShortAssert} from \"kresko-lib/utils/s/ShortAssert.t.sol\";",
      "import {Tested} from \"kresko-lib/utils/s/Tested.t.sol\";",
      "",
      "contract TestSnip is Tested {",
      "    using Log for *;",
      "    using Utils for *;",
      "    using Deployed for *;",
      "    using ShortAssert for *;",
      "",
      "    function setUp() public users(address(111), address(222), address(333)) {",
      "        useMnemonic(\"MNEMONIC_DEVNET\");",
      "    }",
      "",
      "    function testTheThing() public {",
      "        prank(user0);",
      "        user0.eq(address(111), \"user-address\");",
      "        user0.clg(\"user-address\");",
      "    }",
      "}"
    ],
    "description": "Base for a new forge test using workspace utils"
  }
}
