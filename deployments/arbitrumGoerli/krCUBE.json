{
  "address": "0xCc0498199e461c6e2dcFe4e21c380F0981Fc77aF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "reinitializeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_minters",
          "type": "address[]"
        }
      ],
      "name": "toggleMinters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x96d0e714a420ff495e4ec85398c2d0565b60a1ad111c1a140ef5d23244f32c5d",
  "receipt": {
    "to": null,
    "from": "0xB48bB6b68Ab4D366B4f9A30eE6f7Ee55125c2D9d",
    "contractAddress": "0xCc0498199e461c6e2dcFe4e21c380F0981Fc77aF",
    "transactionIndex": 1,
    "gasUsed": "1869790",
    "logsBloom": "0x
    "blockHash": "0xe5bb9782b07785bb998a9cd84e42c5390982dfca93794c5c7803d647cb5a5b72",
    "transactionHash": "0x96d0e714a420ff495e4ec85398c2d0565b60a1ad111c1a140ef5d23244f32c5d",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 30747972,
        "transactionHash": "0x96d0e714a420ff495e4ec85398c2d0565b60a1ad111c1a140ef5d23244f32c5d",
        "address": "0xCc0498199e461c6e2dcFe4e21c380F0981Fc77aF",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b48bb6b68ab4d366b4f9a30ee6f7ee55125c2d9d"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 0,
        "blockHash": "0xe5bb9782b07785bb998a9cd84e42c5390982dfca93794c5c7803d647cb5a5b72"
      }
    ],
    "blockNumber": 30747972,
    "cumulativeGasUsed": "1869790",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "krCUBE",
    "krCUBE",
    18,
    "1000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "2796721ae8ad06f4477f7f47306878f4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"reinitializeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_minters\",\"type\":\"address[]\"}],\"name\":\"toggleMinters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/test/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":2000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\"},\"src/contracts/test/MockERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.19;\\n\\nimport {ERC20} from \\\"@rari-capital/solmate/src/tokens/ERC20.sol\\\";\\n\\ncontract MockERC20 is ERC20 {\\n    mapping(address => bool) public minters;\\n    address public owner;\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals,\\n        uint256 _initialSupply\\n    ) ERC20(_name, _symbol, _decimals) {\\n        _mint(msg.sender, _initialSupply);\\n        minters[msg.sender] = true;\\n    }\\n\\n    function reinitializeERC20(string memory _name, string memory _symbol) external {\\n        require(msg.sender == owner, \\\"!owner\\\");\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    function toggleMinters(address[] calldata _minters) external {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        for (uint256 i; i < _minters.length; i++) {\\n            minters[_minters[i]] = !minters[_minters[i]];\\n        }\\n    }\\n\\n    function mint(address to, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _mint(to, value);\\n    }\\n\\n    function burn(address from, uint256 value) public virtual {\\n        require(minters[msg.sender], \\\"!minter\\\");\\n        _burn(from, value);\\n    }\\n}\\n\",\"keccak256\":\"0x9a4855a995433302cd0ef114d70f8c4488b27b788510f83c1c2b9fbe71bbc59c\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60e060409080825234620005775762001e0480380380916200002282856200057c565b833981016080828203126200057757815167ffffffffffffffff919082811162000577578162000054918501620005bf565b916020918285015190828211620005775762000072918601620005bf565b93858101519060ff8216820362000577576060015190845194838611620005615760009580620000a3885462000655565b92601f9384811162000510575b5087908483116001146200048a5789926200047e575b50508160011b916000199060031b1c19161786555b86519084821162000451578190600198620000f78a5462000655565b828111620003fc575b50879183116001146200037a5788926200036e575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600383901b1c191690871b1786555b6080524660a05285518454908581620001608462000655565b9182825287820194888b8216918260001462000333575050600114620002f2575b6200018f925003826200057c565b5190208651848101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8352888201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815260c081019381851090851117620002c55783885251902060c05260025481810180911162000298579186949391600693600255338552600383528585208181540190558152837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833393a333835252209060ff1982541617905551611771908162000693823960805181610b31015260a0518161149e015260c051816114c50152f35b7f4e487b710000000000000000000000000000000000000000000000000000000085526011600452602485fd5b7f4e487b710000000000000000000000000000000000000000000000000000000086526041600452602486fd5b505086805281868089208a8a915b858310620003195750506200018f935082010162000181565b80919294505483858801015201910187908a859362000300565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687526200018f94151560051b8401019150620001819050565b01519050388062000115565b8989528789208a945091907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084168a5b8a828210620003e55750508411620003cb575b505050811b01865562000147565b015160001960f88460031b161c19169055388080620003bd565b8385015186558d97909501949384019301620003aa565b909192508989528789208380860160051c8201928a871062000447575b9186958d929594930160051c01915b8281106200043857505062000100565b8b81558695508c910162000428565b9250819262000419565b7f4e487b710000000000000000000000000000000000000000000000000000000087526041600452602487fd5b015190503880620000c6565b898052888a2092507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084168a5b8a828210620004f9575050908460019594939210620004df575b505050811b018655620000db565b015160001960f88460031b161c19169055388080620004d1565b6001859682939686015181550195019301620004b7565b9091508880528789208480850160051c8201928a861062000557575b9085949392910160051c01905b818110620005485750620000b0565b8a815584935060010162000539565b925081926200052c565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019067ffffffffffffffff8211908210176200056157604052565b919080601f84011215620005775782519067ffffffffffffffff82116200056157604051916020916200061a601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168401856200057c565b818452828287010111620005775760005b8181106200064157508260009394955001015290565b85810183015184820184015282016200062b565b90600182811c9216801562000687575b60208310146200067157565b634e487b7160e01b600052602260045260246000fd5b91607f16916200066556fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146111b057508163095ea7b3146111155781630ce403f414610caf57816318160ddd14610c7257816323b872dd14610b55578163313ce56714610af95781633644e51514610ab757816340c10f19146109d057816370a082311461096e5781637ecebe001461090c5781638da5cb5b146108b957816395d89b411461079e578382639dc29fac146106e857508163a9059cbb1461063b578163d505accf14610344578163dd62ed3e146102d0578163e8aa452714610156575063f46eccc4146100ed57600080fd5b346101525760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525760ff8160209373ffffffffffffffffffffffffffffffffffffffff61013f61139d565b1681526006855220541690519015158152f35b5080fd5b9050346102cc57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c85767ffffffffffffffff9181358381116102c457366023820112156102c457808301359384116102c457602494858201918636918760051b0101116102c057338752600680845260ff936101e085848b205416611676565b885b8781106101ed578980f35b73ffffffffffffffffffffffffffffffffffffffff80610216610211848c8a6116db565b61171a565b168b5283835286858c2054161590610232610211848c8a6116db565b168b52838352848b2090877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691161790557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610295576001016101e2565b888a6011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8680fd5b8580fd5b8380fd5b8280fd5b9050346102cc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc57602092829161030d61139d565b6103156113c5565b9173ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b8383346101525760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525761037d61139d565b906103866113c5565b91604435606435926084359260ff84168094036102c0574285106105de576103ac611499565b9573ffffffffffffffffffffffffffffffffffffffff8092169586895260209560058752848a209889549960018b01905585519285898501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528b89870152169a8b606086015288608086015260a085015260c084015260c0835260e0830167ffffffffffffffff94848210868311176105b157818852845190206101008501927f19010000000000000000000000000000000000000000000000000000000000008452610102860152610122850152604281526101608401948186109086111761058557848752519020835261018082015260a4356101a082015260c4356101c0909101528780528490889060809060015afa1561057b578651169687151580610572575b156105175786977f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259596975283528087208688528352818188205551908152a380f35b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152fd5b508488146104d4565b81513d88823e3d90fd5b60248c60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5060248c60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60648860208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b50503461015257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525760209161067661139d565b8273ffffffffffffffffffffffffffffffffffffffff60243592338552600387528285206106a585825461145d565b90551692838152600386522081815401905582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b80843461079b57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261079b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602061074361139d565b73ffffffffffffffffffffffffffffffffffffffff602435913387526006845261077260ff8789205416611676565b16938486526003835280862061078983825461145d565b9055816002540360025551908152a380f35b50fd5b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152578051908260018054916107e083611274565b808652928281169081156108735750600114610817575b505050610809826108139403836112c7565b5191829182611337565b0390f35b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82861061085b5750505061080982602061081395820101946107f7565b8054602087870181019190915290950194810161083e565b6108139750869350602092506108099491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101946107f7565b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525760209073ffffffffffffffffffffffffffffffffffffffff600754169051908152f35b5050346101525760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152578060209273ffffffffffffffffffffffffffffffffffffffff61095e61139d565b1681526005845220549051908152f35b5050346101525760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152578060209273ffffffffffffffffffffffffffffffffffffffff6109c061139d565b1681526003845220549051908152f35b9050346102cc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc57610a0861139d565b602435913385526006602052610a2360ff8587205416611676565b60025490838201809211610a8b5750849273ffffffffffffffffffffffffffffffffffffffff7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9360209360025516948585526003835280852082815401905551908152a380f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015257602090610af2611499565b9051908152f35b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b828434610c6f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610c6f57610b8e61139d565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610bb76113c5565b946044358573ffffffffffffffffffffffffffffffffffffffff80951694858752602098848a958652838920338a52865283892054857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c4c575b50505086885260038552828820610c2d85825461145d565b9055169586815260038452208181540190558551908152a35160018152f35b610c559161145d565b90888a528652838920338a528652838920558a8085610c15565b80fd5b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152576020906002549051908152f35b8391503461015257827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525767ffffffffffffffff81358181116102c857610cff90369084016113e8565b9160243582811161111157610d1790369083016113e8565b9473ffffffffffffffffffffffffffffffffffffffff6007541633036110b4575082518281116110885780610d4c8654611274565b94601f9586811161101d575b50602090868311600114610f62578792610f57575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161784555b8451918211610f2b5750600191610db68354611274565b818111610ec9575b506020908211600114610e1457839482939492610e09575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82841b9260031b1c191617905580f35b015190508480610dd6565b8284527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316855b818110610eb35750958385969710610e7c575b505050811b01905580f35b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055848080610e71565b8783015184559285019260209283019201610e5e565b8385527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68280850160051c82019260208610610f22575b0160051c019084905b828110610f17575050610dbe565b868155018490610f09565b92508192610f00565b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b015190508780610d6d565b8780527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016885b8181106110055750908460019594939210610fce575b505050811b018455610d9f565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055878080610fc1565b92936020600181928786015181550195019301610fab565b9091508680527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638680850160051c8201926020861061107f575b9085949392910160051c01905b8181106110715750610d58565b888155849350600101611064565b92508192611057565b6024856041847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600660248201527f216f776e657200000000000000000000000000000000000000000000000000006044820152fd5b8480fd5b9050346102cc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc5760209261115061139d565b9183602435928392338252875273ffffffffffffffffffffffffffffffffffffffff8282209516948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b849084346102cc57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc578280546111ed81611274565b80855291600191808316908115610873575060011461121857505050610809826108139403836112c7565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82861061125c5750505061080982602061081395820101946107f7565b8054602087870181019190915290950194810161123f565b90600182811c921680156112bd575b602083101461128e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611283565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761130857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60208082528251818301819052939260005b858110611389575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201611349565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036113c057565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036113c057565b81601f820112156113c05780359067ffffffffffffffff8211611308576040519261143b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601856112c7565b828452602083830101116113c057816000926020809301838601378301015290565b9190820391821161146a57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000467f0000000000000000000000000000000000000000000000000000000000000000036114e757507f000000000000000000000000000000000000000000000000000000000000000090565b604051815482916114f782611274565b808252816020948582019460019087828216918260001461163a5750506001146115e1575b50611529925003826112c7565b51902091604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f845260408301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a083015260a0825260c082019082821067ffffffffffffffff8311176115b4575060405251902090565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b87805286915087907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b85831061162257505061152993508201013861151c565b8054838801850152869450889390920191810161160b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016885261152995151560051b850101925038915061151c9050565b1561167d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216d696e746572000000000000000000000000000000000000000000000000006044820152fd5b91908110156116eb5760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3573ffffffffffffffffffffffffffffffffffffffff811681036113c0579056fea26469706673582212203fcb065c2a8662c478dc16f8529c892b0414c2a718f503cf896128812244bb2d64736f6c63430008130033",
  "deployedBytecode": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146111b057508163095ea7b3146111155781630ce403f414610caf57816318160ddd14610c7257816323b872dd14610b55578163313ce56714610af95781633644e51514610ab757816340c10f19146109d057816370a082311461096e5781637ecebe001461090c5781638da5cb5b146108b957816395d89b411461079e578382639dc29fac146106e857508163a9059cbb1461063b578163d505accf14610344578163dd62ed3e146102d0578163e8aa452714610156575063f46eccc4146100ed57600080fd5b346101525760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525760ff8160209373ffffffffffffffffffffffffffffffffffffffff61013f61139d565b1681526006855220541690519015158152f35b5080fd5b9050346102cc57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c85767ffffffffffffffff9181358381116102c457366023820112156102c457808301359384116102c457602494858201918636918760051b0101116102c057338752600680845260ff936101e085848b205416611676565b885b8781106101ed578980f35b73ffffffffffffffffffffffffffffffffffffffff80610216610211848c8a6116db565b61171a565b168b5283835286858c2054161590610232610211848c8a6116db565b168b52838352848b2090877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691161790557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610295576001016101e2565b888a6011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8680fd5b8580fd5b8380fd5b8280fd5b9050346102cc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc57602092829161030d61139d565b6103156113c5565b9173ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b8383346101525760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525761037d61139d565b906103866113c5565b91604435606435926084359260ff84168094036102c0574285106105de576103ac611499565b9573ffffffffffffffffffffffffffffffffffffffff8092169586895260209560058752848a209889549960018b01905585519285898501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528b89870152169a8b606086015288608086015260a085015260c084015260c0835260e0830167ffffffffffffffff94848210868311176105b157818852845190206101008501927f19010000000000000000000000000000000000000000000000000000000000008452610102860152610122850152604281526101608401948186109086111761058557848752519020835261018082015260a4356101a082015260c4356101c0909101528780528490889060809060015afa1561057b578651169687151580610572575b156105175786977f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259596975283528087208688528352818188205551908152a380f35b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152fd5b508488146104d4565b81513d88823e3d90fd5b60248c60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5060248c60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60648860208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b50503461015257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525760209161067661139d565b8273ffffffffffffffffffffffffffffffffffffffff60243592338552600387528285206106a585825461145d565b90551692838152600386522081815401905582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b80843461079b57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261079b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602061074361139d565b73ffffffffffffffffffffffffffffffffffffffff602435913387526006845261077260ff8789205416611676565b16938486526003835280862061078983825461145d565b9055816002540360025551908152a380f35b50fd5b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152578051908260018054916107e083611274565b808652928281169081156108735750600114610817575b505050610809826108139403836112c7565b5191829182611337565b0390f35b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82861061085b5750505061080982602061081395820101946107f7565b8054602087870181019190915290950194810161083e565b6108139750869350602092506108099491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101946107f7565b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525760209073ffffffffffffffffffffffffffffffffffffffff600754169051908152f35b5050346101525760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152578060209273ffffffffffffffffffffffffffffffffffffffff61095e61139d565b1681526005845220549051908152f35b5050346101525760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152578060209273ffffffffffffffffffffffffffffffffffffffff6109c061139d565b1681526003845220549051908152f35b9050346102cc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc57610a0861139d565b602435913385526006602052610a2360ff8587205416611676565b60025490838201809211610a8b5750849273ffffffffffffffffffffffffffffffffffffffff7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9360209360025516948585526003835280852082815401905551908152a380f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015257602090610af2611499565b9051908152f35b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b828434610c6f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610c6f57610b8e61139d565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610bb76113c5565b946044358573ffffffffffffffffffffffffffffffffffffffff80951694858752602098848a958652838920338a52865283892054857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c4c575b50505086885260038552828820610c2d85825461145d565b9055169586815260038452208181540190558551908152a35160018152f35b610c559161145d565b90888a528652838920338a528652838920558a8085610c15565b80fd5b50503461015257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610152576020906002549051908152f35b8391503461015257827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101525767ffffffffffffffff81358181116102c857610cff90369084016113e8565b9160243582811161111157610d1790369083016113e8565b9473ffffffffffffffffffffffffffffffffffffffff6007541633036110b4575082518281116110885780610d4c8654611274565b94601f9586811161101d575b50602090868311600114610f62578792610f57575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161784555b8451918211610f2b5750600191610db68354611274565b818111610ec9575b506020908211600114610e1457839482939492610e09575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82841b9260031b1c191617905580f35b015190508480610dd6565b8284527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316855b818110610eb35750958385969710610e7c575b505050811b01905580f35b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055848080610e71565b8783015184559285019260209283019201610e5e565b8385527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68280850160051c82019260208610610f22575b0160051c019084905b828110610f17575050610dbe565b868155018490610f09565b92508192610f00565b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b015190508780610d6d565b8780527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016885b8181106110055750908460019594939210610fce575b505050811b018455610d9f565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055878080610fc1565b92936020600181928786015181550195019301610fab565b9091508680527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638680850160051c8201926020861061107f575b9085949392910160051c01905b8181106110715750610d58565b888155849350600101611064565b92508192611057565b6024856041847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600660248201527f216f776e657200000000000000000000000000000000000000000000000000006044820152fd5b8480fd5b9050346102cc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc5760209261115061139d565b9183602435928392338252875273ffffffffffffffffffffffffffffffffffffffff8282209516948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b849084346102cc57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cc578280546111ed81611274565b80855291600191808316908115610873575060011461121857505050610809826108139403836112c7565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82861061125c5750505061080982602061081395820101946107f7565b8054602087870181019190915290950194810161123f565b90600182811c921680156112bd575b602083101461128e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611283565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761130857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60208082528251818301819052939260005b858110611389575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201611349565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036113c057565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036113c057565b81601f820112156113c05780359067ffffffffffffffff8211611308576040519261143b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601856112c7565b828452602083830101116113c057816000926020809301838601378301015290565b9190820391821161146a57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000467f0000000000000000000000000000000000000000000000000000000000000000036114e757507f000000000000000000000000000000000000000000000000000000000000000090565b604051815482916114f782611274565b808252816020948582019460019087828216918260001461163a5750506001146115e1575b50611529925003826112c7565b51902091604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f845260408301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a083015260a0825260c082019082821067ffffffffffffffff8311176115b4575060405251902090565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b87805286915087907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b85831061162257505061152993508201013861151c565b8054838801850152869450889390920191810161160b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016885261152995151560051b850101925038915061151c9050565b1561167d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216d696e746572000000000000000000000000000000000000000000000000006044820152fd5b91908110156116eb5760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3573ffffffffffffffffffffffffffffffffffffffff811681036113c0579056fea26469706673582212203fcb065c2a8662c478dc16f8529c892b0414c2a718f503cf896128812244bb2d64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6966,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 6968,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 6972,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 6976,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6982,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 6990,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 31995,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "minters",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 31997,
        "contract": "src/contracts/test/MockERC20.sol:MockERC20",
        "label": "owner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}